{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"SendPackedUserOp.s.sol:SendPackedUserOp\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[22]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_9\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_59\n\tadd\t0, r0, stack-[22]\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_29\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_11\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.ne\t@.BB0_59\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t164, r1\n\tcontext.gas_left\tr1\n\tadd\t@CPI0_14[0], r0, r2\n\tst.1\t128, r2\n\tst.1\t132, r0\n\tadd\t96, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t196, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_15[0], r1, r1\n\tst.1\t228, r0\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_31\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[21]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_38\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_32\n.BB0_9:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t164, r3, r4\n\tjump.lt\t@.BB0_59\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_59\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_9[0], r4, r2\n\tjump.gt\t@.BB0_59\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_59\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_9[0], r2, r6\n\tjump.gt\t@.BB0_40\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_10[0], r6, r7\n\tjump.gt\t@.BB0_40\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_59\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_21\n\tadd\tr0, r0, r6\n.BB0_20:\n\tshl.s\t5, r6, r7\n\tptr.add\tr3, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_20\n.BB0_21:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_23\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tshl.s\t3, r4, r4\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_23:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tadd\t96, r2, r3\n\tst.1\t64, r3\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r4\n\tjump.gt\t@.BB0_59\n\tst.1.inc\tr2, r3, r3\n\tptr.add.s\t68, r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_12[0], r4, r5\n\tjump.gt\t@.BB0_59\n\tst.1\tr3, r4\n\tptr.add.s\t100, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r4\n\tjump.gt\t@.BB0_59\n\tadd\t64, r2, r4\n\tst.1\tr4, r3\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_12[0], r3, r1\n\tjump.gt\t@.BB0_59\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_generateSignedUserOperation, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[17]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_struct_PackedUserOperation, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_29:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_32:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_35\n\tadd\tr0, r0, r6\n.BB0_34:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_34\n.BB0_35:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_37\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_37:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_38:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[8]\n\tsub.s!\t@CPI0_16[0], r1, r1\n\tjump.ge\t@.BB0_40\n\tadd\tstack-[8], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t14, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t32, r0, stack-[20]\n\tadd\t@CPI0_17[0], r0, r1\n\tadd\tr2, r0, stack-[7]\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.le\t@.BB0_41\n.BB0_40:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tadd\tstack-[17], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t11, r0, r1\n\tst.1.inc\tr2, r1, r2\n\tadd\t@CPI0_19[0], r0, r1\n\tadd\tr2, r0, stack-[16]\n\tst.1\tr2, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_21[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_520\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.sp\tr1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI0_22[0], r0, r1\n\tld.1\t64, r6\n\tst.1\tr6, r1\n\tadd\t4, r6, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r6, r2\n\tst.1\tr2, r1\n\tadd\t100, r6, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[16], r0, r7\n\tjump.eq\t@.BB0_45\n\tadd\tr0, r0, r3\n.BB0_44:\n\tadd\tr3, r2, r4\n\tadd\tr3, r7, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_44\n.BB0_45:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t36, r6, r2\n\tadd\t3, r0, r3\n\tst.1\tr2, r3\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, stack-[17]\n\tand\tstack-[17], r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd\tr6, r0, stack-[16]\n\tadd\tr2, r0, r3\n\tadd.lt\tr6, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_60\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_49\n\tadd\tr0, r0, r2\n.BB0_48:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_48\n.BB0_49:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_51\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_51:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_59\n\tadd\tstack-[16], r3, r2\n\tadd\tstack-[16], r1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\t31, r1, r1\n\tadd\t@CPI0_25[0], r0, r4\n\tsub!\tr1, r2, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_25[0], r1, r1\n\tand\t@CPI0_25[0], r2, r6\n\tsub!\tr1, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr1, r6, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1.inc\tr1, r6, r4\n\tsub.s!\t@CPI0_9[0], r6, r1\n\tjump.gt\t@.BB0_40\n\tshl.s\t5, r6, r1\n\tadd\t63, r1, r5\n\tand\t@CPI0_26[0], r5, r5\n\tadd\tstack-[14], r5, r5\n\tsub.s!\t@CPI0_9[0], r5, r7\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r5\n\tadd\tstack-[14], r0, r3\n\tst.1\tr3, r6\n\tadd\tr1, r4, stack-[15]\n\tsub!\tstack-[15], r2, r1\n\tjump.le\t@.BB0_66\n.BB0_59:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_60:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_63\n\tadd\tr0, r0, r6\n.BB0_62:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_62\n.BB0_63:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n.BB0_64:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_65:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_66:\n\tsub.s!\tstack-[15], r4, r1\n\tjump.ge\t@.BB0_93\n\tsub.s\t32, r2, r6\n\tadd\t@CPI0_25[0], r0, r7\n\tadd\tstack-[14], r0, r8\n.BB0_68:\n\tld.1.inc\tr4, r1, r4\n\tsub.s!\t@CPI0_9[0], r1, r9\n\tjump.gt\t@.BB0_59\n\tadd\tstack-[16], r1, r9\n\tsub\tr6, r9, r1\n\tsub.s!\t160, r1, r10\n\tadd\tr0, r0, r10\n\tadd.lt\tr7, r0, r10\n\tand\t@CPI0_25[0], r1, r1\n\tsub!\tr1, r0, r11\n\tadd\tr0, r0, r11\n\tadd.gt\tr7, r0, r11\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd.ne\tr10, r0, r11\n\tsub!\tr11, r0, r1\n\tjump.ne\t@.BB0_59\n\tld.1\t64, r10\n\tsub.s!\t@CPI0_27[0], r10, r1\n\tjump.gt\t@.BB0_40\n\tadd\t160, r10, r11\n\tst.1\t64, r11\n\tadd\t32, r9, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r12\n\tjump.gt\t@.BB0_59\n\tadd\tr1, r9, r13\n\tadd\t63, r13, r1\n\tsub!\tr1, r2, r12\n\tadd\tr0, r0, r12\n\tadd.ge\tr7, r0, r12\n\tand\t@CPI0_25[0], r1, r1\n\tand\t@CPI0_25[0], r2, r14\n\tsub!\tr1, r14, r15\n\tadd\tr0, r0, r15\n\tadd.lt\tr7, r0, r15\n\txor\tr1, r14, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd.ne\tr12, r0, r15\n\tsub!\tr15, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\t32, r13, r1\n\tld.1\tr1, r12\n\tsub.s!\t@CPI0_9[0], r12, r1\n\tjump.gt\t@.BB0_40\n\tadd\t31, r12, r1\n\tand\tstack-[17], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r11, r1\n\tsub.s!\t@CPI0_9[0], r1, r14\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r1\n\tst.1\tr11, r12\n\tadd\t64, r13, r13\n\tadd\tr12, r13, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_59\n\tadd\t192, r10, r14\n\tsub!\tr12, r0, r1\n\tjump.eq\t@.BB0_79\n\tadd\tr0, r0, r15\n.BB0_78:\n\tadd\tr15, r14, r1\n\tadd\tr15, r13, r3\n\tld.1\tr3, r3\n\tst.1\tr1, r3\n\tadd\t32, r15, r15\n\tsub!\tr15, r12, r1\n\tjump.lt\t@.BB0_78\n.BB0_79:\n\tadd\tr12, r14, r1\n\tst.1\tr1, r0\n\tst.1.inc\tr10, r11, r11\n\tadd\t64, r9, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.gt\t@.BB0_59\n\tadd\tr1, r9, r13\n\tadd\t63, r13, r1\n\tsub!\tr1, r2, r3\n\tadd\tr0, r0, r3\n\tadd.ge\tr7, r0, r3\n\tand\t@CPI0_25[0], r1, r1\n\tand\t@CPI0_25[0], r2, r12\n\tsub!\tr1, r12, r14\n\tadd\tr0, r0, r14\n\tadd.lt\tr7, r0, r14\n\txor\tr1, r12, r1\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tadd.ne\tr3, r0, r14\n\tsub!\tr14, r0, r1\n\tjump.ne\t@.BB0_59\n\tadd\t32, r13, r1\n\tld.1\tr1, r12\n\tsub.s!\t@CPI0_9[0], r12, r1\n\tjump.gt\t@.BB0_40\n\tadd\t31, r12, r1\n\tand\tstack-[17], r1, r1\n\tadd\t63, r1, r1\n\tand\tstack-[17], r1, r1\n\tld.1\t64, r14\n\tadd\tr14, r1, r1\n\tsub!\tr1, r14, r3\n\tadd\t0, r0, r15\n\tadd.lt\t1, r0, r15\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.gt\t@.BB0_40\n\tand!\t1, r15, r3\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r1\n\tst.1.inc\tr14, r12, r15\n\tadd\t64, r13, r13\n\tadd\tr12, r13, r1\n\tsub!\tr1, r2, r1\n\tjump.gt\t@.BB0_59\n\tsub!\tr12, r0, r1\n\tjump.eq\t@.BB0_88\n\tadd\tr0, r0, r1\n.BB0_87:\n\tadd\tr1, r15, r3\n\tadd\tr1, r13, r5\n\tld.1\tr5, r5\n\tst.1\tr3, r5\n\tadd\t32, r1, r1\n\tsub!\tr1, r12, r3\n\tjump.lt\t@.BB0_87\n.BB0_88:\n\tadd\tr15, r12, r1\n\tst.1\tr1, r0\n\tst.1\tr11, r14\n\tadd\t96, r9, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.gt\t@.BB0_59\n\tadd\t64, r10, r3\n\tst.1\tr3, r1\n\tadd\t128, r9, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB0_59\n\tadd\t96, r10, r3\n\tst.1\tr3, r1\n\tadd\t160, r9, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB0_59\n\tadd\t32, r8, r8\n\tadd\t128, r10, r3\n\tst.1\tr3, r1\n\tst.1\tr8, r10\n\tsub.s!\tstack-[15], r4, r1\n\tjump.lt\t@.BB0_68\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r6\n.BB0_93:\n\tadd\tstack-[14], r0, stack-[19]\n\tadd\t0, r0, stack-[18]\n\tsub!\tr6, r0, r1\n\tjump.ne\t@.BB0_95\n.BB0_94:\n\tld.1\t64, r1\n\tadd\t100, r1, r2\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\t@CPI0_65[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t54, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_62[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_66[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tadd\tr0, r0, stack-[4]\n\tadd\tr0, r0, stack-[5]\n\tadd\tr0, r0, stack-[3]\n\tadd\tr0, r0, r2\n\tadd\tstack-[14], r0, r3\n\tjump\t@.BB0_97\n.BB0_96:\n\tadd\tstack-[18], r0, r1\n\tadd\t1, r1, stack-[18]\n\tadd\t1, r1, r2\n\tadd\tstack-[19], r0, r3\n\tld.1\tr3, r1\n\tsub!\tr2, r1, r1\n\tjump.ge\t@.BB0_370\n.BB0_97:\n\tshl.s\t5, r2, r1\n\tadd\tr3, r1, r1\n\tadd\t32, r1, r1\n\tld.1\tr1, r1\n\tadd\t32, r1, r1\n\tadd\tr1, r0, stack-[14]\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\t64, r4\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_365\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_101\n\tadd\tr0, r0, r2\n.BB0_100:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_100\n.BB0_101:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_103\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_103:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_59\n\tadd\tstack-[16], r3, r5\n\tadd\tstack-[16], r1, r1\n\tadd\t31, r1, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_25[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_25[0], r3, r3\n\tand\t@CPI0_25[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_25[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_59\n\tld.1.inc\tr1, r1, r4\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.gt\t@.BB0_40\n\tadd\t31, r1, r3\n\tand\tstack-[17], r3, r3\n\tadd\t63, r3, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr3, r2, r3\n\tsub.s!\t@CPI0_9[0], r3, r6\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r3\n\tst.1.inc\tr2, r1, r3\n\tadd\tr1, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_59\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_114\n\tadd\tr0, r0, r5\n.BB0_113:\n\tadd\tr5, r3, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_113\n.BB0_114:\n\tadd\tr1, r3, r1\n\tst.1\tr1, r0\n\tld.1\t64, r5\n\tadd\t32, r5, r1\n\tadd\t@CPI0_30[0], r0, r4\n\tst.1\tr1, r4\n\tadd\t33, r5, r4\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r6\n\tjump.eq\t@.BB0_117\n\tadd\tr0, r0, r6\n.BB0_116:\n\tadd\tr6, r4, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_116\n.BB0_117:\n\tadd\tr2, r4, r3\n\tadd\t@CPI0_30[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t2, r2, r3\n\tst.1\tr5, r3\n\tadd\t65, r2, r2\n\tand\tstack-[17], r2, r3\n\tadd\tr3, r5, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r2\n\tadd\tstack-[15], r0, r3\n\tld.1.inc\tr3, r3, r4\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_96\n\tld.1\tr5, r5\n\tsub!\tr3, r5, r6\n\tjump.lt\t@.BB0_96\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_129\n\tsub\tr3, r5, r6\n\tadd\tr0, r0, r7\n.BB0_123:\n\tadd\tr0, r0, r8\n.BB0_124:\n\tadd\tr8, r7, r9\n\tsub!\tr3, r9, r10\n\tjump.le\t@.BB0_424\n\tadd\tr8, r1, r10\n\tadd\tr4, r9, r9\n\tld.1\tr9, r9\n\tld.1\tr10, r10\n\txor\tr10, r9, r9\n\tsub.s!\t@CPI0_31[0], r9, r9\n\tjump.ge\t@.BB0_127\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB0_124\n\tjump\t@.BB0_129\n.BB0_127:\n\tadd!\t1, r7, r8\n\tadd\t0, r0, r9\n\tadd.eq\t1, r0, r9\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB0_339\n\tsub!\tr7, r6, r7\n\tadd\tr8, r0, r7\n\tjump.lt\t@.BB0_123\n\tjump\t@.BB0_96\n.BB0_129:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r4\n\tsub.s!\t@CPI0_18[0], r2, r1\n\tjump.gt\t@.BB0_40\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI0_32[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t5, r0, r3\n\tst.1\tr2, r3\n\tld.1.inc\tr4, r2, r4\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_96\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB0_96\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_140\n\tsub\tr2, r3, r5\n\tadd\tr0, r0, r6\n.BB0_134:\n\tadd\tr0, r0, r7\n.BB0_135:\n\tadd\tr7, r6, r8\n\tsub!\tr2, r8, r9\n\tjump.le\t@.BB0_424\n\tadd\tr7, r1, r9\n\tadd\tr4, r8, r8\n\tld.1\tr8, r8\n\tld.1\tr9, r9\n\txor\tr9, r8, r8\n\tsub.s!\t@CPI0_31[0], r8, r8\n\tjump.ge\t@.BB0_138\n\tadd\t1, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB0_135\n\tjump\t@.BB0_140\n.BB0_138:\n\tadd!\t1, r6, r7\n\tadd\t0, r0, r8\n\tadd.eq\t1, r0, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_339\n\tsub!\tr6, r5, r6\n\tadd\tr7, r0, r6\n\tjump.lt\t@.BB0_134\n\tjump\t@.BB0_96\n.BB0_140:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r3\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_18[0], r4, r1\n\tjump.gt\t@.BB0_40\n\tadd\t64, r4, r1\n\tst.1\t64, r1\n\tadd\t32, r4, r1\n\tadd\t@CPI0_33[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t7, r0, r2\n\tst.1\tr4, r2\n\tld.1.inc\tr3, r3, r4\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_151\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_151\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_96\n\tsub\tr3, r2, r5\n\tadd\tr0, r0, r6\n.BB0_145:\n\tadd\tr0, r0, r7\n.BB0_146:\n\tadd\tr7, r6, r8\n\tsub!\tr3, r8, r9\n\tjump.le\t@.BB0_424\n\tadd\tr7, r1, r9\n\tadd\tr4, r8, r8\n\tld.1\tr8, r8\n\tld.1\tr9, r9\n\txor\tr9, r8, r8\n\tsub.s!\t@CPI0_31[0], r8, r8\n\tjump.ge\t@.BB0_149\n\tadd\t1, r7, r7\n\tsub!\tr7, r2, r8\n\tjump.lt\t@.BB0_146\n\tjump\t@.BB0_96\n.BB0_149:\n\tadd!\t1, r6, r7\n\tadd\t0, r0, r8\n\tadd.eq\t1, r0, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_339\n\tsub!\tr6, r5, r6\n\tadd\tr7, r0, r6\n\tjump.lt\t@.BB0_145\n.BB0_151:\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tld.1\t64, r7\n\tadd\t@CPI0_34[0], r0, r2\n\tst.1\tr7, r2\n\tadd\t4, r7, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r7, r3\n\tld.1.inc\tr1, r1, r2\n\tst.1\tr3, r1\n\tadd\t68, r7, r3\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_154\n\tadd\tr0, r0, r4\n.BB0_153:\n\tadd\tr4, r3, r5\n\tadd\tr2, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_153\n.BB0_154:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tand\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_0[0], r7, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tr7, r0, stack-[16]\n\tadd\tr4, r0, r2\n\tadd.lt\tr7, r0, r2\n\tshl.s\t64, r2, r2\n\tadd\t68, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_391\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_158\n\tadd\tr0, r0, r2\n.BB0_157:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_157\n.BB0_158:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_160\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_160:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_59\n\tadd\tstack-[16], r3, r3\n\tadd\tstack-[16], r1, r1\n\tadd\t31, r1, r2\n\tsub!\tr2, r3, r4\n\tadd\t@CPI0_25[0], r0, r7\n\tadd\tr0, r0, r4\n\tadd.ge\tr7, r0, r4\n\tand\t@CPI0_25[0], r2, r2\n\tand\t@CPI0_25[0], r3, r5\n\tsub!\tr2, r5, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr7, r0, r6\n\txor\tr2, r5, r2\n\tsub.s!\t@CPI0_25[0], r2, r2\n\tadd.ne\tr4, r0, r6\n\tsub!\tr6, r0, r2\n\tjump.ne\t@.BB0_59\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_40\n\tadd\t31, r1, r4\n\tand\tstack-[17], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tstack-[14], r4, r4\n\tsub.s!\t@CPI0_9[0], r4, r5\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r4\n\tst.1.inc\tr4, r1, r4\n\tadd\tr4, r0, stack-[13]\n\tadd\tr1, r2, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_59\n\tsub!\tr1, r0, r3\n\tadd\tstack-[13], r0, r6\n\tjump.eq\t@.BB0_171\n\tadd\tr0, r0, r3\n.BB0_170:\n\tadd\tr3, r6, r4\n\tadd\tr3, r2, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_170\n.BB0_171:\n\tadd\tr1, r6, r1\n\tst.1\tr1, r0\n\tld.1\t64, r7\n\tadd\t@CPI0_35[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r7, r2\n\tst.1\tr2, r1\n\tadd\t100, r7, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_174\n\tadd\tr0, r0, r3\n.BB0_173:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_173\n.BB0_174:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r2, r1\n\tsub\tr1, r7, r2\n\tsub.s\t4, r2, r3\n\tadd\t36, r7, r4\n\tst.1\tr4, r3\n\tadd\t32, r1, r3\n\tadd\t@CPI0_36[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t10, r0, r3\n\tst.1\tr1, r3\n\tsub.s!\t@CPI0_0[0], r7, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd\tr4, r0, r1\n\tadd.lt\tr7, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\t64, r2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tadd\tr7, r0, stack-[16]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_177\n\tadd\tr0, r0, r6\n.BB0_176:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_176\n.BB0_177:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_179\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_179:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_396\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r8\n\tsub!\tr8, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r8, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r8\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\t1, r0, stack-[3]\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\tstack-[4], r2, r1\n\tjump.le\t@.BB0_96\n\tadd\tr2, r0, stack-[2]\n\tadd\tr0, r0, r2\n\tjump\t@.BB0_186\n.BB0_185:\n\tadd\tstack-[15], r0, r2\n\tadd!\t1, r2, r2\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_339\n.BB0_186:\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\tr2, r0, stack-[15]\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r8, r2\n\tadd\tr8, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_345\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_190\n\tadd\tr0, r0, r2\n.BB0_189:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_189\n.BB0_190:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_192\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_192:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_59\n\tadd\tr3, r8, r5\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_25[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_25[0], r3, r3\n\tand\t@CPI0_25[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_25[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_59\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_40\n\tadd\t31, r1, r4\n\tand\tstack-[17], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_9[0], r4, r6\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r3, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_59\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_203\n\tadd\tr0, r0, r5\n.BB0_202:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_202\n.BB0_203:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI0_37[0], r0, r5\n\tst.1\tr1, r5\n\tadd\t47, r3, r5\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r6\n\tjump.eq\t@.BB0_206\n\tadd\tr0, r0, r6\n.BB0_205:\n\tadd\tr6, r5, r7\n\tadd\tr6, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_205\n.BB0_206:\n\tadd\tr2, r5, r4\n\tadd\t@CPI0_38[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t16, r2, r4\n\tst.1\tr3, r4\n\tadd\t79, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[16]\n\tsub.s!\t@CPI0_9[0], r4, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[16], r0, r10\n\tst.1\t64, r10\n\tadd\t@CPI0_39[0], r0, r2\n\tst.1\tr10, r2\n\tadd\t4, r10, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[14], r0, r4\n\tld.1\tr4, r4\n\tadd\t68, r10, r5\n\tst.1\tr5, r4\n\tadd\t100, r10, r5\n\tsub!\tr4, r0, r6\n\tadd\tstack-[13], r0, r9\n\tjump.eq\t@.BB0_211\n\tadd\tr0, r0, r6\n.BB0_210:\n\tadd\tr6, r5, r7\n\tadd\tr6, r9, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_210\n.BB0_211:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r2, r2\n\tadd\t36, r10, r5\n\tst.1\tr5, r2\n\tld.1\tr3, r3\n\tst.1.inc\tr4, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_214\n\tadd\tr0, r0, r4\n.BB0_213:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_213\n.BB0_214:\n\tadd\t31, r3, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr2, r10, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r10, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_217\n\tadd\tr0, r0, r6\n.BB0_216:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_216\n.BB0_217:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_219\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_219:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_340\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r4, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_59\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_337\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r2\n\tadd\tr4, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_350\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_229\n\tadd\tr0, r0, r2\n.BB0_228:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_228\n.BB0_229:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_231\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_231:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r1\n\tsub.s!\t@CPI0_9[0], r1, r2\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_59\n\tld.1\tr8, r2\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_59\n\tadd\tr3, r8, r5\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_59\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t@CPI0_9[0], r3, r2\n\tjump.gt\t@.BB0_40\n\tadd\t31, r3, r2\n\tand\tstack-[17], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_9[0], r2, r6\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_59\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_241\n\tadd\tr0, r0, r5\n.BB0_240:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_240\n.BB0_241:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tld.1\t64, r7\n\tadd\t32, r7, r4\n\tadd\t@CPI0_37[0], r0, r3\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r3\n\tadd\t47, r7, r3\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_244\n\tadd\tr0, r0, r4\n.BB0_243:\n\tadd\tr4, r3, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_243\n.BB0_244:\n\tadd\tr1, r3, r2\n\tadd\t@CPI0_40[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t29, r1, r2\n\tst.1\tr7, r2\n\tadd\t92, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr7, r0, stack-[10]\n\tadd\tr1, r7, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[16]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[16], r0, r8\n\tst.1\t64, r8\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t68, r8, r3\n\tst.1\tr3, r2\n\tadd\t100, r8, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[13], r0, r7\n\tjump.eq\t@.BB0_249\n\tadd\tr0, r0, r4\n.BB0_248:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_248\n.BB0_249:\n\tadd\tr2, r3, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r3, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r8, r2\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tadd\tstack-[11], r0, r6\n\tjump.eq\t@.BB0_252\n\tadd\tr0, r0, r3\n.BB0_251:\n\tadd\tr3, r1, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_251\n.BB0_252:\n\tadd\t31, r2, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tsub\tr1, r8, r1\n\tadd\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r8, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_255\n\tadd\tr0, r0, r6\n.BB0_254:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_254\n.BB0_255:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_257\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_257:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_355\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r8\n\tsub!\tr8, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r8, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r8\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\t0, r0, r2\n\tadd.ne\t1, r0, r2\n\tsub!\tr1, r2, r2\n\tjump.ne\t@.BB0_59\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_185\n\tadd\t@CPI0_41[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[14], r0, r2\n\tld.1\tr2, r2\n\tadd\t68, r8, r3\n\tst.1\tr3, r2\n\tadd\t100, r8, r3\n\tsub!\tr2, r0, r4\n\tadd\tstack-[13], r0, r7\n\tjump.eq\t@.BB0_266\n\tadd\tr0, r0, r4\n.BB0_265:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB0_265\n.BB0_266:\n\tadd\tr2, r3, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r3, r3\n\tsub\tr3, r1, r1\n\tadd\t36, r8, r2\n\tst.1\tr2, r1\n\tadd\tstack-[10], r0, r1\n\tld.1\tr1, r2\n\tst.1.inc\tr3, r2, r1\n\tsub!\tr2, r0, r3\n\tadd\tstack-[11], r0, r6\n\tjump.eq\t@.BB0_269\n\tadd\tr0, r0, r3\n.BB0_268:\n\tadd\tr3, r1, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_268\n.BB0_269:\n\tadd\t31, r2, r3\n\tand\tstack-[17], r3, r3\n\tadd\tr2, r1, r2\n\tst.1\tr2, r0\n\tsub\tr1, r8, r1\n\tadd\tr1, r3, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r8, r2\n\tadd\tr8, r0, stack-[16]\n\tadd\tr4, r0, r2\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_360\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_273\n\tadd\tr0, r0, r2\n.BB0_272:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_272\n.BB0_273:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_275\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_275:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r2\n\tadd\tr2, r8, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_59\n\tld.1\tr8, r2\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_59\n\tadd\tr3, r8, r5\n\tadd\tr2, r8, r2\n\tadd\t31, r2, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_25[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_25[0], r3, r3\n\tand\t@CPI0_25[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_25[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_59\n\tld.1.inc\tr2, r3, r4\n\tsub.s!\t@CPI0_9[0], r3, r2\n\tjump.gt\t@.BB0_40\n\tadd\t31, r3, r2\n\tand\tstack-[17], r2, r2\n\tadd\t63, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r1, r2\n\tsub.s!\t@CPI0_9[0], r2, r6\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r2\n\tst.1.inc\tr1, r3, r2\n\tadd\tr3, r4, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_59\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_286\n\tadd\tr0, r0, r5\n.BB0_285:\n\tadd\tr5, r2, r6\n\tadd\tr5, r4, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_285\n.BB0_286:\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tld.1\t64, r3\n\tadd\t32, r3, r4\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_289\n\tadd\tr0, r0, r5\n.BB0_288:\n\tadd\tr5, r4, r6\n\tadd\tr5, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_288\n.BB0_289:\n\tadd\tr1, r4, r2\n\tst.1\tr2, r0\n\tst.1\tr3, r1\n\tadd\t63, r1, r1\n\tand\tstack-[17], r1, r2\n\tadd\tr2, r3, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r5\n\tjump.gt\t@.BB0_40\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r4, r1\n\tadd\t@CPI0_0[0], r0, r5\n\tadd.ge\tr5, r0, r4\n\tshl.s\t64, r4, r1\n\tld.1\tr3, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr5, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr5, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_59\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[8], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r4\n\tadd\tstack-[7], r0, r7\n\tjump.eq\t@.BB0_295\n\tadd\tr0, r0, r4\n.BB0_294:\n\tadd\tr4, r3, r5\n\tadd\tr4, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_294\n.BB0_295:\n\tadd\tr1, r3, r4\n\tst.1\tr4, r0\n\tst.1\tr2, r1\n\tadd\t63, r1, r1\n\tand\tstack-[17], r1, r4\n\tadd\tr4, r2, r1\n\tsub!\tr1, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_9[0], r1, r5\n\tjump.gt\t@.BB0_40\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_0[0], r3, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r3\n\tshl.s\t64, r3, r1\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_59\n\tld.1\t64, r8\n\tld\tr1, r1\n\tsub!\tstack-[16], r1, r1\n\tjump.ne\t@.BB0_185\n\tadd\t@CPI0_28[0], r0, r1\n\tst.1\tr8, r1\n\tadd\t4, r8, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r8, r2\n\tadd\tr8, r0, stack-[16]\n\tadd\tr3, r0, r2\n\tadd.lt\tr8, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_373\n\tsub!\tr5, r0, r2\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_303\n\tadd\tr0, r0, r2\n.BB0_302:\n\tshl.s\t5, r2, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_302\n.BB0_303:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_305\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr8, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_305:\n\tadd\t31, r3, r1\n\tand\t@CPI0_24[0], r1, r1\n\tadd\tr1, r8, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r2, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tld.1\tr8, r1\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_59\n\tadd\tr3, r8, r5\n\tadd\tr1, r8, r1\n\tadd\t31, r1, r3\n\tsub!\tr3, r5, r4\n\tadd\t@CPI0_25[0], r0, r8\n\tadd\tr0, r0, r4\n\tadd.ge\tr8, r0, r4\n\tand\t@CPI0_25[0], r3, r3\n\tand\t@CPI0_25[0], r5, r6\n\tsub!\tr3, r6, r7\n\tadd\tr0, r0, r7\n\tadd.lt\tr8, r0, r7\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_25[0], r3, r3\n\tadd.ne\tr4, r0, r7\n\tsub!\tr7, r0, r3\n\tjump.ne\t@.BB0_59\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_40\n\tadd\t31, r1, r4\n\tand\tstack-[17], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tr4, r2, r4\n\tsub.s!\t@CPI0_9[0], r4, r6\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r4\n\tst.1.inc\tr2, r1, r4\n\tadd\tr1, r3, r6\n\tsub!\tr6, r5, r5\n\tjump.gt\t@.BB0_59\n\tsub!\tr1, r0, r5\n\tjump.eq\t@.BB0_316\n\tadd\tr0, r0, r5\n.BB0_315:\n\tadd\tr5, r4, r6\n\tadd\tr5, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB0_315\n.BB0_316:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tld.1\t64, r3\n\tadd\t32, r3, r1\n\tadd\t@CPI0_37[0], r0, r5\n\tst.1\tr1, r5\n\tadd\t47, r3, r5\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r6\n\tjump.eq\t@.BB0_319\n\tadd\tr0, r0, r6\n.BB0_318:\n\tadd\tr6, r5, r7\n\tadd\tr6, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r2, r7\n\tjump.lt\t@.BB0_318\n.BB0_319:\n\tadd\tr2, r5, r4\n\tadd\t@CPI0_43[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t32, r2, r4\n\tst.1\tr3, r4\n\tadd\t95, r2, r2\n\tand\tstack-[17], r2, r2\n\tadd\tr2, r3, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[16]\n\tsub.s!\t@CPI0_9[0], r4, r4\n\tjump.gt\t@.BB0_40\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[16], r0, r10\n\tst.1\t64, r10\n\tadd\t@CPI0_44[0], r0, r2\n\tst.1\tr10, r2\n\tadd\t4, r10, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr2, r4\n\tadd\tstack-[14], r0, r4\n\tld.1\tr4, r4\n\tadd\t68, r10, r5\n\tst.1\tr5, r4\n\tadd\t100, r10, r5\n\tsub!\tr4, r0, r6\n\tadd\tstack-[13], r0, r9\n\tjump.eq\t@.BB0_324\n\tadd\tr0, r0, r6\n.BB0_323:\n\tadd\tr6, r5, r7\n\tadd\tr6, r9, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_323\n.BB0_324:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[17], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r2, r2\n\tadd\t36, r10, r5\n\tst.1\tr5, r2\n\tld.1\tr3, r3\n\tst.1.inc\tr4, r3, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_327\n\tadd\tr0, r0, r4\n.BB0_326:\n\tadd\tr4, r2, r5\n\tadd\tr4, r1, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_326\n.BB0_327:\n\tadd\t31, r3, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr3, r2, r3\n\tst.1\tr3, r0\n\tsub\tr2, r10, r2\n\tadd\tr2, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r10, r2\n\tadd\tr4, r0, r2\n\tadd.lt\tr10, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_330\n\tadd\tr0, r0, r6\n.BB0_329:\n\tshl.s\t5, r6, r7\n\tadd\tr9, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_329\n.BB0_330:\n\tand!\t31, r4, r6\n\tjump.eq\t@.BB0_332\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r7\n\tadd\tr9, r5, r5\n\tshl.s\t3, r6, r6\n\tld.1\tr5, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr7, r7\n\tsub\t256, r6, r6\n\tshr\tr7, r6, r7\n\tshl\tr7, r6, r6\n\tor\tr6, r8, r6\n\tst.1\tr5, r6\n.BB0_332:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_378\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r9, r8\n\tsub!\tr8, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r8, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r8\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_59\n\tadd\tstack-[16], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.le\t@.BB0_185\n\tjump\t@.BB0_59\n.BB0_337:\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI0_12[0], r1, r1\n\tjump.eq\t@.BB0_96\n\tadd\tstack-[2], r0, stack-[4]\n\tjump\t@.BB0_96\n.BB0_339:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_340:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_343\n\tadd\tr0, r0, r6\n.BB0_342:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_342\n.BB0_343:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_345:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_348\n\tadd\tr0, r0, r6\n.BB0_347:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_347\n.BB0_348:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_350:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_353\n\tadd\tr0, r0, r6\n.BB0_352:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_352\n.BB0_353:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_355:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_358\n\tadd\tr0, r0, r6\n.BB0_357:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_357\n.BB0_358:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_360:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_363\n\tadd\tr0, r0, r6\n.BB0_362:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_362\n.BB0_363:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_365:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_368\n\tadd\tr0, r0, r6\n.BB0_367:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_367\n.BB0_368:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_370:\n\tsub!\tstack-[3], r0, r1\n\tjump.eq\t@.BB0_94\n\tadd\tstack-[5], r0, r1\n\tand!\t@CPI0_12[0], r1, r1\n\tjump.ne\t@.BB0_383\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_61[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t20, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_62[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_63[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_373:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_376\n\tadd\tr0, r0, r6\n.BB0_375:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_375\n.BB0_376:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_378:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_381\n\tadd\tr0, r0, r6\n.BB0_380:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_380\n.BB0_381:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_383:\n\tcontext.sp\tr1\n\tsub\tstack-[1], r1, r1\n\tnop\tstack+=[r1]\n\tld.1\t64, r2\n\tadd\tstack-[20], r0, stack-[16]\n\tadd\tstack-[20], r2, r1\n\tadd\t@CPI0_46[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r2, r1\n\tadd\t@CPI0_47[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r2, r1\n\tadd\t@CPI0_48[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t68, r0, r1\n\tst.1.inc\tr2, r1, r1\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tadd\t128, r2, r4\n\tst.1\t64, r4\n\tadd\tr4, r0, stack-[15]\n\tadd\tstack-[16], r4, r3\n\tadd\t@CPI0_49[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t164, r2, r3\n\tadd\t@CPI0_50[0], r0, r4\n\tst.1\tr3, r4\n\tadd\t228, r2, r3\n\tadd\tstack-[22], r0, r5\n\tadd\tstack-[9], r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r3\n\tadd\tr5, r0, stack-[14]\n\tst.1\tr3, r5\n\tadd\t260, r2, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t292, r2, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_387\n\tadd\tr0, r0, r4\n.BB0_386:\n\tadd\tr4, r2, r5\n\tadd\tr1, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_386\n.BB0_387:\n\tadd\tr3, r2, r1\n\tst.1\tr1, r0\n\tadd\t31, r3, r1\n\tand\tstack-[17], r1, r1\n\tadd\t132, r1, r2\n\tadd\tstack-[15], r0, r4\n\tst.1\tr4, r2\n\tadd\t195, r1, r1\n\tand\tstack-[17], r1, r1\n\tadd\tr1, r4, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[17]\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tadd\tstack-[17], r0, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_12[0], r0, r1\n\tand\tstack-[21], r1, r2\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1.inc\tr3, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tcontext.gas_left\tr1\n\tadd\tr2, r0, stack-[13]\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_401\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t96, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_411\n.BB0_391:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_394\n\tadd\tr0, r0, r6\n.BB0_393:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_393\n.BB0_394:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_396:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_399\n\tadd\tr0, r0, r6\n.BB0_398:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_398\n.BB0_399:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.BB0_401:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tsub!\tstack-[14], r0, r2\n\tjump.ne\t@.BB0_403\n\tor\t@CPI0_53[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tjump\t@.BB0_404\n.BB0_403:\n\tor\t@CPI0_52[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr0, r0, r5\n.BB0_404:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tadd\tstack-[17], r0, r10\n\tjump.eq\t@.BB0_408\n\tadd\tr0, r0, r7\n.BB0_407:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_407\n.BB0_408:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_410\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_410:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_425\n.BB0_411:\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t96, r3, r1\n\tjump.lt\t@.BB0_59\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.gt\t@.BB0_40\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_12[0], r1, r3\n\tjump.gt\t@.BB0_59\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack-[11], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r4\n\tjump.gt\t@.BB0_59\n\tst.1\tr1, r3\n\tadd\tstack-[17], r0, r1\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_12[0], r1, r3\n\tjump.gt\t@.BB0_59\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[5], r0, r3\n\tnear_call\tr0, @fun_generateSignedUserOperation, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[15]\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.gt\t@.BB0_40\n\tadd\tstack-[15], r0, r3\n\tadd\t64, r3, r2\n\tst.1\t64, r2\n\tadd\t1, r0, r2\n\tst.1.inc\tr3, r2, r2\n\tadd\tstack-[16], r0, r4\n\tsub!\tstack-[14], r4, r3\n\tjump.ge\t@.BB0_423\n\tadd\tstack-[15], r0, r4\n\tadd\tstack-[16], r4, r3\n\tadd\tstack-[14], r0, r4\n.BB0_420:\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_54[0], r5, r6\n\tjump.gt\t@.BB0_40\n\tadd\t288, r5, r6\n\tst.1\t64, r6\n\tadd\t256, r5, r6\n\tadd\tstack-[9], r0, r7\n\tst.1\tr6, r7\n\tadd\t224, r5, r6\n\tst.1\tr6, r7\n\tadd\t96, r5, r6\n\tst.1\tr6, r7\n\tadd\t64, r5, r6\n\tst.1\tr6, r7\n\tadd\t192, r5, r6\n\tst.1\tr6, r0\n\tadd\t160, r5, r6\n\tst.1\tr6, r0\n\tadd\t128, r5, r6\n\tst.1\tr6, r0\n\tadd\t32, r5, r6\n\tst.1\tr6, r0\n\tst.1\tr5, r0\n\tadd\tr3, r4, r6\n\tst.1\tr6, r5\n\tadd\tstack-[16], r4, r5\n\tsub!\tr5, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tand!\t1, r4, r4\n\tadd\tr5, r0, r4\n\tjump.ne\t@.BB0_420\n\tadd\tstack-[15], r0, r3\n\tld.1\tr3, r3\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_424\n.BB0_423:\n\tst.1\tr2, r1\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_432\n.BB0_424:\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_29[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_425:\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_59\n\tptr.add.s\tstack-[14], r1, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_429\n\tadd\tr0, r0, r6\n.BB0_428:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_428\n.BB0_429:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_431\n.BB0_430:\n\tshl.s\t5, r5, r5\n\tptr.add\tr2, r5, r2\n\tadd\tr1, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr2, r2\n\tsub\t256, r4, r4\n\tshr\tr2, r4, r2\n\tshl\tr2, r4, r2\n\tor\tr2, r6, r2\n\tst.1\tr5, r2\n.BB0_431:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_432:\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_520\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_435\n.BB0_434:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[14], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tmul\t@CPI0_60[0], r3, r1, r2\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_435:\n\tld.1\t64, r4\n\tadd\t@CPI0_57[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[11]\n\tshl.s\t192, r2, r1\n\tor\tstack-[11], r1, r1\n\tsub!\tstack-[14], r0, r2\n\tjump.ne\t@.BB0_437\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tjump\t@.BB0_442\n.BB0_437:\n\tor\t@CPI0_52[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\t@CPI0_23[0], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[14], r3, r4\n\tadd\tstack-[14], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_440\n\tadd\tr0, r0, r6\n.BB0_439:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[17], r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_439\n.BB0_440:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_442\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[17], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB0_442:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_446\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_40\n\tadd\tstack-[17], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_452\n\tsub.s!\t96, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_462\n.BB0_446:\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_59\n\tptr.add.s\tstack-[14], r1, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_450\n\tadd\tr0, r0, r6\n.BB0_449:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_449\n.BB0_450:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_431\n\tjump\t@.BB0_430\n.BB0_452:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[11], r1, r1\n\tsub!\tstack-[14], r0, r2\n\tjump.ne\t@.BB0_454\n\tor\t@CPI0_53[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tjump\t@.BB0_455\n.BB0_454:\n\tor\t@CPI0_52[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr0, r0, r5\n.BB0_455:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_459\n\tadd\tr0, r0, r7\n.BB0_458:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_458\n.BB0_459:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_461\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_461:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_471\n.BB0_462:\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub.s!\t@CPI0_9[0], r2, r5\n\tjump.gt\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t96, r3, r3\n\tjump.lt\t@.BB0_59\n\tsub.s!\t@CPI0_11[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tadd\t96, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[17], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r5\n\tjump.gt\t@.BB0_59\n\tst.1.inc\tr2, r3, r3\n\tadd\tstack-[10], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_12[0], r5, r6\n\tjump.gt\t@.BB0_59\n\tst.1\tr3, r5\n\tadd\tstack-[17], r0, r3\n\tadd\t64, r3, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r5\n\tjump.gt\t@.BB0_59\n\tadd\t64, r2, r5\n\tst.1\tr5, r3\n\tld.1\tr2, r2\n\tld.1\t64, r5\n\tadd\t@CPI0_51[0], r0, r3\n\tadd\tr5, r0, stack-[17]\n\tst.1.inc\tr5, r3, r3\n\tadd\tr3, r0, stack-[11]\n\tand\t@CPI0_12[0], r2, stack-[10]\n\tcontext.gas_left\tr2\n\tadd\tstack-[13], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_486\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tadd\tstack-[17], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tsub!\tstack-[14], r0, r2\n\tjump.ne\t@.BB0_477\n\tor\t@CPI0_53[0], r1, r1\n\tadd\tstack-[13], r0, r2\n\tjump\t@.BB0_478\n.BB0_471:\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_59\n\tptr.add.s\tstack-[14], r1, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_475\n\tadd\tr0, r0, r6\n.BB0_474:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_474\n.BB0_475:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_431\n\tjump\t@.BB0_430\n.BB0_477:\n\tor\t@CPI0_52[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[13], r0, r4\n\tadd\tr0, r0, r5\n.BB0_478:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_482\n\tadd\tr0, r0, r7\n.BB0_481:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_481\n.BB0_482:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_484\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_484:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_501\n\tadd\t31, r4, r1\n\tand\t224, r1, r1\n.BB0_486:\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_40\n\tst.1\t64, r2\n\tsub.s!\t96, r4, r1\n\tjump.lt\t@.BB0_59\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.gt\t@.BB0_40\n\tadd\t96, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_12[0], r1, r3\n\tjump.gt\t@.BB0_59\n\tst.1.inc\tr2, r1, r1\n\tadd\tstack-[11], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_12[0], r3, r4\n\tjump.gt\t@.BB0_59\n\tst.1\tr1, r3\n\tadd\tstack-[17], r0, r1\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_12[0], r1, r1\n\tjump.gt\t@.BB0_59\n\tadd\t64, r2, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_520\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_434\n\tld.1\t64, r3\n\tadd\t@CPI0_58[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tld.1\tr1, r4\n\tadd\t68, r3, r1\n\tst.1\tr1, r4\n\tadd\tr3, r0, stack-[12]\n\tadd\t100, r3, r2\n\tshl.s\t5, r4, r1\n\tadd\tr2, r0, r3\n\tadd\tr1, r2, r2\n\tadd\tr4, r0, stack-[11]\n\tsub!\tstack-[14], r4, r1\n\tjump.ge\t@.BB0_498\n\tadd\tstack-[14], r0, stack-[17]\n.BB0_497:\n\tsub.s\tstack-[12], r2, r1\n\tsub.s\t100, r1, r1\n\tadd\tr3, r0, stack-[13]\n\tst.1\tr3, r1\n\tadd\tstack-[15], r0, r1\n\tadd\tstack-[16], r1, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\tr1, r1\n\tnear_call\tr0, @abi_encode_struct_PackedUserOperation, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r2\n\tadd\tstack-[13], r2, r3\n\tadd\tr1, r0, r2\n\tadd\tstack-[17], r0, r4\n\tadd\t1, r4, r4\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\tstack-[11], r4, r1\n\tjump.lt\t@.BB0_497\n.BB0_498:\n\tadd\tstack-[12], r0, r1\n\tadd\t36, r1, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[10], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_513\n\tadd\tstack-[12], r0, r5\n\tsub\tr2, r5, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tsub!\tstack-[14], r0, r2\n\tjump.ne\t@.BB0_507\n\tadd\tstack-[10], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tjump\t@.BB0_512\n.BB0_501:\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_59\n\tptr.add.s\tstack-[14], r1, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_505\n\tadd\tr0, r0, r6\n.BB0_504:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_504\n.BB0_505:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_431\n\tjump\t@.BB0_430\n.BB0_507:\n\tor\t@CPI0_42[0], r1, r1\n\tadd\t32777, r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tstack-[10], r0, r4\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\tstack-[14], r3, r4\n\tadd\tstack-[14], r0, r5\n\tadd.lt\tr3, r0, r5\n\tand\t31, r5, r4\n\tshr.s!\t5, r5, r5\n\tjump.eq\t@.BB0_510\n\tadd\tr0, r0, r6\n.BB0_509:\n\tshl.s\t5, r6, r7\n\tadd\tstack-[12], r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_509\n.BB0_510:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_512\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r6\n\tadd\tstack-[12], r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r7\n\tshl\tr7, r4, r7\n\tshr\tr7, r4, r7\n\tld\tr6, r6\n\tsub\t256, r4, r4\n\tshr\tr6, r4, r6\n\tshl\tr6, r4, r4\n\tor\tr4, r7, r4\n\tst.1\tr5, r4\n.BB0_512:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_521\n.BB0_513:\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_40\n\tadd\tstack-[12], r0, r1\n\tst.1\t64, r1\n\tsub!\tstack-[14], r0, r1\n\tjump.ne\t@.BB0_434\n\tadd\t@CPI0_55[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_23[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_56[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_520\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_59\n\tld.1\t64, r4\n\tadd\t@CPI0_59[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_53[0], r1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_527\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_9[0], r1, r1\n\tjump.gt\t@.BB0_40\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_520:\n\trevert\n.BB0_521:\n\tadd\tstack-[14], r3, r2\n\tsub!\tr2, r3, r2\n\tjump.gt\t@.BB0_59\n\tptr.add.s\tstack-[14], r1, r2\n\tld.1\t64, r1\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_525\n\tadd\tr0, r0, r6\n.BB0_524:\n\tshl.s\t5, r6, r7\n\tadd\tr1, r7, r8\n\tptr.add\tr2, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_524\n.BB0_525:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_431\n\tjump\t@.BB0_430\n.BB0_527:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_530\n\tadd\tr0, r0, r6\n.BB0_529:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_529\n.BB0_530:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_65\n\tjump\t@.BB0_64\n.func_end0:\n\nabi_encode_struct_PackedUserOperation:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tand\t@CPI1_0[0], r3, r3\n\tst.1.inc\tr2, r3, r3\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tld.1\tr3, r3\n\tadd\t64, r2, r4\n\tadd\t288, r0, r5\n\tst.1\tr4, r5\n\tadd\t288, r2, r4\n\tld.1.inc\tr3, r3, r5\n\tst.1\tr4, r3\n\tadd\t320, r2, r4\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r6\n.BB1_2:\n\tadd\tr6, r4, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r4, r5\n\tst.1\tr5, r0\n\tadd\t31, r3, r5\n\tsub.s\t32, r0, r3\n\tand\tr5, r3, r5\n\tadd\tr5, r4, r4\n\tadd\t96, r1, r5\n\tld.1\tr5, r5\n\tsub\tr4, r2, r6\n\tadd\t96, r2, r7\n\tst.1\tr7, r6\n\tld.1.inc\tr5, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_6\n\tadd\tr0, r0, r7\n.BB1_5:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_5\n.BB1_6:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t128, r1, r6\n\tld.1\tr6, r6\n\tadd\t128, r2, r7\n\tst.1\tr7, r6\n\tadd\t160, r1, r6\n\tld.1\tr6, r6\n\tadd\t160, r2, r7\n\tst.1\tr7, r6\n\tadd\t192, r1, r6\n\tld.1\tr6, r6\n\tadd\t192, r2, r7\n\tst.1\tr7, r6\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r2, r5\n\tadd\t224, r2, r6\n\tadd\t224, r1, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r5\n\tld.1.inc\tr7, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_9\n\tadd\tr0, r0, r7\n.BB1_8:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_8\n.BB1_9:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr5, r4, r5\n\tadd\t256, r1, r1\n\tld.1\tr1, r1\n\tsub\tr5, r2, r4\n\tadd\t256, r2, r2\n\tst.1\tr2, r4\n\tld.1.inc\tr1, r2, r4\n\tst.1.inc\tr5, r2, r1\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB1_12\n\tadd\tr0, r0, r5\n.BB1_11:\n\tadd\tr5, r1, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB1_11\n.BB1_12:\n\tadd\tr2, r1, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tret\n.func_end1:\n\nfun_generateSignedUserOperation:\n.func_begin2:\n\tnop\tstack+=[5]\n\tadd\tr2, r0, stack-[2]\n\tadd\tr1, r0, stack-[3]\n\tld.1\t64, r1\n\tsub.s!\t@CPI2_0[0], r1, r2\n\tjump.ge\t@.BB2_1\n\tadd\t288, r1, r2\n\tst.1\t64, r2\n\tadd\t256, r1, r2\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t224, r1, r2\n\tst.1\tr2, r4\n\tadd\t96, r1, r2\n\tst.1\tr2, r4\n\tadd\t64, r1, r2\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr2, r4\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t160, r1, r2\n\tst.1\tr2, r0\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t@CPI2_1[0], r0, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[5]\n\tst.1\tr4, r1\n\tand\t@CPI2_2[0], r3, r2\n\tadd\t4, r4, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr1, r2\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_3[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_4[0], r1, r1\n\tadd\t@CPI2_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_86\n\tadd\tr0, r0, r7\n.BB2_5:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_5\n.BB2_86:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB2_7\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_7:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_8\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tr1, r10, r2\n\tsub!\tr2, r1, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI2_6[0], r2, r5\n\tjump.gt\t@.BB2_1\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r2\n\tsub.s!\t31, r3, r4\n\tjump.le\t@.BB2_16\n\tld.1\tr10, r4\n\tsub.s!\t@CPI2_6[0], r4, r5\n\tjump.gt\t@.BB2_16\n\tsub.s\t1, r4, r4\n\tsub.s!\t@CPI2_7[0], r4, r5\n\tjump.ge\t@.BB2_19\n\tsub.s!\t@CPI2_8[0], r2, r5\n\tjump.gt\t@.BB2_1\n\tadd\t288, r2, r5\n\tst.1\t64, r5\n\tadd\t256, r2, r5\n\tadd\tstack-[4], r0, r6\n\tst.1\tr5, r6\n\tadd\t224, r2, r5\n\tst.1\tr5, r6\n\tadd\t96, r2, r5\n\tst.1\tr5, r6\n\tadd\t64, r2, r5\n\tst.1\tr5, r6\n\tadd\t192, r2, r5\n\tst.1\tr5, r0\n\tadd\t160, r2, r5\n\tst.1\tr5, r0\n\tadd\t128, r2, r5\n\tst.1\tr5, r0\n\tadd\t32, r2, r5\n\tst.1\tr5, r0\n\tst.1\tr2, r0\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI2_8[0], r2, r2\n\tjump.gt\t@.BB2_1\n\tadd\tstack-[5], r0, r5\n\tadd\t288, r5, r2\n\tst.1\t64, r2\n\tadd\tstack-[1], r0, r2\n\tst.1.inc\tr5, r2, r2\n\tst.1\tr2, r4\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_9[0], r6, r4\n\tjump.gt\t@.BB2_1\n\tadd\t32, r6, r4\n\tst.1\t64, r4\n\tst.1\tr6, r0\n\tadd\tstack-[5], r0, r9\n\tadd\t192, r9, r4\n\tadd\t@CPI2_10[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t160, r9, r5\n\tadd\t@CPI2_11[0], r0, r7\n\tst.1\tr5, r7\n\tadd\t128, r9, r8\n\tadd\t@CPI2_12[0], r0, r7\n\tst.1\tr8, r7\n\tadd\t96, r9, r10\n\tadd\tstack-[3], r0, r7\n\tst.1\tr10, r7\n\tadd\t64, r9, r7\n\tst.1\tr7, r6\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_9[0], r6, r9\n\tjump.gt\t@.BB2_1\n\tadd\t32, r6, r9\n\tst.1\t64, r9\n\tst.1\tr6, r0\n\tadd\tstack-[5], r0, r9\n\tadd\t224, r9, r9\n\tst.1\tr9, r6\n\tld.1\t64, r6\n\tsub.s!\t@CPI2_9[0], r6, r11\n\tjump.gt\t@.BB2_1\n\tadd\t32, r6, r11\n\tst.1\t64, r11\n\tst.1\tr6, r0\n\tadd\tstack-[5], r0, r12\n\tadd\t256, r12, r11\n\tadd\tr11, r0, stack-[3]\n\tst.1\tr11, r6\n\tadd\tstack-[2], r0, r6\n\tld.1\tr6, r13\n\tld.1\t64, r14\n\tadd\t@CPI2_13[0], r0, r6\n\tst.1\tr14, r6\n\tadd\t4, r14, r6\n\tadd\t32, r0, r11\n\tst.1\tr6, r11\n\tld.1\tr12, r6\n\tand\t@CPI2_2[0], r6, r11\n\tadd\t36, r14, r6\n\tst.1\tr6, r11\n\tld.1\tr2, r2\n\tadd\t68, r14, r11\n\tst.1\tr11, r2\n\tld.1\tr7, r2\n\tadd\t100, r14, r7\n\tadd\t288, r0, r11\n\tst.1\tr7, r11\n\tadd\t324, r14, r11\n\tld.1.inc\tr2, r7, r12\n\tst.1\tr11, r7\n\tadd\tr14, r0, stack-[4]\n\tadd\t356, r14, r11\n\tand\t@CPI2_2[0], r13, r2\n\tsub!\tr7, r0, r13\n\tjump.eq\t@.BB2_28\n\tadd\tr0, r0, r13\n.BB2_27:\n\tadd\tr13, r11, r14\n\tadd\tr12, r13, r15\n\tld.1\tr15, r15\n\tst.1\tr14, r15\n\tadd\t32, r13, r13\n\tsub!\tr13, r7, r14\n\tjump.lt\t@.BB2_27\n.BB2_28:\n\tadd\tr7, r11, r12\n\tst.1\tr12, r0\n\tadd\t31, r7, r12\n\tsub.s\t32, r0, r7\n\tand\tr12, r7, r12\n\tadd\tr12, r11, r13\n\tsub\tr13, r6, r11\n\tld.1\tr10, r10\n\tadd\tstack-[4], r0, r12\n\tadd\t132, r12, r12\n\tst.1\tr12, r11\n\tld.1.inc\tr10, r11, r12\n\tst.1.inc\tr13, r11, r10\n\tsub!\tr11, r0, r13\n\tjump.eq\t@.BB2_31\n\tadd\tr0, r0, r13\n.BB2_30:\n\tadd\tr13, r10, r14\n\tadd\tr12, r13, r15\n\tld.1\tr15, r15\n\tst.1\tr14, r15\n\tadd\t32, r13, r13\n\tsub!\tr13, r11, r14\n\tjump.lt\t@.BB2_30\n.BB2_31:\n\tadd\tr11, r10, r12\n\tst.1\tr12, r0\n\tld.1\tr8, r8\n\tadd\tstack-[4], r0, r13\n\tadd\t164, r13, r12\n\tst.1\tr12, r8\n\tld.1\tr5, r5\n\tadd\t196, r13, r8\n\tst.1\tr8, r5\n\tld.1\tr4, r4\n\tadd\t228, r13, r5\n\tst.1\tr5, r4\n\tadd\t31, r11, r4\n\tand\tr4, r7, r4\n\tadd\tr4, r10, r4\n\tsub\tr4, r6, r5\n\tadd\t260, r13, r8\n\tld.1\tr9, r9\n\tst.1\tr8, r5\n\tld.1.inc\tr9, r5, r8\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r9\n\tjump.eq\t@.BB2_34\n\tadd\tr0, r0, r9\n.BB2_33:\n\tadd\tr9, r4, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r5, r10\n\tjump.lt\t@.BB2_33\n.BB2_34:\n\tadd\tr5, r4, r8\n\tst.1\tr8, r0\n\tadd\t31, r5, r5\n\tand\tr5, r7, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r6, r5\n\tadd\tstack-[3], r0, r6\n\tld.1\tr6, r6\n\tadd\t292, r13, r8\n\tst.1\tr8, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r8\n\tjump.eq\t@.BB2_37\n\tadd\tr0, r0, r8\n.BB2_36:\n\tadd\tr8, r4, r9\n\tadd\tr6, r8, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB2_36\n.BB2_37:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tcontext.gas_left\tr6\n\tsub.s!\t4, r2, r8\n\tjump.eq\t@.BB2_49\n\tadd\t31, r5, r1\n\tand\tr1, r7, r1\n\tsub\tr4, r13, r3\n\tadd\tr3, r1, r1\n\tadd\t@CPI2_3[0], r0, r3\n\tsub.s!\t@CPI2_3[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI2_3[0], r13, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr13, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI2_3[0], r6, r4\n\tadd.ge\tr3, r0, r6\n\tshl.s\t192, r6, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r13\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_3[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_85\n\tadd\tr0, r0, r7\n.BB2_40:\n\tshl.s\t5, r7, r8\n\tadd\tr13, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_40\n.BB2_85:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB2_42\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr13, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_42:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_44\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n.BB2_49:\n\tadd\tr1, r13, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI2_6[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB2_16\n\tld.1\tr13, r1\n\tadd\t@CPI2_14[0], r0, r2\n\tst.1\t0, r2\n\tst.1\t28, r1\n\tadd\t@CPI2_3[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_3[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_15[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_16\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI2_16[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_3[0], r1, r2\n\tadd.ge\t@CPI2_3[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_17[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_54\n\tld.1\t64, r5\n\tadd\t36, r5, r2\n\tadd\t4, r5, r3\n\tld\tr1, r1\n\tsub.s!\t31337, r1, r1\n\tadd\tr5, r0, stack-[1]\n\tjump.ne\t@.BB2_58\n\tadd\t@CPI2_20[0], r0, r1\n\tst.1\tr5, r1\n\tadd\t@CPI2_21[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_3[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t@CPI2_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_3[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_83\n\tadd\tr0, r0, r7\n.BB2_73:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_73\n.BB2_83:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB2_75\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_75:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_76\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_6[0], r1, r4\n\tjump.gt\t@.BB2_1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_1\n\tjump\t@.BB2_69\n.BB2_58:\n\tadd\tstack-[2], r0, r1\n\tadd\t64, r1, r1\n\tld.1\tr1, r1\n\tadd\t@CPI2_18[0], r0, r4\n\tst.1\tr5, r4\n\tand\t@CPI2_2[0], r1, r1\n\tst.1\tr3, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI2_3[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI2_3[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI2_3[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI2_19[0], r1, r1\n\tadd\t@CPI2_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI2_3[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB2_84\n\tadd\tr0, r0, r7\n.BB2_60:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB2_60\n.BB2_84:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB2_62\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB2_62:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_63\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_6[0], r1, r4\n\tjump.gt\t@.BB2_1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_1\n.BB2_69:\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB2_16\n\tld.1\tr10, r2\n\tsub.s!\t255, r2, r3\n\tjump.gt\t@.BB2_16\n\tadd\t32, r10, r3\n\tld.1\tr3, r3\n\tadd\t64, r10, r4\n\tld.1\tr4, r4\n\tshl.s\t248, r2, r2\n\tadd\t96, r1, r5\n\tst.1\tr5, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t65, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI2_22[0], r1, r2\n\tjump.gt\t@.BB2_1\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[3], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[5], r0, r1\n\tret\n.BB2_1:\n\tadd\t@CPI2_23[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_16:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_8:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB2_90\n\tadd\tr0, r0, r6\n.BB2_10:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_10\n.BB2_90:\n\tsub!\tr4, r0, r6\n\tjump.ne\t@.BB2_11\n\tjump\t@.BB2_12\n.BB2_19:\n\tadd\t@CPI2_23[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_4[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_54:\n\trevert\n.BB2_44:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB2_89\n\tadd\tr0, r0, r6\n.BB2_46:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_46\n.BB2_89:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_48\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB2_48:\n\tadd\t@CPI2_3[0], r0, r1\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_76:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB2_87\n\tadd\tr0, r0, r6\n.BB2_78:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_78\n.BB2_87:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_12\n\tjump\t@.BB2_11\n.BB2_63:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB2_88\n\tadd\tr0, r0, r6\n.BB2_65:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB2_65\n.BB2_88:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_12\n.BB2_11:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB2_12:\n\tadd\t@CPI2_3[0], r0, r1\n\tsub.s!\t@CPI2_3[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__cxa_throw:\n.func_begin3:\n\trevert\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI2_3:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 4174167879\nCPI0_5:\n\t.cell 3672176839\nCPI0_6:\n\t.cell 3225444902\nCPI0_7:\n\t.cell 16711680\nCPI0_8:\n\t.cell 2535301202817642044428229017600\nCPI0_9:\nCPI2_6:\n\t.cell 18446744073709551615\nCPI0_10:\nCPI2_22:\n\t.cell 18446744073709551487\nCPI0_11:\n\t.cell 18446744073709551519\nCPI0_12:\nCPI1_0:\nCPI2_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_13:\n\t.cell 452325016946666940857071686251988667896281132645288275721501626775178088869\nCPI0_14:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_15:\n\t.cell 904625697166532776746648320380374280103671765658434360802338178844445376512\nCPI0_16:\n\t.cell 18446744073709551552\nCPI0_17:\n\t.cell 35014370317124906509331165157630651512280947933762008338861476985277784260608\nCPI0_18:\n\t.cell 18446744073709551551\nCPI0_19:\n\t.cell 20890112303180472637439307513574312835712064049056309200988646340848254976000\nCPI0_20:\nCPI2_16:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_21:\nCPI2_17:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_22:\n\t.cell 9313985525877920579613962642494960293482861272954228164825761186973518659584\nCPI0_23:\nCPI2_5:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_24:\n\t.cell 8589934560\nCPI0_25:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_26:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_27:\n\t.cell 18446744073709551455\nCPI0_28:\n\t.cell 47493978776928217725307712957235826002007253891642230889376877894222282227712\nCPI0_29:\nCPI2_4:\n\t.cell 2852213850513516153367582212096\nCPI0_30:\n\t.cell 21258703883413520253546235528938795582436286247207447304119165813952801144832\nCPI0_31:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI0_32:\n\t.cell 20994473528665075656206603645561177367371947869009395450918716214519590289408\nCPI0_33:\n\t.cell 45433541760270845352604015348804418772309437136627860862299615176338247254016\nCPI0_34:\n\t.cell 43863269468009334158894487264628454438510617549146491680844421517880510644224\nCPI0_35:\n\t.cell -37149928529710419209315593663899727186979467347015644422677355303248272031744\nCPI0_36:\n\t.cell 21012072927029182906944654744542815073741678056308065207077428228789261828096\nCPI0_37:\n\t.cell 16365341200248272497541741845271787446302947436919617240581218020595207241728\nCPI0_38:\n\t.cell 42065094918243774118719146897687404024820736616814736154959200440374691627008\nCPI0_39:\n\t.cell -16618591066602222985122372761841479470695187910499018944623573964086398943232\nCPI0_40:\n\t.cell 42147056160298247635374084056041272448210233537953385855416471611875048554496\nCPI0_41:\n\t.cell 33366870799851040750925807626397859913175453413271115509921698356987831517184\nCPI0_42:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_43:\n\t.cell 42147056160298247635374079196497246153334409376292158675898661282073601376256\nCPI0_44:\n\t.cell 13615146381292573131216079373102823451012695786921808022264469017545200893952\nCPI0_45:\nCPI2_23:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_46:\n\t.cell 4238056678808933066457772256406219440718756300954938350892797929791311314944\nCPI0_47:\n\t.cell 1000000000000000000\nCPI0_48:\n\t.cell 1104403180448804942856650270049728161572831487840\nCPI0_49:\n\t.cell -33419636430028734643022972782987963516055066601414890002813699607517053583360\nCPI0_50:\n\t.cell 396035042032859377582273856449971498734227950152\nCPI0_51:\n\t.cell -27151071013223617441696809311706469891330170172232269417374360038580301070336\nCPI0_52:\n\t.cell 904625697166532776746648320380374280103671755517229556615319725435997126656\nCPI0_53:\n\t.cell 316912650057057350374175801344\nCPI0_54:\nCPI2_8:\n\t.cell 18446744073709551327\nCPI0_55:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_56:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_57:\n\t.cell 57763817484313164028313283939489504447484577087939811246371138302511295758336\nCPI0_58:\n\t.cell 53539900407852911456456701308484928931406331239208729481905787339876560011264\nCPI0_59:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI0_60:\n\t.cell 79228162532711081667253501952\nCPI0_61:\n\t.cell 35476745750338099172984439711897683043735744617128467129230437188764679798784\nCPI0_62:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_63:\n\t.cell 7922816251426433759354395033600\nCPI0_64:\n\t.cell 49931321668171411903164005373718656537621498036015533901078118697587345195008\nCPI0_65:\n\t.cell 35476745776245732801981939563850535370873594714778267883035439565283470503797\nCPI0_66:\n\t.cell 10458117451882892562347801444352\nCPI2_0:\n\t.cell 18446744073709551328\nCPI2_1:\n\t.cell 20359749130148582612428476031180930620585922044424978539360586139996071657472\nCPI2_7:\n\t.cell 18446744073709551616\nCPI2_9:\n\t.cell 18446744073709551583\nCPI2_10:\n\t.cell 87112285931760246646623899502532662132992\nCPI2_11:\n\t.cell 16777216\nCPI2_12:\n\t.cell 5708990770823839524233143877797980545547763712\nCPI2_13:\n\t.cell 15742374736755560200867032344613233170649429379879687236804144291568011968512\nCPI2_14:\n\t.cell 11430537079145650693387304458692941425836787954612963690241153482819318579200\nCPI2_15:\n\t.cell 904625697166532776746648320380374280103671759954006657414122630674458345472\nCPI2_18:\n\t.cell -52421234194266749651649673443257628051379996772460400772143257257909722021888\nCPI2_19:\n\t.cell 5387515050969974956360988622848\nCPI2_20:\n\t.cell -13000608119627727876772300249704890262799149961116506745709105103651939024896\nCPI2_21:\n\t.cell -37977571911845989512430043814285979273712922650878732108812190966532310630528\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","generateSignedUserOperation(bytes,(address,address,address),address)":"dae0f8c7","run()":"c0406226"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"minimalAccount\",\"type\":\"address\"}],\"name\":\"generateSignedUserOperation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/SendPackedUserOp.s.sol\":\"SendPackedUserOp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@account-abstraction/contracts/=lib/account-abstraction/contracts/\",\":@foundry-devops/src/=lib/foundry-devops/src/\",\":@foundry-era-contracts/src/=lib/foundry-era-contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x0eb1245b5541ff0fbc0f2a23c746e2b4eb9c46e801a4847f15d7d96d1cecc576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b002e499336c8f6ec05230762cccd3b48d67a2ec547e2789cfb70132af0b430f\",\"dweb:/ipfs/QmfRGPNgBrfxmLt9PQUEjocVmC47Mx14Vie1tziTARRZfq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-devops/src/DevOpsTools.sol\":{\"keccak256\":\"0x6e310a8b06b2cb689b5e3c0deec45ef1ffc35d8accf79e4da2656cc5a3d10a36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c6337496be59bbd75e9fed8afc3822dda05162b6bb019820190956317860583\",\"dweb:/ipfs/Qmdr8twbe1Wr7DWGkZkrpKNVmSkwh9L5PSf7HKq7utYDWh\"]},\"lib/foundry-devops/src/StringUtils.sol\":{\"keccak256\":\"0xc21a2278d2872b8867aa123ee6c236f51a38a789e8aa80659655d7ccedef9341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c88541569ee44ee344e1adf17ec2d2dfd528dfc6495cd6767fcc536bca8b0d0e\",\"dweb:/ipfs/QmaRZNzPB62ruBepsG6zbUabyKRM1pdkGAGG5iL7mTEjri\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\":{\"keccak256\":\"0x3ae81a443846c6d9bd387d6c6a5d7271a25095c83bb93817eefdaa22e13ca9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f98462a56f254dc0046038e92527e3b7ee5bf0e03f60e3459fbd400c14be01a7\",\"dweb:/ipfs/QmevANfRaMrqy8Jh33LxEs5vP2xBPQspxtij8bsonw3GHM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x5ad773662180a8e2ec48016a069152b652cedf807490f6527a4bd7edfb46a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://059806c77052aa99ac94b73642b1d7cb8eba5765c3a6710d5e1b78cc951d0c6b\",\"dweb:/ipfs/QmP4rBor7ZhpPGAw8ETXshmpfdLyvBaewehWbZTFoKBg8b\"]},\"script/SendPackedUserOp.s.sol\":{\"keccak256\":\"0x52b976f470baf5a8d13c32dc48291373e501f4133510eaba17857536612c7bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fac6ac7af4234796fe4098d9ab9d0668c5d8220c88e5a3e94686233ec6b809aa\",\"dweb:/ipfs/QmU4aSGUfSBLJTRKurnJ1PnqySnKPiM4nTEcDdRFtu8G8J\"]},\"src/ethereum/MinimalAccount.sol\":{\"keccak256\":\"0x676bc73721c5cae872e510c0d14449f7d06328dd6517171e29a1acd42499de53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8814eed9dddb92e0ce0bca43ae9845026465ddfb04b68a386cd531edee5512af\",\"dweb:/ipfs/QmawdmH5yBRqW4SmJWsF4rjt74BVHjBiLTe6U6mHLSMv5y\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 83:\"script/SendPackedUserOp.s.sol\"\nobject \"SendPackedUserOp_51640\" {\n    code {\n        {\n            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"SendPackedUserOp_51640_deployed\")\n            codecopy(_1, dataoffset(\"SendPackedUserOp_51640_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 22:\"lib/forge-std/src/StdJson.sol\", 39:\"lib/foundry-devops/src/DevOpsTools.sol\", 40:\"lib/foundry-devops/src/StringUtils.sol\", 76:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 83:\"script/SendPackedUserOp.s.sol\"\n    object \"SendPackedUserOp_51640_deployed\" {\n        code {\n            {\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0xc0406226 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 83:973:991  \"new HelperConfig()\"\n                        let _5 := datasize(\"HelperConfig_51339\")\n                        let _6 := add(_1, _5)\n                        if or(gt(_6, 0xffffffffffffffff), lt(_6, _1))\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 0x24)\n                        }\n                        /// @src 83:973:991  \"new HelperConfig()\"\n                        datacopy(_1, dataoffset(\"HelperConfig_51339\"), _5)\n                        let expr_address := create(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:973:991  \"new HelperConfig()\" */ _1, sub(_6, _1))\n                        if iszero(expr_address)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, _4, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        let memPtr := mload(_2)\n                        finalize_allocation_13203(memPtr)\n                        mstore(memPtr, 14)\n                        let _7 := 32\n                        mstore(add(memPtr, _7), \"MinimalAccount\")\n                        let memPtr_1 := mload(_2)\n                        finalize_allocation_13203(memPtr_1)\n                        mstore(memPtr_1, 11)\n                        mstore(add(memPtr_1, _7), \"./broadcast\")\n                        /// @src 39:674:755  \"return get_most_recent_deployment(contractName, chainId, RELATIVE_BROADCAST_PATH)\"\n                        let var := /** @src 39:681:755  \"get_most_recent_deployment(contractName, chainId, RELATIVE_BROADCAST_PATH)\" */ fun_get_most_recent_deployment(memPtr, /** @src 83:1250:1263  \"block.chainid\" */ chainid(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_1)\n                        /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                        let expr_mpos := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                        mstore(add(expr_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:1326:1349  \"IERC20.approve.selector\" */ shl(224, 0x095ea7b3))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ add(expr_mpos, 36), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                        mstore(add(/** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ expr_mpos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68), /** @src 83:1368:1372  \"1e18\" */ 0x0de0b6b3a7640000)\n                        /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                        mstore(expr_mpos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68)\n                        /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                        finalize_allocation_13205(expr_mpos)\n                        /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                        let expr_mpos_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                        mstore(add(expr_mpos_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:1449:1480  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ add(expr_mpos_1, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ 36), /** @src 83:1016:1058  \"0x455Ed35297De25Bfbb8533381Df19f12f7cA0A48\" */ 0x455ed35297de25bfbb8533381df19f12f7ca0a48)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        let _8 := 96\n                        mstore(add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100), _8)\n                        /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                        let _9 := sub(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_encode_bytes(expr_mpos, add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 132)), /** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1)\n                        mstore(expr_mpos_1, add(_9, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)))\n                        /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                        finalize_allocation(expr_mpos_1, _9)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _10 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _11 := and(/** @src 83:1611:1633  \"helperConfig.getConfig\" */ expr_address, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _10)\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        let _12 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        let _13 := shl(226, 0x30fe4275)\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        mstore(_12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        let _14 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ _12, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ _12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        if iszero(_14)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_1 := mload(_2)\n                            returndatacopy(pos_1, _4, returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        let expr_mpos_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                        if _14\n                        {\n                            let _15 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                            /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                            if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ returndatasize()) { _15 := returndatasize() }\n                            finalize_allocation(_12, _15)\n                            expr_mpos_2 := abi_decode_struct_NetworkConfig_fromMemory(_12, add(_12, _15))\n                        }\n                        /// @src 83:1566:1659  \"generateSignedUserOperation(executeCalldata, helperConfig.getConfig(), minimalAccountAddress)\"\n                        let expr_mpos_3 := fun_generateSignedUserOperation(expr_mpos_1, expr_mpos_2, var)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_2 := mload(_2)\n                        finalize_allocation_13203(memPtr_2)\n                        /// @src 83:1842:1843  \"1\"\n                        let _16 := 0x01\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(memPtr_2, /** @src 83:1842:1843  \"1\" */ 0x01)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        let i := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        for { }\n                        lt(i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        {\n                            i := add(i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                        }\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        {\n                            mstore(add(add(memPtr_2, i), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                        }\n                        /// @src 83:1854:1869  \"ops[0] = userOp\"\n                        mstore(memory_array_index_access_struct_PackedUserOperation_dyn(memPtr_2), expr_mpos_3)\n                        pop(memory_array_index_access_struct_PackedUserOperation_dyn(memPtr_2))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _17 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        if iszero(extcodesize(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17))\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        let _18 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        mstore(_18, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x7fb5297f))\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        let _19 := call(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17, _4, /** @src 83:1908:1927  \"vm.startBroadcast()\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1908:1927  \"vm.startBroadcast()\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        if iszero(_19)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_2 := mload(_2)\n                            returndatacopy(pos_2, _4, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                        if _19\n                        {\n                            finalize_allocation_9077(_18)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            _4 := _4\n                        }\n                        /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                        let _20 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                        mstore(_20, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                        /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                        let _21 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ _20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ _20, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                        /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                        if iszero(_21)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_3 := mload(_2)\n                            returndatacopy(pos_3, _4, returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                        let expr_mpos_4 := _4\n                        if _21\n                        {\n                            let _22 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                            /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                            if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_20, _22)\n                            expr_mpos_4 := abi_decode_struct_NetworkConfig_fromMemory(_20, add(_20, _22))\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:1949:1984  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _10)\n                        /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                        let _23 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                        mstore(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                        /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                        let _24 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ _23, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ _23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                        /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                        if iszero(_24)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_4 := mload(_2)\n                            returndatacopy(pos_4, _4, returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                        let expr_mpos_5 := _4\n                        if _24\n                        {\n                            let _25 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                            /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                            if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ returndatasize()) { _25 := returndatasize() }\n                            finalize_allocation(_23, _25)\n                            expr_mpos_5 := abi_decode_struct_NetworkConfig_fromMemory(_23, add(_23, _25))\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:2009:2041  \"helperConfig.getConfig().account\" */ add(expr_mpos_5, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _2)), _10)\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        if iszero(extcodesize(cleaned))\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        let _26 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        mstore(_26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x765e827f))\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let tail := add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ add(_26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3), _2)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let pos_5 := tail\n                        let length := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ memPtr_2)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(tail, length)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        pos_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let tail_1 := add(add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(5, length)), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let srcPtr := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(memPtr_2, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let i_1 := _4\n                        for { }\n                        lt(i_1, length)\n                        {\n                            i_1 := add(i_1, /** @src 83:1842:1843  \"1\" */ _16)\n                        }\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            mstore(pos_5, add(sub(tail_1, /** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ not(99)))\n                            tail_1 := abi_encode_struct_PackedUserOperation(mload(srcPtr), tail_1)\n                            srcPtr := add(srcPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            pos_5 := add(pos_5, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                        }\n                        mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ 36), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned_1)\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        let _27 := call(gas(), cleaned, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, sub(tail_1, _26), _26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        if iszero(_27)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_6 := mload(_2)\n                            returndatacopy(pos_6, _4, returndatasize())\n                            revert(pos_6, returndatasize())\n                        }\n                        /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                        if _27\n                        {\n                            finalize_allocation_9077(_26)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17))\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(_4, _4)\n                        }\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        let _28 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        mstore(_28, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x3b756e9b))\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        let _29 := call(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17, _4, /** @src 83:2053:2071  \"vm.stopBroadcast()\" */ _28, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:2053:2071  \"vm.stopBroadcast()\" */ _28, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        if iszero(_29)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_7 := mload(_2)\n                            returndatacopy(pos_7, _4, returndatasize())\n                            revert(pos_7, returndatasize())\n                        }\n                        /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                        if _29\n                        {\n                            finalize_allocation_9077(_28)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            if _4 { revert(_4, _4) }\n                        }\n                        return(_4, _4)\n                    }\n                    case 0xdae0f8c7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _30 := calldataload(add(_3, offset))\n                        let _31 := array_allocation_size_bytes(_30)\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation(memPtr_3, _31)\n                        mstore(memPtr_3, _30)\n                        if gt(add(add(offset, _30), 36), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(memPtr_3, 0x20), add(offset, 36), _30)\n                        mstore(add(add(memPtr_3, _30), 0x20), _4)\n                        if slt(add(calldatasize(), not(35)), 0x60) { revert(_4, _4) }\n                        let memPtr_4 := mload(_2)\n                        finalize_allocation_9080(memPtr_4)\n                        let value := calldataload(36)\n                        let _32 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        if iszero(eq(value, and(value, _32))) { revert(0, 0) }\n                        mstore(memPtr_4, value)\n                        let value_1 := calldataload(68)\n                        if iszero(eq(value_1, and(value_1, _32))) { revert(0, 0) }\n                        mstore(add(memPtr_4, 0x20), value_1)\n                        let value_2 := calldataload(100)\n                        if iszero(eq(value_2, and(value_2, _32))) { revert(0, 0) }\n                        mstore(add(memPtr_4, _2), value_2)\n                        let value_3 := calldataload(132)\n                        if iszero(eq(value_3, and(value_3, _32))) { revert(0, 0) }\n                        let ret := fun_generateSignedUserOperation(memPtr_3, memPtr_4, value_3)\n                        let memPos := mload(_2)\n                        mstore(memPos, 0x20)\n                        return(memPos, sub(abi_encode_struct_PackedUserOperation(ret, add(memPos, 0x20)), memPos))\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_4 := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0xff)\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, iszero(iszero(value_4)))\n                        return(memPos_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_9077(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_9080(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x60)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_9104(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 288)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_13203(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_13205(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_13207(memPtr)\n            {\n                let newFreePtr := add(memPtr, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 32)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_bytes(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31))), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x20)\n            }\n            function abi_encode_struct_PackedUserOperation(value, pos) -> end\n            {\n                let _1 := 0x0120\n                mstore(pos, and(mload(value), sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                let memberValue0 := mload(add(value, 0x40))\n                mstore(add(pos, 0x40), _1)\n                let tail := abi_encode_bytes(memberValue0, add(pos, _1))\n                let memberValue0_1 := mload(add(value, 0x60))\n                mstore(add(pos, 0x60), sub(tail, pos))\n                let tail_1 := abi_encode_bytes(memberValue0_1, tail)\n                mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                let memberValue0_2 := mload(add(value, 0xe0))\n                mstore(add(pos, 0xe0), sub(tail_1, pos))\n                let tail_2 := abi_encode_bytes(memberValue0_2, tail_1)\n                let _2 := 0x0100\n                let memberValue0_3 := mload(add(value, _2))\n                mstore(add(pos, _2), sub(tail_2, pos))\n                end := abi_encode_bytes(memberValue0_3, tail_2)\n            }\n            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n            function abi_decode_address_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                if iszero(eq(value, and(value, sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                { revert(0, 0) }\n            }\n            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n            function abi_decode_struct_NetworkConfig_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    revert(0, 0)\n                }\n                let memPtr := mload(64)\n                finalize_allocation_9080(memPtr)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(memPtr, abi_decode_address_fromMemory(headStart))\n                mstore(add(memPtr, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n                mstore(add(memPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_decode_address_fromMemory(add(headStart, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)))\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                value0 := memPtr\n            }\n            function allocate_and_zero_memory_struct_struct_PackedUserOperation() -> memPtr\n            {\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let memPtr_1 := mload(64)\n                finalize_allocation_9104(memPtr_1)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(add(memPtr_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 96)\n                mstore(add(memPtr_1, 96), 96)\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ 0)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(add(memPtr_1, 192), /** @src -1:-1:-1 */ 0)\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(add(memPtr_1, 224), 96)\n                mstore(add(memPtr_1, 256), 96)\n            }\n            function memory_array_index_access_struct_PackedUserOperation_dyn(baseRef) -> addr\n            {\n                if iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ baseRef))\n                {\n                    mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0, shl(224, 0x4e487b71))\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(4, 0x32)\n                    revert(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0x24)\n                }\n                addr := add(baseRef, 32)\n            }\n            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n            function abi_decode_uint64_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ value, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                { revert(0, 0) }\n            }\n            function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                let value := mload(headStart)\n                if iszero(eq(value, and(value, 0xff)))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                value0 := value\n                value1 := mload(add(headStart, 32))\n                value2 := mload(add(headStart, 64))\n            }\n            /// @ast-id 51578 @src 83:2084:3142  \"function generateSignedUserOperation(...\"\n            function fun_generateSignedUserOperation(var_callData_mpos, var_config_mpos, var_minimalAccount) -> var_mpos\n            {\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let _1 := 64\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                let _2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                mstore(_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x2d0335ab))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let _3 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let _4 := and(var_minimalAccount, _3)\n                mstore(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ add(_2, 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                let _5 := 32\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let _6 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                let _7 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _2, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _2, _5)\n                if iszero(_7)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let pos := mload(_1)\n                    returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                let expr := /** @src -1:-1:-1 */ 0\n                /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                if _7\n                {\n                    let _8 := _5\n                    if gt(_5, returndatasize()) { _8 := returndatasize() }\n                    finalize_allocation(_2, _8)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    if slt(sub(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ add(_2, _8), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _2), /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                    expr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ abi_decode_uint64_fromMemory(_2)\n                }\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                let _9 := 0xffffffffffffffff\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let diff := add(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ expr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(0))\n                if gt(diff, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36)\n                }\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let memPtr := mload(_1)\n                finalize_allocation_9104(memPtr)\n                mstore(memPtr, _4)\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ diff, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let memPtr_1 := mload(_1)\n                finalize_allocation_13207(memPtr_1)\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1), memPtr_1)\n                /// @src 83:3537:3979  \"PackedUserOperation({...\"\n                let _10 := 96\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, _10), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_callData_mpos)\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:3745:3748  \"128\" */ 0x80), /** @src 83:3712:3763  \"uint256(verificationGasLimit) << 128 | callGasLimit\" */ 0x0100000000000000000000000000000001000000)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, 160), /** @src 83:3362:3370  \"16777216\" */ 0x01000000)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, 192), /** @src 83:3849:3900  \"uint256(maxPriorityFeePerGas) << 128 | maxFeePerGas\" */ 0x010000000000000000000000000000000100)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let memPtr_2 := mload(_1)\n                finalize_allocation_13207(memPtr_2)\n                mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 224), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_2)\n                let memPtr_3 := mload(_1)\n                finalize_allocation_13207(memPtr_3)\n                mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                /// @src 83:3537:3979  \"PackedUserOperation({...\"\n                let _11 := add(memPtr, /** @src 83:3464:3467  \"256\" */ 0x0100)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(_11, memPtr_3)\n                let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:2574:2591  \"config.entryPoint\" */ var_config_mpos), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3)\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                let _12 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                mstore(_12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x08b37793))\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                mstore(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ add(_12, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), _5)\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                let _13 := staticcall(gas(), cleaned, _12, sub(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ abi_encode_struct_PackedUserOperation(memPtr, add(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ _12, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36)), /** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ _12), _12, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                if iszero(_13)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let pos_1 := mload(_1)\n                    returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                    revert(pos_1, returndatasize())\n                }\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                if _13\n                {\n                    let _14 := /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5\n                    /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                    if gt(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5, /** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ returndatasize()) { _14 := returndatasize() }\n                    finalize_allocation(_12, _14)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    if slt(sub(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ add(_12, _14), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _12), /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                    expr_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_12)\n                }\n                /// @src 76:1367:1676  \"assembly {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 76:1367:1676  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                mstore(0x1c, expr_1)\n                let var_digest := keccak256(/** @src -1:-1:-1 */ 0, /** @src 76:1367:1676  \"assembly {...\" */ 0x3c)\n                /// @src 83:2709:2716  \"uint8 v\"\n                let var_v := /** @src -1:-1:-1 */ 0\n                /// @src 83:2726:2735  \"bytes32 r\"\n                let var_r := /** @src -1:-1:-1 */ var_v\n                /// @src 83:2745:2754  \"bytes32 s\"\n                let var_s := /** @src -1:-1:-1 */ var_v\n                /// @src 83:2868:3041  \"if (block.chainid == 31337) {...\"\n                switch /** @src 83:2872:2894  \"block.chainid == 31337\" */ eq(/** @src 83:2872:2885  \"block.chainid\" */ chainid(), /** @src 83:2889:2894  \"31337\" */ 0x7a69)\n                case /** @src 83:2868:3041  \"if (block.chainid == 31337) {...\" */ 0 {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:3007:3021  \"config.account\" */ add(var_config_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)), _3)\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    let _15 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    mstore(_15, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x8c1aa205))\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(/** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ add(_15, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned_1)\n                    mstore(add(/** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36), var_digest)\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    let _16 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10)\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    if iszero(_16)\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let pos_2 := mload(_1)\n                        returndatacopy(pos_2, /** @src -1:-1:-1 */ var_v, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                        revert(pos_2, returndatasize())\n                    }\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    let expr_component := /** @src -1:-1:-1 */ var_v\n                    let expr_component_1 := var_v\n                    let expr_component_2 := var_v\n                    /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                    if _16\n                    {\n                        let _17 := /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10\n                        /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                        if gt(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ returndatasize()) { _17 := returndatasize() }\n                        finalize_allocation(_15, _17)\n                        let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_15, add(_15, _17))\n                        expr_component := expr_component_3\n                        expr_component_1 := expr_component_4\n                        expr_component_2 := expr_component_5\n                    }\n                    /// @src 83:2987:3030  \"(v, r, s) = vm.sign(config.account, digest)\"\n                    var_s := expr_component_2\n                    var_r := expr_component_1\n                    var_v := expr_component\n                }\n                default /// @src 83:2868:3041  \"if (block.chainid == 31337) {...\"\n                {\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    let _18 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    mstore(_18, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x38d07aa9))\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(/** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ add(_18, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), /** @src 83:2792:2858  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(add(/** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36), var_digest)\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    let _19 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10)\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    if iszero(_19)\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let pos_3 := mload(_1)\n                        returndatacopy(pos_3, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                        revert(pos_3, returndatasize())\n                    }\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    let expr_component_6 := /** @src -1:-1:-1 */ 0\n                    let expr_51546_component := 0\n                    let expr_51546_component_1 := 0\n                    /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    if _19\n                    {\n                        let _20 := /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10\n                        /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                        if gt(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ returndatasize()) { _20 := returndatasize() }\n                        finalize_allocation(_18, _20)\n                        let expr_component_7, expr_component_8, expr_component_9 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_18, add(_18, _20))\n                        expr_component_6 := expr_component_7\n                        expr_51546_component := expr_component_8\n                        expr_51546_component_1 := expr_component_9\n                    }\n                    /// @src 83:2910:2956  \"(v, r, s) = vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                    var_s := expr_51546_component_1\n                    var_r := expr_51546_component\n                    var_v := expr_component_6\n                }\n                /// @src 83:3069:3094  \"abi.encodePacked(r, s, v)\"\n                let expr_51572_mpos := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                mstore(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ add(expr_51572_mpos, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_r)\n                mstore(add(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ expr_51572_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1), var_s)\n                mstore(add(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ expr_51572_mpos, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(shl(248, var_v), shl(248, 255)))\n                /// @src 83:3069:3094  \"abi.encodePacked(r, s, v)\"\n                mstore(expr_51572_mpos, 65)\n                finalize_allocation_13205(expr_51572_mpos)\n                /// @src 83:3050:3094  \"userOp.signature = abi.encodePacked(r, s, v)\"\n                mstore(/** @src 83:3050:3066  \"userOp.signature\" */ _11, /** @src 83:3050:3094  \"userOp.signature = abi.encodePacked(r, s, v)\" */ expr_51572_mpos)\n                /// @src 83:3122:3135  \"return userOp\"\n                var_mpos := memPtr\n            }\n            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            function abi_decode_string_memory_ptr_fromMemory(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let _1 := mload(offset)\n                let _2 := array_allocation_size_bytes(_1)\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _2)\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n                array := memPtr\n            }\n            function abi_decode_bool_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                if iszero(eq(value, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ iszero(iszero(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value)))) { revert(0, 0) }\n            }\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                value0 := abi_decode_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n            }\n            /// @ast-id 42740 @src 39:768:2394  \"function get_most_recent_deployment(...\"\n            function fun_get_most_recent_deployment(var_contractName_mpos, var_chainId, var_relativeBroadcastPath_mpos) -> var\n            {\n                /// @src 39:1002:1023  \"uint256 lastTimestamp\"\n                let var_lastTimestamp := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                /// @src 39:958:992  \"address latestAddress = address(0)\"\n                let var_latestAddress := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                /// @src 39:1002:1023  \"uint256 lastTimestamp\"\n                var_lastTimestamp := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                /// @src 39:1034:1051  \"bool runProcessed\"\n                let var_runProcessed := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                let _1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                mstore(_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x0525e1db))\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)\n                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let tail := abi_encode_bytes(var_relativeBroadcastPath_mpos, add(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68))\n                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 39:1126:1127  \"3\" */ 0x03)\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                let _2 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, sub(tail, _1), _1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed)\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                if iszero(_2)\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let pos := mload(64)\n                    returndatacopy(pos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                    revert(pos, returndatasize())\n                }\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                let expr_42618_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed\n                /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                if _2\n                {\n                    let _3 := returndatasize()\n                    returndatacopy(_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _3)\n                    finalize_allocation(_1, _3)\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if slt(sub(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), 32)\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let offset := mload(_1)\n                    if gt(offset, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    if iszero(slt(add(add(_1, offset), 0x1f), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _4 := mload(add(_1, offset))\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    if gt(_4, 0xffffffffffffffff)\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                        mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x41)\n                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                    }\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    let _5 := shl(5, _4)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                    let dst := memPtr\n                    mstore(memPtr, _4)\n                    dst := add(memPtr, 32)\n                    if gt(add(add(add(_1, offset), _5), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3))\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let src := add(add(_1, offset), 32)\n                    for { }\n                    lt(src, add(add(add(_1, offset), _5), 32))\n                    { src := add(src, 32) }\n                    {\n                        let innerOffset := mload(src)\n                        if gt(innerOffset, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if slt(add(sub(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(add(_1, offset), innerOffset)), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_1 := mload(64)\n                        if or(gt(add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ lt(add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_1))\n                        {\n                            mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x41)\n                            revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(64, add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0))\n                        let offset_1 := mload(add(add(add(_1, offset), innerOffset), 32))\n                        if gt(offset_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(memPtr_1, abi_decode_string_memory_ptr_fromMemory(add(add(add(add(_1, offset), innerOffset), offset_1), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let offset_2 := mload(add(add(add(_1, offset), innerOffset), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        if gt(offset_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(memPtr_1, 32), abi_decode_string_memory_ptr_fromMemory(add(add(add(add(_1, offset), innerOffset), offset_2), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _6 := 96\n                        mstore(add(memPtr_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), abi_decode_uint64_fromMemory(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(add(add(_1, offset), innerOffset), _6)))\n                        let _7 := 128\n                        mstore(add(memPtr_1, _6), abi_decode_bool_fromMemory(add(add(add(_1, offset), innerOffset), _7)))\n                        mstore(add(memPtr_1, _7), abi_decode_bool_fromMemory(add(add(add(_1, offset), innerOffset), 0xa0)))\n                        mstore(dst, memPtr_1)\n                        dst := add(dst, 32)\n                    }\n                    /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                    expr_42618_mpos := memPtr\n                }\n                /// @src 39:1143:1156  \"uint256 i = 0\"\n                let var_i := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed\n                /// @src 39:1138:2121  \"for (uint256 i = 0; i < entries.length; i++) {...\"\n                for { }\n                /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1\n                /// @src 39:1143:1156  \"uint256 i = 0\"\n                {\n                    /// @src 39:1178:1181  \"i++\"\n                    var_i := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:1178:1181  \"i++\" */ var_i, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1)\n                }\n                /// @src 39:1178:1181  \"i++\"\n                {\n                    /// @src 39:1158:1176  \"i < entries.length\"\n                    if iszero(lt(var_i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:1162:1176  \"entries.length\" */ expr_42618_mpos)))\n                    /// @src 39:1158:1176  \"i < entries.length\"\n                    { break }\n                    /// @src 39:1269:1279  \"entry.path\"\n                    let _8 := add(/** @src 39:1224:1234  \"entries[i]\" */ mload(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(add(expr_42618_mpos, shl(5, var_i)), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)), 32)\n                    /// @src 39:1269:1279  \"entry.path\"\n                    let _mpos := mload(_8)\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    let _9 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    mstore(_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(/** @src 39:1308:1328  \"vm.toString(chainId)\" */ add(_9, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_chainId)\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    let _10 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _9, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    if iszero(_10)\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let pos_1 := mload(64)\n                        returndatacopy(pos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                        revert(pos_1, returndatasize())\n                    }\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    let expr_42650_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                    /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                    if _10\n                    {\n                        let _11 := returndatasize()\n                        returndatacopy(_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_42650_mpos, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _11)\n                        finalize_allocation(_9, _11)\n                        expr_42650_mpos := abi_decode_string_fromMemory(_9, add(_9, _11))\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let outPtr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    let _12 := \"/\"\n                    mstore(add(outPtr, 32), _12)\n                    let _13 := 33\n                    let length := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_42650_mpos)\n                    copy_memory_to_memory_with_cleanup(add(expr_42650_mpos, 32), add(outPtr, _13), length)\n                    let _14 := add(outPtr, length)\n                    mstore(add(_14, _13), _12)\n                    let _15 := sub(_14, outPtr)\n                    mstore(outPtr, add(_15, 2))\n                    finalize_allocation(outPtr, add(_15, 34))\n                    /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                    let expr := /** @src 39:1269:1335  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\"))\" */ fun_contains(_mpos, /** @src 39:1289:1334  \"string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")\" */ outPtr)\n                    /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                    if expr\n                    {\n                        /// @src 39:1339:1349  \"entry.path\"\n                        let _144_mpos := mload(_8)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_2 := mload(64)\n                        finalize_allocation_13203(memPtr_2)\n                        mstore(memPtr_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 5)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(memPtr_2, 32), \".json\")\n                        /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                        expr := /** @src 39:1339:1367  \"entry.path.contains(\\\".json\\\")\" */ fun_contains(_144_mpos, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_2)\n                    }\n                    /// @src 39:1269:1422  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")...\"\n                    let expr_1 := expr\n                    if expr\n                    {\n                        /// @src 39:1392:1402  \"entry.path\"\n                        let _148_mpos := mload(_8)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_13203(memPtr_3)\n                        mstore(memPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 7)\n                        mstore(add(memPtr_3, 32), \"dry-run\")\n                        /// @src 39:1269:1422  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")...\"\n                        expr_1 := /** @src 39:1391:1422  \"!entry.path.contains(\\\"dry-run\\\")\" */ iszero(/** @src 39:1392:1422  \"entry.path.contains(\\\"dry-run\\\")\" */ fun_contains(_148_mpos, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_3))\n                    }\n                    /// @src 39:1248:2111  \"if (...\"\n                    if expr_1\n                    {\n                        /// @src 39:1455:1474  \"runProcessed = true\"\n                        var_runProcessed := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1\n                        /// @src 39:1525:1535  \"entry.path\"\n                        let _152_mpos := mload(_8)\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        let _16 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        mstore(_16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x60f9bb11))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ add(_16, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        let _17 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16, sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_encode_bytes(_152_mpos, add(/** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)), /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16), _16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        if iszero(_17)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        let expr_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                        if _17\n                        {\n                            let _18 := returndatasize()\n                            returndatacopy(_16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos, /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _18)\n                            finalize_allocation(_16, _18)\n                            expr_mpos := abi_decode_string_fromMemory(_16, add(_16, _18))\n                        }\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        let _19 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        mstore(_19, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x56eef15b))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ add(_19, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let tail_1 := abi_encode_bytes(expr_mpos, add(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68))\n                        let _20 := sub(tail_1, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(add(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), add(_20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(3)))\n                        mstore(tail_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 10)\n                        mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(tail_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), \".timestamp\")\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        let _21 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, add(_20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        if iszero(_21)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_3 := mload(64)\n                            returndatacopy(pos_3, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        let expr_2 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                        if _21\n                        {\n                            let _22 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                            /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                            if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ returndatasize()) { _22 := returndatasize() }\n                            finalize_allocation(_19, _22)\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ add(_19, _22), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _19), 32)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_2, expr_2)\n                            }\n                            /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                            expr_2 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_19)\n                        }\n                        /// @src 39:1630:2097  \"if (timestamp > lastTimestamp) {...\"\n                        if /** @src 39:1634:1659  \"timestamp > lastTimestamp\" */ gt(expr_2, var_lastTimestamp)\n                        /// @src 39:1630:2097  \"if (timestamp > lastTimestamp) {...\"\n                        {\n                            /// @src 39:1699:1744  \"processRun(json, contractName, latestAddress)\"\n                            let var_latestAddress_1 := var_latestAddress\n                            /// @src 39:2566:2579  \"uint256 i = 0\"\n                            let var_i_1 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                            /// @src 39:2561:3186  \"for (uint256 i = 0; vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\")); i++) {...\"\n                            for { }\n                            /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_runProcessed\n                            /// @src 39:2566:2579  \"uint256 i = 0\"\n                            {\n                                /// @src 39:2660:2663  \"i++\"\n                                var_i_1 := increment_uint256(var_i_1)\n                            }\n                            {\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                let _23 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                mstore(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 39:2637:2651  \"vm.toString(i)\" */ add(_23, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                let _24 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2637:2651  \"vm.toString(i)\" */ _23, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:2637:2651  \"vm.toString(i)\" */ _23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                if iszero(_24)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_4 := mload(64)\n                                    returndatacopy(pos_4, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                let expr_mpos_1 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:2637:2651  \"vm.toString(i)\"\n                                if _24\n                                {\n                                    let _25 := returndatasize()\n                                    returndatacopy(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_1, /** @src 39:2637:2651  \"vm.toString(i)\" */ _25)\n                                    finalize_allocation(_23, _25)\n                                    expr_mpos_1 := abi_decode_string_fromMemory(_23, add(_23, _25))\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let outPtr_1 := mload(64)\n                                mstore(add(outPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let length_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_1)\n                                copy_memory_to_memory_with_cleanup(add(expr_mpos_1, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_1, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1)\n                                let _26 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"]\")\n                                let _27 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_1)\n                                mstore(outPtr_1, add(_27, 16))\n                                finalize_allocation(outPtr_1, add(_27, 48))\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                let _28 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                mstore(_28, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x6da11afb))\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                let _29 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ _28, sub(abi_encode_string_string(add(_28, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ expr_mpos, outPtr_1), _28), _28, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                if iszero(_29)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_5 := mload(64)\n                                    returndatacopy(pos_5, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_5, returndatasize())\n                                }\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                let expr_3 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                if _29\n                                {\n                                    let _30 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                    /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                    if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ returndatasize()) { _30 := returndatasize() }\n                                    finalize_allocation(_28, _30)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    if slt(sub(/** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ add(_28, _30), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _28), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    {\n                                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_3, expr_3)\n                                    }\n                                    /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                    expr_3 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_decode_bool_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _28)\n                                }\n                                /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                if iszero(expr_3) { break }\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                let _31 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                mstore(_31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 39:2745:2759  \"vm.toString(i)\" */ add(_31, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                let _32 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2745:2759  \"vm.toString(i)\" */ _31, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:2745:2759  \"vm.toString(i)\" */ _31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                if iszero(_32)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_6 := mload(64)\n                                    returndatacopy(pos_6, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_6, returndatasize())\n                                }\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                let expr_mpos_2 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:2745:2759  \"vm.toString(i)\"\n                                if _32\n                                {\n                                    let _33 := returndatasize()\n                                    returndatacopy(_31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_2, /** @src 39:2745:2759  \"vm.toString(i)\" */ _33)\n                                    finalize_allocation(_31, _33)\n                                    expr_mpos_2 := abi_decode_string_fromMemory(_31, add(_31, _33))\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let outPtr_2 := mload(64)\n                                mstore(add(outPtr_2, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let length_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_2)\n                                copy_memory_to_memory_with_cleanup(add(expr_mpos_2, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_2, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2)\n                                let _34 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_2, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_34, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"].contractName\")\n                                let _35 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _34, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_2)\n                                mstore(outPtr_2, add(_35, 29))\n                                finalize_allocation(outPtr_2, add(_35, 61))\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                let _36 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                mstore(_36, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x6da11afb))\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                let _37 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ _36, sub(abi_encode_string_string(add(_36, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ expr_mpos, outPtr_2), _36), _36, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                if iszero(_37)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_7 := mload(64)\n                                    returndatacopy(pos_7, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_7, returndatasize())\n                                }\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                let expr_4 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                if _37\n                                {\n                                    let _38 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                    /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                    if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ returndatasize()) { _38 := returndatasize() }\n                                    finalize_allocation(_36, _38)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    if slt(sub(/** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ add(_36, _38), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _36), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    {\n                                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_4, expr_4)\n                                    }\n                                    /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                    expr_4 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_decode_bool_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _36)\n                                }\n                                /// @src 39:2792:3176  \"if (vm.keyExistsJson(json, contractNamePath)) {...\"\n                                if expr_4\n                                {\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    let _39 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    mstore(_39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(227, 0x09389f59))\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    let _40 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ _39, sub(abi_encode_string_string(add(_39, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ expr_mpos, outPtr_2), _39), _39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    if iszero(_40)\n                                    {\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        let pos_8 := mload(64)\n                                        returndatacopy(pos_8, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                        revert(pos_8, returndatasize())\n                                    }\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    let expr_mpos_3 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                    /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                    if _40\n                                    {\n                                        let _41 := returndatasize()\n                                        returndatacopy(_39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_3, /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ _41)\n                                        finalize_allocation(_39, _41)\n                                        expr_mpos_3 := abi_decode_string_fromMemory(_39, add(_39, _41))\n                                    }\n                                    /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                    let expr_mpos_4 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                    /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                    let _42 := add(expr_mpos_4, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                    let length_3 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_3)\n                                    copy_memory_to_memory_with_cleanup(add(expr_mpos_3, 32), _42, length_3)\n                                    /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                    let _43 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:242:264  \"abi.encodePacked(str1)\" */ expr_mpos_4, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_3), /** @src 40:242:264  \"abi.encodePacked(str1)\" */ expr_mpos_4)\n                                    mstore(expr_mpos_4, _43)\n                                    finalize_allocation(expr_mpos_4, add(_43, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                    /// @src 40:232:265  \"keccak256(abi.encodePacked(str1))\"\n                                    let expr_5 := keccak256(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _42, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:232:265  \"keccak256(abi.encodePacked(str1))\" */ expr_mpos_4))\n                                    /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                    let expr_mpos_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                    /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                    let _44 := add(expr_mpos_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                    let length_4 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_contractName_mpos)\n                                    copy_memory_to_memory_with_cleanup(add(var_contractName_mpos, 32), _44, length_4)\n                                    /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                    let _45 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:291:313  \"abi.encodePacked(str2)\" */ expr_mpos_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_4), /** @src 40:291:313  \"abi.encodePacked(str2)\" */ expr_mpos_5)\n                                    mstore(expr_mpos_5, _45)\n                                    finalize_allocation(expr_mpos_5, add(_45, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                    /// @src 39:2944:3162  \"if (deployedContractName.isEqualTo(contractName)) {...\"\n                                    if /** @src 40:232:314  \"keccak256(abi.encodePacked(str1)) ==...\" */ eq(expr_5, /** @src 40:281:314  \"keccak256(abi.encodePacked(str2))\" */ keccak256(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _44, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:281:314  \"keccak256(abi.encodePacked(str2))\" */ expr_mpos_5)))\n                                    /// @src 39:2944:3162  \"if (deployedContractName.isEqualTo(contractName)) {...\"\n                                    {\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        let _46 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        mstore(_46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:3106:3120  \"vm.toString(i)\" */ add(_46, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        let _47 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:3106:3120  \"vm.toString(i)\" */ _46, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:3106:3120  \"vm.toString(i)\" */ _46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        if iszero(_47)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_9 := mload(64)\n                                            returndatacopy(pos_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_9, returndatasize())\n                                        }\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        let expr_mpos_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 39:3106:3120  \"vm.toString(i)\"\n                                        if _47\n                                        {\n                                            let _48 := returndatasize()\n                                            returndatacopy(_46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_6, /** @src 39:3106:3120  \"vm.toString(i)\" */ _48)\n                                            finalize_allocation(_46, _48)\n                                            expr_mpos_6 := abi_decode_string_fromMemory(_46, add(_46, _48))\n                                        }\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        let outPtr_3 := mload(64)\n                                        mstore(add(outPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let length_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_6)\n                                        copy_memory_to_memory_with_cleanup(add(expr_mpos_6, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_3, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_5)\n                                        let _49 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_5)\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_49, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"].contractAddress\")\n                                        let _50 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _49, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_3)\n                                        mstore(outPtr_3, add(_50, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        finalize_allocation(outPtr_3, add(_50, 64))\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        let _51 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        mstore(_51, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x1e19e657))\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        let _52 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ _51, sub(abi_encode_string_string(add(_51, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ expr_mpos, outPtr_3), _51), _51, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        if iszero(_52)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_10 := mload(64)\n                                            returndatacopy(pos_10, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_10, returndatasize())\n                                        }\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        let expr_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                        if _52\n                                        {\n                                            let _53 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                            /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                            if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ returndatasize()) { _53 := returndatasize() }\n                                            finalize_allocation(_51, _53)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            if slt(sub(/** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ add(_51, _53), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _51), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            {\n                                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_6, expr_6)\n                                            }\n                                            /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                            expr_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_decode_address_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _51)\n                                        }\n                                        /// @src 39:3016:3143  \"latestAddress =...\"\n                                        var_latestAddress_1 := expr_6\n                                    }\n                                }\n                            }\n                            /// @src 39:1683:1744  \"latestAddress = processRun(json, contractName, latestAddress)\"\n                            var_latestAddress := var_latestAddress_1\n                            /// @src 39:1972:2079  \"if (latestAddress != address(0)) {...\"\n                            if /** @src 39:1976:2003  \"latestAddress != address(0)\" */ iszero(iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(/** @src 39:1976:2003  \"latestAddress != address(0)\" */ var_latestAddress_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                            /// @src 39:1972:2079  \"if (latestAddress != address(0)) {...\"\n                            {\n                                /// @src 39:2031:2056  \"lastTimestamp = timestamp\"\n                                var_lastTimestamp := expr_2\n                            }\n                        }\n                    }\n                }\n                /// @src 39:2131:2239  \"if (!runProcessed) {...\"\n                if /** @src 39:2135:2148  \"!runProcessed\" */ iszero(var_runProcessed)\n                /// @src 39:2131:2239  \"if (!runProcessed) {...\"\n                {\n                    /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                    let _54 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                    /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                    mstore(_54, shl(229, 4594637))\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ add(_54, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), 54)\n                    mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), \"No deployment artifacts were fou\")\n                    mstore(add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"nd for specified chain\")\n                    /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                    revert(_54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                }\n                /// @src 39:2249:2388  \"if (latestAddress != address(0)) {...\"\n                switch /** @src 39:2253:2280  \"latestAddress != address(0)\" */ iszero(iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(/** @src 39:2253:2280  \"latestAddress != address(0)\" */ var_latestAddress, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                case /** @src 39:2249:2388  \"if (latestAddress != address(0)) {...\" */ 0 {\n                    /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                    let _55 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                    /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                    mstore(_55, /** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ shl(229, 4594637))\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    mstore(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ add(_55, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ _55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), 20)\n                    mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ _55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), \"No contract deployed\")\n                    /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                    revert(_55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100)\n                }\n                default /// @src 39:2249:2388  \"if (latestAddress != address(0)) {...\"\n                {\n                    /// @src 39:2296:2316  \"return latestAddress\"\n                    var := var_latestAddress\n                    leave\n                }\n            }\n            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function memory_array_index_access_bytes(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                addr := add(add(baseRef, index), 32)\n            }\n            /// @ast-id 42945 @src 40:327:1030  \"function contains(...\"\n            function fun_contains(var_str_mpos, var_substr_mpos) -> var\n            {\n                /// @src 40:545:560  \"strBytes.length\"\n                let expr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:545:560  \"strBytes.length\" */ var_str_mpos)\n                /// @src 40:545:605  \"strBytes.length < substrBytes.length || strBytes.length == 0\"\n                let expr_1 := /** @src 40:545:581  \"strBytes.length < substrBytes.length\" */ lt(expr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:563:581  \"substrBytes.length\" */ var_substr_mpos))\n                /// @src 40:545:605  \"strBytes.length < substrBytes.length || strBytes.length == 0\"\n                if iszero(expr_1)\n                {\n                    expr_1 := /** @src 40:585:605  \"strBytes.length == 0\" */ iszero(expr)\n                }\n                /// @src 40:541:631  \"if (strBytes.length < substrBytes.length || strBytes.length == 0)...\"\n                if expr_1\n                {\n                    /// @src 40:619:631  \"return false\"\n                    var := /** @src -1:-1:-1 */ 0\n                    /// @src 40:619:631  \"return false\"\n                    leave\n                }\n                /// @src 40:647:657  \"uint i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 40:642:1002  \"for (uint i = 0; i <= strBytes.length - substrBytes.length; i++) {...\"\n                for { }\n                /** @src 40:736:740  \"true\" */ 0x01\n                /// @src 40:647:657  \"uint i = 0\"\n                {\n                    /// @src 40:702:705  \"i++\"\n                    var_i := increment_uint256(var_i)\n                }\n                {\n                    /// @src 40:664:679  \"strBytes.length\"\n                    let expr_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:664:679  \"strBytes.length\" */ var_str_mpos)\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let diff := sub(expr_2, mload(/** @src 40:682:700  \"substrBytes.length\" */ var_substr_mpos))\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    if gt(diff, expr_2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x11)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x24)\n                    }\n                    /// @src 40:659:700  \"i <= strBytes.length - substrBytes.length\"\n                    if gt(var_i, diff) { break }\n                    /// @src 40:721:740  \"bool isEqual = true\"\n                    let var_isEqual := /** @src 40:736:740  \"true\" */ 0x01\n                    /// @src 40:759:769  \"uint j = 0\"\n                    let var_j := /** @src -1:-1:-1 */ 0\n                    /// @src 40:754:954  \"for (uint j = 0; j < substrBytes.length; j++) {...\"\n                    for { }\n                    /** @src 40:736:740  \"true\" */ 0x01\n                    /// @src 40:759:769  \"uint j = 0\"\n                    {\n                        /// @src 40:795:798  \"j++\"\n                        var_j := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:795:798  \"j++\" */ var_j, /** @src 40:736:740  \"true\" */ 0x01)\n                    }\n                    /// @src 40:795:798  \"j++\"\n                    {\n                        /// @src 40:771:793  \"j < substrBytes.length\"\n                        if iszero(lt(var_j, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:775:793  \"substrBytes.length\" */ var_substr_mpos)))\n                        /// @src 40:771:793  \"j < substrBytes.length\"\n                        { break }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let sum := add(var_i, var_j)\n                        if gt(var_i, sum)\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x24)\n                        }\n                        let _1 := shl(248, 255)\n                        let cleaned := and(mload(/** @src 40:822:837  \"strBytes[i + j]\" */ memory_array_index_access_bytes(var_str_mpos, /** @src 40:831:836  \"i + j\" */ sum)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)\n                        /// @src 40:818:940  \"if (strBytes[i + j] != substrBytes[j]) {...\"\n                        if /** @src 40:822:855  \"strBytes[i + j] != substrBytes[j]\" */ iszero(eq(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned, and(mload(/** @src 40:841:855  \"substrBytes[j]\" */ memory_array_index_access_bytes(var_substr_mpos, var_j)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)))\n                        /// @src 40:818:940  \"if (strBytes[i + j] != substrBytes[j]) {...\"\n                        {\n                            /// @src 40:879:894  \"isEqual = false\"\n                            var_isEqual := /** @src -1:-1:-1 */ 0\n                            /// @src 40:916:921  \"break\"\n                            break\n                        }\n                    }\n                    /// @src 40:967:991  \"if (isEqual) return true\"\n                    if var_isEqual\n                    {\n                        /// @src 40:980:991  \"return true\"\n                        var := /** @src 40:736:740  \"true\" */ 0x01\n                        /// @src 40:980:991  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 40:1011:1023  \"return false\"\n                var := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n            function abi_encode_string_string(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 64)\n                let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                tail := abi_encode_bytes(value1, tail_1)\n            }\n        }\n        /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 82:\"script/HelperConfig.s.sol\"\n        object \"HelperConfig_51339\" {\n            code {\n                {\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    let _1 := 64\n                    mstore(_1, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ not(16711935)), 65537))\n                    pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                    /// @src 82:3397:3623  \"NetworkConfig({...\"\n                    let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                    /// @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"\n                    let _2 := 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(expr_mpos, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                    /// @src 82:3397:3623  \"NetworkConfig({...\"\n                    let _3 := 32\n                    let _4 := add(expr_mpos, _3)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_4, /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                    /// @src 82:3397:3623  \"NetworkConfig({...\"\n                    let _5 := add(expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    let _6 := 0xc17326c11e8d54a342d4673cb784ca8d9099e760\n                    mstore(_5, _6)\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    let _7 := 0\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1086:1094  \"11155111\" */ 0xaa36a7)\n                    mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let dataSlot := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let _8 := sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let _9 := and(mload(expr_mpos), _8)\n                    let _10 := not(sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1))\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(dataSlot, or(and(sload(dataSlot), _10), _9))\n                    let memberSlot := add(dataSlot, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(memberSlot, or(and(sload(memberSlot), _10), and(mload(_4), _8)))\n                    let memberSlot_1 := add(dataSlot, 2)\n                    sstore(memberSlot_1, or(and(sload(memberSlot_1), _10), and(mload(_5), _8)))\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                    /// @src 82:3018:3209  \"NetworkConfig({...\"\n                    let expr_mpos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(expr_mpos_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                    /// @src 82:3018:3209  \"NetworkConfig({...\"\n                    let _11 := add(expr_mpos_1, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_11, /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                    /// @src 82:3018:3209  \"NetworkConfig({...\"\n                    let _12 := add(expr_mpos_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_12, _6)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let dataSlot_1 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(dataSlot_1, or(and(sload(dataSlot_1), _10), and(mload(expr_mpos_1), _8)))\n                    let memberSlot_2 := add(dataSlot_1, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(memberSlot_2, or(and(sload(memberSlot_2), _10), and(mload(_11), _8)))\n                    let memberSlot_3 := add(dataSlot_1, 2)\n                    sstore(memberSlot_3, or(and(sload(memberSlot_3), _10), and(mload(_12), _8)))\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                    /// @src 82:4360:4567  \"NetworkConfig({...\"\n                    let expr_mpos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7)\n                    /// @src 82:4360:4567  \"NetworkConfig({...\"\n                    let _13 := add(expr_mpos_2, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_13, /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                    /// @src 82:4360:4567  \"NetworkConfig({...\"\n                    let _14 := add(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_14, _6)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1433:1436  \"324\" */ 0x0144)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let dataSlot_2 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(dataSlot_2, or(and(sload(dataSlot_2), _10), and(mload(expr_mpos_2), _8)))\n                    let memberSlot_4 := add(dataSlot_2, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(memberSlot_4, or(and(sload(memberSlot_4), _10), and(mload(_13), _8)))\n                    let memberSlot_5 := add(dataSlot_2, 2)\n                    sstore(memberSlot_5, or(and(sload(memberSlot_5), _10), and(mload(_14), _8)))\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                    /// @src 82:3727:3918  \"NetworkConfig({...\"\n                    let expr_mpos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(expr_mpos_3, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                    /// @src 82:3727:3918  \"NetworkConfig({...\"\n                    let _15 := add(expr_mpos_3, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_15, /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                    /// @src 82:3727:3918  \"NetworkConfig({...\"\n                    let _16 := add(expr_mpos_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                    /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    mstore(_16, _6)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1378:1384  \"421614\" */ 0x066eee)\n                    /// @src 82:1086:1094  \"11155111\"\n                    mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                    /// @src 82:1086:1094  \"11155111\"\n                    let dataSlot_3 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(dataSlot_3, or(and(sload(dataSlot_3), _10), and(mload(expr_mpos_3), _8)))\n                    let memberSlot_6 := add(dataSlot_3, /** @src 18:3166:3170  \"true\" */ 0x01)\n                    /// @src 82:1086:1094  \"11155111\"\n                    sstore(memberSlot_6, or(and(sload(memberSlot_6), _10), and(mload(_15), _8)))\n                    let memberSlot_7 := add(dataSlot_3, 2)\n                    sstore(memberSlot_7, or(and(sload(memberSlot_7), _10), and(mload(_16), _8)))\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    let _17 := mload(_1)\n                    let _18 := datasize(\"HelperConfig_51339_deployed\")\n                    codecopy(_17, dataoffset(\"HelperConfig_51339_deployed\"), _18)\n                    return(_17, _18)\n                }\n                function allocate_memory() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 96)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                {\n                    memPtr := allocate_memory()\n                    mstore(memPtr, 0)\n                    mstore(add(memPtr, 32), 0)\n                    mstore(add(memPtr, 64), 0)\n                }\n            }\n            /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 30:\"lib/forge-std/src/console.sol\", 82:\"script/HelperConfig.s.sol\"\n            object \"HelperConfig_51339_deployed\" {\n                code {\n                    {\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let _1 := 64\n                        mstore(_1, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _2 := 0\n                            switch shr(224, calldataload(_2))\n                            case 0x12900da8 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let ret := fun_getOrCreateAnvilEthConfig()\n                                let memPos := mload(_1)\n                                return(memPos, sub(abi_encode_struct_NetworkConfig(memPos, ret), memPos))\n                            }\n                            case 0x209c25eb {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                let ret_1 := fun_getConfigByChainId(calldataload(4))\n                                let memPos_1 := mload(_1)\n                                return(memPos_1, sub(abi_encode_struct_NetworkConfig(memPos_1, ret_1), memPos_1))\n                            }\n                            case 0x72f953bb {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let memPtr := mload(_1)\n                                finalize_allocation(memPtr)\n                                mstore(memPtr, /** @src 82:3767:3809  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, 32), /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_2 := mload(_1)\n                                return(memPos_2, sub(abi_encode_struct_NetworkConfig(memPos_2, memPtr), memPos_2))\n                            }\n                            case 0x7b99b603 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                mstore(_2, calldataload(4))\n                                mstore(32, /** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ 16)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let dataSlot := keccak256(_2, _1)\n                                let _3 := sub(shl(160, 1), 1)\n                                let cleaned := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ dataSlot), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                let cleaned_1 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1)), _3)\n                                let cleaned_2 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                let memPos_3 := mload(_1)\n                                return(memPos_3, sub(abi_encode_address_address_address(memPos_3, cleaned, cleaned_1, cleaned_2), memPos_3))\n                            }\n                            case 0x7cd4a433 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let memPtr_1 := mload(_1)\n                                finalize_allocation(memPtr_1)\n                                mstore(memPtr_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, 32), /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_4 := mload(_1)\n                                return(memPos_4, sub(abi_encode_struct_NetworkConfig(memPos_4, memPtr_1), memPos_4))\n                            }\n                            case 0xa1bb9417 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let memPtr_2 := mload(_1)\n                                finalize_allocation(memPtr_2)\n                                mstore(memPtr_2, _2)\n                                mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, 32), /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_5 := mload(_1)\n                                return(memPos_5, sub(abi_encode_struct_NetworkConfig(memPos_5, memPtr_2), memPos_5))\n                            }\n                            case 0xa60f7516 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let _4 := sub(shl(160, 1), 1)\n                                let cleaned_3 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 13), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                let cleaned_4 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 14), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                let cleaned_5 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 15), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                let memPos_6 := mload(_1)\n                                return(memPos_6, sub(abi_encode_address_address_address(memPos_6, cleaned_3, cleaned_4, cleaned_5), memPos_6))\n                            }\n                            case 0xba3ec354 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let memPtr_3 := mload(_1)\n                                finalize_allocation(memPtr_3)\n                                mstore(memPtr_3, _2)\n                                mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, 32), /** @src 82:4132:4174  \"0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E\" */ 0x5a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_7 := mload(_1)\n                                return(memPos_7, sub(abi_encode_struct_NetworkConfig(memPos_7, memPtr_3), memPos_7))\n                            }\n                            case 0xc28975d1 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let memPtr_4 := mload(_1)\n                                finalize_allocation(memPtr_4)\n                                mstore(memPtr_4, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, 32), /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_8 := mload(_1)\n                                return(memPos_8, sub(abi_encode_struct_NetworkConfig(memPos_8, memPtr_4), memPos_8))\n                            }\n                            case 0xc3f909d4 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                /// @src 82:2299:2339  \"return getConfigByChainId(block.chainid)\"\n                                let var_mpos := /** @src 82:2306:2339  \"getConfigByChainId(block.chainid)\" */ fun_getConfigByChainId(/** @src 82:2325:2338  \"block.chainid\" */ chainid())\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPos_9 := mload(_1)\n                                return(memPos_9, sub(abi_encode_struct_NetworkConfig(memPos_9, var_mpos), memPos_9))\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(_2, _2) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0xff)\n                                let memPos_10 := mload(_1)\n                                mstore(memPos_10, iszero(iszero(value)))\n                                return(memPos_10, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_struct_NetworkConfig(headStart, value0) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(mload(value0), _1))\n                        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n                        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n                    }\n                    function abi_encode_address_address_address(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(headStart, and(value0, _1))\n                        mstore(add(headStart, 32), and(value1, _1))\n                        mstore(add(headStart, 64), and(value2, _1))\n                    }\n                    function finalize_allocation(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_2854(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_4414(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                    {\n                        let memPtr_1 := mload(64)\n                        finalize_allocation(memPtr_1)\n                        memPtr := memPtr_1\n                        mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                    }\n                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                    function read_from_storage_reference_type_struct_NetworkConfig() -> value\n                    {\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr)\n                        value := memPtr\n                        let _1 := sub(shl(160, 1), 1)\n                        mstore(memPtr, and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                        mstore(add(memPtr, 32), and(sload(14), _1))\n                        mstore(add(memPtr, 64), and(sload(15), _1))\n                    }\n                    /// @ast-id 51338 @src 82:4580:5237  \"function getOrCreateAnvilEthConfig() public returns (NetworkConfig memory) {...\"\n                    function fun_getOrCreateAnvilEthConfig() -> var_mpos\n                    {\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                        let _1 := sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let cleaned := /** @src -1:-1:-1 */ 0\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let _2 := sub(shl(160, 1), 1)\n                        /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                        if /** @src 82:4669:4709  \"localNetworkConfig.account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(_1, _2)))\n                        /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                        {\n                            /// @src 82:4725:4750  \"return localNetworkConfig\"\n                            var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                            /// @src 82:4725:4750  \"return localNetworkConfig\"\n                            leave\n                        }\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let _3 := 64\n                        let memPtr := mload(_3)\n                        finalize_allocation_4414(memPtr)\n                        mstore(memPtr, 18)\n                        mstore(add(memPtr, 32), \"Deploying mocks...\")\n                        /// @src 82:4795:4829  \"console2.log(\\\"Deploying mocks...\\\")\"\n                        fun_log(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ memPtr)\n                        let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            revert(/** @src -1:-1:-1 */ cleaned, cleaned)\n                        }\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        let _5 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        mstore(_5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7fec2a8d))\n                        let _6 := 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ add(_5, 4), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        let _7 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src -1:-1:-1 */ cleaned, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src -1:-1:-1 */ cleaned)\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        if iszero(_7)\n                        {\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos, /** @src -1:-1:-1 */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                        if _7\n                        {\n                            finalize_allocation_2854(_5)\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            cleaned := /** @src -1:-1:-1 */ cleaned\n                        }\n                        /// @src 82:4913:4929  \"new EntryPoint()\"\n                        let _8 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                        /// @src 82:4913:4929  \"new EntryPoint()\"\n                        let _9 := datasize(\"EntryPoint_2097\")\n                        let _10 := add(_8, _9)\n                        let _11 := 0xffffffffffffffff\n                        if or(gt(_10, _11), lt(_10, _8))\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                            revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                        }\n                        /// @src 82:4913:4929  \"new EntryPoint()\"\n                        datacopy(_8, dataoffset(\"EntryPoint_2097\"), _9)\n                        let expr_51300_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4913:4929  \"new EntryPoint()\" */ _8, sub(_10, _8))\n                        if iszero(expr_51300_address)\n                        {\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos_1, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 82:4961:4976  \"new ERC20Mock()\"\n                        let _12 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                        /// @src 82:4961:4976  \"new ERC20Mock()\"\n                        let _13 := datasize(\"ERC20Mock_47815\")\n                        let _14 := add(_12, _13)\n                        if or(gt(_14, /** @src 82:4913:4929  \"new EntryPoint()\" */ _11), /** @src 82:4961:4976  \"new ERC20Mock()\" */ lt(_14, _12))\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                            revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                        }\n                        /// @src 82:4961:4976  \"new ERC20Mock()\"\n                        datacopy(_12, dataoffset(\"ERC20Mock_47815\"), _13)\n                        let expr_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4961:4976  \"new ERC20Mock()\" */ _12, sub(_14, _12))\n                        if iszero(expr_address)\n                        {\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos_2, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                        }\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        let _15 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        mstore(_15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(225, 0x3b756e9b))\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        let _16 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4707:4708  \"0\" */ cleaned)\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        if iszero(_16)\n                        {\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            let pos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                            /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                            returndatacopy(pos_3, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                        if _16\n                        {\n                            finalize_allocation_2854(_15)\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            if cleaned\n                            {\n                                revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                            }\n                        }\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let memPtr_1 := mload(_3)\n                        finalize_allocation_4414(memPtr_1)\n                        mstore(memPtr_1, /** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                        /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                        mstore(add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ \"Mocks deployed!\")\n                        /// @src 82:5014:5045  \"console2.log(\\\"Mocks deployed!\\\")\"\n                        fun_log(/** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ memPtr_1)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let _17 := and(/** @src 82:5116:5135  \"address(entryPoint)\" */ expr_51300_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                        let _18 := and(/** @src 82:5143:5161  \"address(erc20Mock)\" */ expr_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                        let memPtr_2 := mload(_3)\n                        finalize_allocation(memPtr_2)\n                        mstore(memPtr_2, _17)\n                        mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), _18)\n                        mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                        let _19 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _17))\n                        /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                        sstore(14, or(and(sload(14), _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _18))\n                        /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                        sstore(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), _6))\n                        /// @src 82:5205:5230  \"return localNetworkConfig\"\n                        var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                    }\n                    /// @ast-id 51194 @src 82:2352:2721  \"function getConfigByChainId(uint256 chainId) public returns (NetworkConfig memory) {...\"\n                    function fun_getConfigByChainId(var_chainId) -> var_51164_mpos\n                    {\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                        /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                        switch /** @src 82:2449:2474  \"chainId == LOCAL_CHAIN_ID\" */ eq(var_chainId, /** @src 82:1186:1191  \"31337\" */ 0x7a69)\n                        case /** @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\" */ 0 {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                            mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                            switch /** @src 82:2545:2590  \"networkConfigs[chainId].account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(sload(/** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ add(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40), /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)))\n                            case /** @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\" */ 0 {\n                                /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                let _2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(0x40)\n                                /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                mstore(_2, shl(225, 0x64780a77))\n                                revert(_2, 4)\n                            }\n                            default /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                                mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40)\n                                let memPtr := mload(0x40)\n                                finalize_allocation(memPtr)\n                                mstore(memPtr, and(sload(_3), _1))\n                                mstore(add(memPtr, 0x20), and(sload(add(_3, 1)), _1))\n                                mstore(add(memPtr, 0x40), and(sload(add(_3, /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                                /// @src 82:2606:2636  \"return networkConfigs[chainId]\"\n                                var_51164_mpos := memPtr\n                                leave\n                            }\n                        }\n                        default /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                        {\n                            /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                            var_51164_mpos := /** @src 82:2497:2524  \"getOrCreateAnvilEthConfig()\" */ fun_getOrCreateAnvilEthConfig()\n                            /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                            leave\n                        }\n                    }\n                    /// @ast-id 20328 @src 30:6114:6235  \"function log(string memory p0) internal pure {...\"\n                    function fun_log(var_p0_mpos)\n                    {\n                        /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(64)\n                        /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _1 := 0x20\n                        let _2 := add(expr_mpos, 0x20)\n                        mstore(_2, shl(226, 0x104c13eb))\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos, 36), 0x20)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let length := mload(var_p0_mpos)\n                        mstore(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68), length)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        for { }\n                        lt(i, length)\n                        {\n                            i := add(i, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)\n                        }\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        {\n                            mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ i), 100), mload(add(add(var_p0_mpos, i), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)))\n                        }\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ length), 100), /** @src -1:-1:-1 */ 0)\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        let _3 := not(31)\n                        /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                        let _4 := sub(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(add(length, 31), _3)), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos)\n                        mstore(expr_mpos, add(_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68))\n                        let newFreePtr := add(expr_mpos, and(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 131), _3))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36)\n                        }\n                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                        mstore(64, newFreePtr)\n                        /// @src 30:762:921  \"assembly {...\"\n                        pop(staticcall(gas(), /** @src 30:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 30:762:921  \"assembly {...\" */ _2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(/** @src 30:645:659  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ 0, 0))\n                    }\n                }\n                /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 9:\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\", 10:\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\", 12:\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 78:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\"\n                object \"EntryPoint_2097\" {\n                    code {\n                        {\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _1 := memoryguard(0xa0)\n                            mstore(64, _1)\n                            if callvalue() { revert(0, 0) }\n                            /// @src 73:1713:1714  \"1\"\n                            sstore(/** @src 73:1917:1938  \"_status = NOT_ENTERED\" */ 0x02, /** @src 73:1713:1714  \"1\" */ 0x01)\n                            /// @src 0:986:1005  \"new SenderCreator()\"\n                            let _2 := datasize(\"SenderCreator_2414\")\n                            let _3 := add(_1, _2)\n                            if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                            }\n                            /// @src 0:986:1005  \"new SenderCreator()\"\n                            datacopy(_1, dataoffset(\"SenderCreator_2414\"), _2)\n                            let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 0:986:1005  \"new SenderCreator()\" */ _1, sub(_3, _1))\n                            if iszero(expr_address)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let pos := mload(64)\n                                returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                revert(pos, returndatasize())\n                            }\n                            /// @src 0:986:1005  \"new SenderCreator()\"\n                            mstore(128, expr_address)\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            let _4 := mload(64)\n                            let _5 := datasize(\"EntryPoint_2097_deployed\")\n                            codecopy(_4, dataoffset(\"EntryPoint_2097_deployed\"), _5)\n                            setimmutable(_4, \"35\", mload(/** @src 0:986:1005  \"new SenderCreator()\" */ 128))\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            return(_4, _5)\n                        }\n                    }\n                    /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 5:\"lib/account-abstraction/contracts/core/UserOperationLib.sol\", 14:\"lib/account-abstraction/contracts/utils/Exec.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\"\n                    object \"EntryPoint_2097_deployed\" {\n                        code {\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(64, memoryguard(0x80))\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    switch shr(224, calldataload(0))\n                                    case 0x0042dc53 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 512) { revert(0, 0) }\n                                        let offset := calldataload(4)\n                                        let _1 := 0xffffffffffffffff\n                                        if gt(offset, _1) { revert(0, 0) }\n                                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                        let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                                        let _2 := add(calldatasize(), not(35))\n                                        if slt(_2, 0x01c0) { revert(0, 0) }\n                                        let memPtr := mload(64)\n                                        finalize_allocation_26259(memPtr)\n                                        if slt(_2, 0x0140) { revert(0, 0) }\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation_26260(memPtr_1)\n                                        let value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        mstore(memPtr_1, value)\n                                        let _3 := 0x20\n                                        mstore(add(memPtr_1, _3), calldataload(68))\n                                        mstore(add(memPtr_1, 64), calldataload(100))\n                                        mstore(add(memPtr_1, 96), calldataload(132))\n                                        mstore(add(memPtr_1, 128), calldataload(164))\n                                        mstore(add(memPtr_1, 0xa0), calldataload(196))\n                                        mstore(add(memPtr_1, 192), calldataload(228))\n                                        let value_1 := calldataload(260)\n                                        if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        mstore(add(memPtr_1, 224), value_1)\n                                        mstore(add(memPtr_1, 256), calldataload(292))\n                                        mstore(add(memPtr_1, 288), calldataload(324))\n                                        mstore(memPtr, memPtr_1)\n                                        mstore(add(memPtr, _3), calldataload(356))\n                                        mstore(add(memPtr, 64), calldataload(388))\n                                        mstore(add(memPtr, 96), calldataload(420))\n                                        mstore(add(memPtr, 128), calldataload(452))\n                                        let offset_1 := calldataload(484)\n                                        if gt(offset_1, _1) { revert(0, 0) }\n                                        let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                                        /// @src 0:11732:11741  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(/** @src 0:11759:11786  \"msg.sender == address(this)\" */ eq(/** @src 0:11759:11769  \"msg.sender\" */ caller(), /** @src 0:11781:11785  \"this\" */ address()))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_2 := mload(64)\n                                            mstore(memPtr_2, shl(229, 4594637))\n                                            mstore(add(memPtr_2, 4), _3)\n                                            mstore(add(memPtr_2, 36), 23)\n                                            mstore(add(memPtr_2, 68), \"AA92 internal call only\")\n                                            revert(memPtr_2, 100)\n                                        }\n                                        /// @src 0:11854:11868  \"opInfo.mUserOp\"\n                                        let _mpos := mload(memPtr)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _4 := mload(/** @src 0:11902:11922  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                        let r := shr(6, mul(/** @src 0:12058:12067  \"gasleft()\" */ gas(), /** @src 0:12070:12072  \"63\" */ 0x3f))\n                                        /// @src 0:12037:12368  \"if (...\"\n                                        if /** @src 0:12058:12195  \"gasleft() * 63 / 64 <...\" */ lt(r, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(add(_4, mload(/** @src 0:12127:12158  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))), /** @src 0:1297:1302  \"10000\" */ 0x2710))\n                                        /// @src 0:12037:12368  \"if (...\"\n                                        {\n                                            /// @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                            revert(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, _3)\n                                        }\n                                        /// @src 0:12388:12450  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                                        let var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:12464:12479  \"callData.length\"\n                                        let expr_1 := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12464:12479  \"callData.length\" */ array)\n                                        /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                        if /** @src 0:12464:12483  \"callData.length > 0\" */ iszero(iszero(expr_1))\n                                        /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12524:12538  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:12580:13034  \"if (!success) {...\"\n                                            if /** @src 0:12584:12592  \"!success\" */ iszero(/** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ call(_4, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ add(array, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0))\n                                            /// @src 0:12580:13034  \"if (!success) {...\"\n                                            {\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$len := returndatasize()\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _5 := 0x0800\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _5)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                {\n                                                    usr$len := /** @src 0:1543:1547  \"2048\" */ _5\n                                                }\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$ptr := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(usr$ptr, usr$len)\n                                                returndatacopy(add(usr$ptr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                if /** @src 0:12697:12714  \"result.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12697:12710  \"result.length\" */ usr$ptr)))\n                                                /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                {\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _6 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                    let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12837:12851  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    let _7 := mload(/** @src 0:12877:12890  \"mUserOp.nonce\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                    /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                    let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    mstore(_8, _7)\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    mstore(add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 64)\n                                                    /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                    log3(_8, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)), /** @src 0:12743:12944  \"UserOperationRevertReason(...\" */ _8), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _6, cleaned_1)\n                                                }\n                                                /// @src 0:12980:13019  \"mode = IPaymaster.PostOpMode.opReverted\"\n                                                var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1\n                                            }\n                                        }\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let diff := sub(expr, /** @src 0:13107:13116  \"gasleft()\" */ gas())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _9 := add(diff, mload(add(memPtr, 128)))\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _10 := abi_decode_available_length_bytes(/** @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\" */ value2, value3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldatasize())\n                                        /// @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\"\n                                        let var_actualGas := _9\n                                        let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:26799:26808  \"gasleft()\"\n                                        let expr_2 := gas()\n                                        /// @src 0:26842:26863  \"address refundAddress\"\n                                        let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:26842:26863  \"address refundAddress\"\n                                        let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                        let _mpos_1 := mload(memPtr)\n                                        /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                        let expr_3 := fun_getUserOpGasPrice(_mpos_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                        /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                        switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                            /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                            var_refundAddress := cleaned_2\n                                            /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                            if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _10)))\n                                            /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(lt(var_mode, 3))\n                                                {\n                                                    mstore(0, shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(0, 36)\n                                                }\n                                                /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                if /** @src 0:27313:27357  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 0:27321:27357  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                                                /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _11 := mload(/** @src 0:27452:27483  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))\n                                                    /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                    if iszero(extcodesize(cleaned_2))\n                                                    {\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        revert(0, 0)\n                                                    }\n                                                    /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                    let _12 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                    mstore(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x7c627b21))\n                                                    mstore(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ add(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_mode)\n                                                    mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 128)\n                                                    let tail := abi_encode_bytes(_10, add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132))\n                                                    mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), mul(/** @src 0:27267:27287  \"actualGas * gasPrice\" */ _9, expr_3))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), expr_3)\n                                                    /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                    let trySuccessCondition := call(_11, cleaned_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, sub(tail, _12), _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                    /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                    if trySuccessCondition\n                                                    {\n                                                        finalize_allocation_26283(_12)\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        var_refundAddress_1 := 0\n                                                    }\n                                                    /// @src 0:27385:27831  \"try IPaymaster(paymaster).postOp{...\"\n                                                    switch iszero(trySuccessCondition)\n                                                    case 0 { }\n                                                    default {\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$len_1 := returndatasize()\n                                                        /// @src 0:1543:1547  \"2048\"\n                                                        let _13 := 0x0800\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        {\n                                                            usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _13\n                                                        }\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$ptr_1 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(usr$ptr_1, usr$len_1)\n                                                        returndatacopy(add(usr$ptr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                        /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                        let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                        mstore(_14, shl(226, 0x2b5e552f))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ add(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _3)\n                                                        /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                        revert(_14, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14))\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                            var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        }\n                                        /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                        var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(_9, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _15 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                        let sum := add(_15, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0)))\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let diff_1 := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(add(memPtr, 128)))\n                                        /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                        if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff_1)\n                                        /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                        {\n                                            /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                            var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff_1), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                        }\n                                        /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                        var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _16 := mload(add(memPtr, 64))\n                                        /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                        switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_16, var_actualGasCost)\n                                        case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                            /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                            pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _16, var_actualGasCost)))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if iszero(lt(var_mode, 3))\n                                            {\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                mstore(4, 0x21)\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _17 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                            /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                            let _mpos_2 := mload(memPtr)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos_2), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                            let _18 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                            /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                            let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            mstore(_19, _18)\n                                            mstore(add(_19, _3), /** @src 0:29364:29405  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(_19, 64), var_actualGasCost)\n                                            mstore(add(_19, 96), var_actualGas)\n                                            /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                            log4(_19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _17, cleaned_3, cleaned_4)\n                                        }\n                                        default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if iszero(lt(var_mode, 3))\n                                            {\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                mstore(4, 0x21)\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                            switch /** @src 0:28761:28805  \"mode == IPaymaster.PostOpMode.postOpReverted\" */ eq(var_mode, /** @src 0:28769:28805  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                                            case /** @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                                                /// @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                            }\n                                            default /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                            {\n                                                /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                var_actualGasCost := _16\n                                                /// @src 0:28892:28898  \"opInfo\"\n                                                fun_emitPrefundTooLow(memPtr)\n                                                /// @src 0:28974:28983  \"actualGas\"\n                                                fun_emitUserOperationEvent(memPtr, _16, var_actualGas)\n                                            }\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos := mload(64)\n                                        mstore(memPos, var_actualGasCost)\n                                        return(memPos, _3)\n                                    }\n                                    case 0x01ffc9a7 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value_2 := calldataload(4)\n                                        let _20 := and(value_2, shl(224, 0xffffffff))\n                                        if iszero(eq(value_2, _20)) { revert(0, 0) }\n                                        /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                        let expr_4 := /** @src 0:1860:1974  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId)\" */ eq(_20, /** @src 0:1876:1973  \"type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId\" */ shl(225, 0x307e35b7))\n                                        /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                        if iszero(expr_4)\n                                        {\n                                            expr_4 := /** @src 0:1990:2034  \"interfaceId == type(IEntryPoint).interfaceId\" */ eq(_20, /** @src 0:1876:1905  \"type(IEntryPoint).interfaceId\" */ shl(227, 0x122a0e9b))\n                                        }\n                                        /// @src 0:1860:2096  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                        let expr_5 := expr_4\n                                        if iszero(expr_4)\n                                        {\n                                            expr_5 := /** @src 0:2050:2096  \"interfaceId == type(IStakeManager).interfaceId\" */ eq(_20, /** @src 0:1908:1939  \"type(IStakeManager).interfaceId\" */ shl(224, 0xcf28ef97))\n                                        }\n                                        /// @src 0:1860:2158  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                        let expr_6 := expr_5\n                                        if iszero(expr_5)\n                                        {\n                                            expr_6 := /** @src 0:2112:2158  \"interfaceId == type(INonceManager).interfaceId\" */ eq(_20, /** @src 0:1942:1973  \"type(INonceManager).interfaceId\" */ shl(224, 0x3e84f021))\n                                        }\n                                        /// @src 0:1860:2210  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                        let expr_7 := expr_6\n                                        if iszero(expr_6)\n                                        {\n                                            expr_7 := /** @src 77:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_20, /** @src 77:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos_1 := mload(64)\n                                        mstore(memPos_1, iszero(iszero(expr_7)))\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x0396cb60 {\n                                        let _21 := 32\n                                        if slt(add(calldatasize(), not(3)), _21) { revert(0, 0) }\n                                        let value_3 := calldataload(4)\n                                        let _22 := 0xffffffff\n                                        let _23 := and(value_3, _22)\n                                        if iszero(eq(value_3, _23)) { revert(0, 0) }\n                                        mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_21, 0)\n                                        let dataSlot := keccak256(0, 64)\n                                        if /** @src 4:2457:2476  \"unstakeDelaySec > 0\" */ iszero(_23)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_3 := mload(64)\n                                            mstore(memPtr_3, shl(229, 4594637))\n                                            mstore(add(memPtr_3, 4), _21)\n                                            mstore(add(memPtr_3, 36), 26)\n                                            mstore(add(memPtr_3, 68), \"must specify unstake delay\")\n                                            revert(memPtr_3, 100)\n                                        }\n                                        let _24 := sload(/** @src 4:2557:2577  \"info.unstakeDelaySec\" */ add(dataSlot, 1))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:2538:2577  \"unstakeDelaySec >= info.unstakeDelaySec\" */ lt(_23, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(120, _24), _22))\n                                        {\n                                            let memPtr_4 := mload(64)\n                                            mstore(memPtr_4, shl(229, 4594637))\n                                            mstore(add(memPtr_4, 4), _21)\n                                            mstore(add(memPtr_4, 36), 28)\n                                            mstore(add(memPtr_4, 68), \"cannot decrease unstake time\")\n                                            revert(memPtr_4, 100)\n                                        }\n                                        let _25 := 0xffffffffffffffffffffffffffff\n                                        /// @src 4:2657:2679  \"info.stake + msg.value\"\n                                        let expr_8 := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(8, _24), _25), /** @src 4:2670:2679  \"msg.value\" */ callvalue())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:2697:2706  \"stake > 0\" */ iszero(expr_8)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_5 := mload(64)\n                                            mstore(memPtr_5, shl(229, 4594637))\n                                            mstore(add(memPtr_5, 4), _21)\n                                            mstore(add(memPtr_5, 36), 18)\n                                            mstore(add(memPtr_5, 68), \"no stake specified\")\n                                            revert(memPtr_5, 100)\n                                        }\n                                        if /** @src 4:2747:2773  \"stake <= type(uint112).max\" */ gt(expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25)\n                                        {\n                                            let memPtr_6 := mload(64)\n                                            mstore(memPtr_6, shl(229, 4594637))\n                                            mstore(add(memPtr_6, 4), _21)\n                                            mstore(add(memPtr_6, 36), 14)\n                                            mstore(add(memPtr_6, 68), \"stake overflow\")\n                                            revert(memPtr_6, 100)\n                                        }\n                                        let _26 := sload(/** @src 4:2850:2862  \"info.deposit\" */ dataSlot)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPtr_7 := mload(64)\n                                        finalize_allocation_26259(memPtr_7)\n                                        mstore(memPtr_7, _26)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _27 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21)\n                                        mstore(_27, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _28 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                        mstore(_28, and(/** @src 4:2894:2908  \"uint112(stake)\" */ expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25))\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _29 := add(memPtr_7, 96)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_29, _23)\n                                        /// @src 4:2825:2962  \"DepositInfo(...\"\n                                        let _30 := add(memPtr_7, 128)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_30, 0)\n                                        mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_21, 0)\n                                        let dataSlot_1 := keccak256(0, 64)\n                                        sstore(dataSlot_1, mload(memPtr_7))\n                                        let memberSlot := add(dataSlot_1, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _31 := iszero(iszero(mload(_27)))\n                                        let _32 := sload(memberSlot)\n                                        let _33 := and(shl(8, mload(_28)), 0xffffffffffffffffffffffffffff00)\n                                        sstore(memberSlot, or(or(_33, or(and(_32, shl(152, 0xffffffffffffffffffffffffff)), and(_31, 255))), and(shl(120, mload(_29)), shl(120, 0xffffffff))))\n                                        update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(_30), 0xffffffffffff))\n                                        /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                        let _34 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_34, expr_8)\n                                        mstore(add(_34, _21), _23)\n                                        /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                        log2(_34, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\" */ 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x0bd28e3b {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value_4 := calldataload(4)\n                                        let _35 := and(value_4, sub(shl(192, 1), 1))\n                                        if iszero(eq(value_4, _35)) { revert(0, 0) }\n                                        mstore(0, /** @src 2:913:923  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(32, /** @src 2:893:912  \"nonceSequenceNumber\" */ 0x01)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _36 := keccak256(0, 64)\n                                        mstore(0, _35)\n                                        mstore(32, _36)\n                                        let dataSlot_2 := keccak256(0, 64)\n                                        sstore(dataSlot_2, /** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot_2)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0x1b2e01b8 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0 := abi_decode_address()\n                                        let value1 := abi_decode_uint192()\n                                        mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 2:279:353  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _37 := keccak256(0, 64)\n                                        mstore(0, and(value1, sub(shl(192, 1), 1)))\n                                        mstore(32, _37)\n                                        let _38 := sload(keccak256(0, 64))\n                                        let memPos_2 := mload(64)\n                                        mstore(memPos_2, _38)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x205c2878 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_1 := abi_decode_address()\n                                        let value_5 := calldataload(36)\n                                        mstore(0, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(32, 0)\n                                        let dataSlot_3 := keccak256(0, 64)\n                                        let _39 := sload(/** @src 4:4852:4864  \"info.deposit\" */ dataSlot_3)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 4:4834:4864  \"withdrawAmount <= info.deposit\" */ gt(value_5, _39)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_8 := mload(64)\n                                            mstore(memPtr_8, shl(229, 4594637))\n                                            mstore(add(memPtr_8, 4), 32)\n                                            mstore(add(memPtr_8, 36), 25)\n                                            mstore(add(memPtr_8, 68), \"Withdraw amount too large\")\n                                            revert(memPtr_8, 100)\n                                        }\n                                        sstore(dataSlot_3, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _39, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ value_5))\n                                        /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                        let _40 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                        log2(_40, sub(abi_encode_address_payable_uint256(_40, value0_1, value_5), _40), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                        /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                        let expr_component := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:5045:5065  \"withdrawAddress.call\" */ value0_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                        /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_component)\n                                        {\n                                            let memPtr_9 := mload(64)\n                                            mstore(memPtr_9, shl(229, 4594637))\n                                            mstore(add(memPtr_9, 4), 32)\n                                            mstore(add(memPtr_9, 36), 18)\n                                            mstore(add(memPtr_9, 68), \"failed to withdraw\")\n                                            revert(memPtr_9, 100)\n                                        }\n                                        return(0, 0)\n                                    }\n                                    case 0x22cdde4c {\n                                        if callvalue() { revert(0, 0) }\n                                        let _41 := not(3)\n                                        if slt(add(calldatasize(), _41), 32) { revert(0, 0) }\n                                        let offset_2 := calldataload(4)\n                                        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                        if slt(add(sub(calldatasize(), offset_2), _41), 288) { revert(0, 0) }\n                                        let ret := fun_getUserOpHash(add(4, offset_2))\n                                        let memPos_3 := mload(64)\n                                        mstore(memPos_3, ret)\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x35567e1a {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_2 := abi_decode_address()\n                                        let value1_1 := abi_decode_uint192()\n                                        mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                                        mstore(32, /** @src 2:507:526  \"nonceSequenceNumber\" */ 0x01)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _42 := keccak256(0, 64)\n                                        mstore(0, and(value1_1, sub(shl(192, 1), 1)))\n                                        mstore(32, _42)\n                                        let _43 := sload(keccak256(0, 64))\n                                        let memPos_4 := mload(64)\n                                        mstore(memPos_4, /** @src 2:507:562  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_43, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shl(64, /** @src 2:543:555  \"uint256(key)\" */ value1_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(0xffffffffffffffff))))\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x5287ce12 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let value0_3 := abi_decode_address()\n                                        let memPtr_10 := mload(64)\n                                        finalize_allocation_26259(memPtr_10)\n                                        mstore(memPtr_10, 0)\n                                        mstore(add(memPtr_10, 32), 0)\n                                        mstore(add(memPtr_10, 64), 0)\n                                        mstore(add(memPtr_10, 96), 0)\n                                        mstore(add(memPtr_10, 128), 0)\n                                        mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let dataSlot_4 := keccak256(0, 64)\n                                        let memPtr_11 := mload(64)\n                                        finalize_allocation_26259(memPtr_11)\n                                        let _44 := sload(dataSlot_4)\n                                        mstore(memPtr_11, _44)\n                                        let _45 := sload(add(dataSlot_4, 1))\n                                        let _46 := add(memPtr_11, 32)\n                                        mstore(_46, iszero(iszero(and(_45, 0xff))))\n                                        let _47 := 0xffffffffffffffffffffffffffff\n                                        let _48 := add(memPtr_11, 64)\n                                        mstore(_48, and(shr(8, _45), _47))\n                                        let _49 := 0xffffffff\n                                        let _50 := add(memPtr_11, 96)\n                                        mstore(_50, and(shr(120, _45), _49))\n                                        let _51 := 0xffffffffffff\n                                        let _52 := add(memPtr_11, 128)\n                                        mstore(_52, and(shr(152, _45), _51))\n                                        let memPos_5 := mload(64)\n                                        mstore(memPos_5, _44)\n                                        mstore(add(memPos_5, 32), iszero(iszero(mload(_46))))\n                                        mstore(add(memPos_5, 64), and(mload(_48), _47))\n                                        mstore(add(memPos_5, 96), and(mload(_50), _49))\n                                        mstore(add(memPos_5, 128), and(mload(_52), _51))\n                                        return(memPos_5, 160)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let _53 := sload(keccak256(0, 64))\n                                        let memPos_6 := mload(64)\n                                        mstore(memPos_6, _53)\n                                        return(memPos_6, 32)\n                                    }\n                                    case 0x765e827f {\n                                        if callvalue() { revert(0, 0) }\n                                        let param, param_1, param_2 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                        /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                        fun_nonReentrantBefore()\n                                        /// @src 0:6980:7004  \"new UserOpInfo[](opslen)\"\n                                        let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                                        /// @src 0:7044:7057  \"uint256 i = 0\"\n                                        let var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7039:7520  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                        for { }\n                                        /** @src 0:7059:7069  \"i < opslen\" */ lt(var_i, param_1)\n                                        /// @src 0:7044:7057  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:7071:7074  \"i++\"\n                                            var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7071:7074  \"i++\" */ var_i, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        }\n                                        /// @src 0:7071:7074  \"i++\"\n                                        {\n                                            /// @src 0:7260:7298  \"_validatePrepayment(i, ops[i], opInfo)\"\n                                            let expr_component_1, expr_component_2 := fun_validatePrepayment(var_i, /** @src 0:7283:7289  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 0:7121:7131  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                                            /// @src 0:21736:21792  \"_getValidationData(...\"\n                                            let expr_component_3, expr_component_4 := fun_getValidationData(expr_component_1)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _54 := sub(shl(160, 1), 1)\n                                            /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                            if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                            /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                            {\n                                                /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                let _55 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                mstore(_55, shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                revert(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                            if expr_component_4\n                                            {\n                                                /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                let _56 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                mstore(_56, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                revert(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:22320:22385  \"_getValidationData(...\"\n                                            let expr_component_5, expr_component_6 := fun_getValidationData(expr_component_2)\n                                            /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                            if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                            /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                            {\n                                                /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                let _57 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                mstore(_57, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                revert(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                            if expr_component_6\n                                            {\n                                                /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                let _58 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                mstore(_58, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                revert(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                            }\n                                        }\n                                        /// @src 0:7534:7555  \"uint256 collected = 0\"\n                                        let var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7574:7591  \"BeforeExecution()\"\n                                        log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:7574:7591  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                        /// @src 0:7611:7624  \"uint256 i = 0\"\n                                        let var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:7606:7726  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                        for { }\n                                        /** @src 0:7626:7636  \"i < opslen\" */ lt(var_i_1, param_1)\n                                        /// @src 0:7611:7624  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:7638:7641  \"i++\"\n                                            var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7638:7641  \"i++\" */ var_i_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        }\n                                        /// @src 0:7638:7641  \"i++\"\n                                        {\n                                            /// @src 0:7692:7698  \"ops[i]\"\n                                            let expr_offset := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                                            /// @src 0:7661:7711  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                                            var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_collected, /** @src 0:7674:7711  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 0:7700:7710  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                                        }\n                                        /// @src 0:7765:7774  \"collected\"\n                                        fun_compensate(param_2, var_collected)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        return(0, 0)\n                                    }\n                                    case 0x850aaf62 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                        let value0_4 := abi_decode_address()\n                                        let offset_3 := calldataload(36)\n                                        if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value1_2, value2_1 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                        /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                        let _59 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        calldatacopy(_59, value1_2, value2_1)\n                                        let _60 := add(_59, value2_1)\n                                        mstore(_60, 0)\n                                        /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                        let expr_component_7 := delegatecall(gas(), value0_4, _59, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _60, /** @src 0:31052:31077  \"target.delegatecall(data)\" */ _59), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0)\n                                        /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                        let expr_component_mpos := extract_returndata()\n                                        /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                        let _61 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                        mstore(_61, shl(226, 0x26504155))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ add(_61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), iszero(iszero(expr_component_7)))\n                                        mstore(add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                        /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                        revert(_61, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(expr_component_mpos, add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)), /** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61))\n                                    }\n                                    case /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x9b249f69 {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        let offset_4 := calldataload(4)\n                                        if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                                        let value0_5, value1_3 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                                        let _62 := sub(shl(160, 1), 1)\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        let _63 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        mstore(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                        mstore(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ add(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 32)\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        let _64 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _62), 0, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(value0_5, value1_3, add(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63), _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32)\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        if iszero(_64)\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let pos := mload(64)\n                                            returndatacopy(pos, 0, returndatasize())\n                                            revert(pos, returndatasize())\n                                        }\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        let expr_9 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                        if _64\n                                        {\n                                            let _65 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32\n                                            /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                            if gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ returndatasize()) { _65 := returndatasize() }\n                                            finalize_allocation(_63, _65)\n                                            expr_9 := abi_decode_address_fromMemory(_63, add(_63, _65))\n                                        }\n                                        /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                        let _66 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                        mstore(_66, shl(225, 0x3653dc03))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:16922:16949  \"SenderAddressResult(sender)\" */ add(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), and(expr_9, _62))\n                                        /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                        revert(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                    }\n                                    case 0xb760faf9 {\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        fun_depositTo(abi_decode_address())\n                                        return(0, 0)\n                                    }\n                                    case 0xbb9fe6bf {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                        mstore(0, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0x20, 0)\n                                        /// @src 4:3277:3297  \"info.unstakeDelaySec\"\n                                        let _67 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3277:3297  \"info.unstakeDelaySec\" */ 1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _68 := sload(/** @src 4:3277:3297  \"info.unstakeDelaySec\" */ _67)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value_6 := and(shr(120, _68), 0xffffffff)\n                                        if /** @src 4:3277:3302  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_6)\n                                        {\n                                            let memPtr_12 := mload(64)\n                                            mstore(memPtr_12, shl(229, 4594637))\n                                            mstore(add(memPtr_12, 4), 0x20)\n                                            mstore(add(memPtr_12, 36), 10)\n                                            mstore(add(memPtr_12, 68), \"not staked\")\n                                            revert(memPtr_12, 100)\n                                        }\n                                        if iszero(and(_68, 0xff))\n                                        {\n                                            let memPtr_13 := mload(64)\n                                            mstore(memPtr_13, shl(229, 4594637))\n                                            mstore(add(memPtr_13, 4), 0x20)\n                                            mstore(add(memPtr_13, 36), 17)\n                                            mstore(add(memPtr_13, 68), \"already unstaking\")\n                                            revert(memPtr_13, 100)\n                                        }\n                                        let _69 := 0xffffffffffff\n                                        let sum_1 := add(and(/** @src 4:3407:3422  \"block.timestamp\" */ timestamp(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _69), value_6)\n                                        if gt(sum_1, _69)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                        /// @src 4:3456:3488  \"info.withdrawTime = withdrawTime\"\n                                        update_storage_value_offsett_uint48_to_uint48(_67, sum_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(_67, and(sload(_67), not(255)))\n                                        /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                        let _70 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_70, and(sum_1, _69))\n                                        /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                        log2(_70, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20, /** @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\" */ 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xc23a5cea {\n                                        if callvalue() { revert(0, 0) }\n                                        let _71 := 32\n                                        if slt(add(calldatasize(), not(3)), _71) { revert(0, 0) }\n                                        let value0_6 := abi_decode_address()\n                                        mstore(0, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_71, 0)\n                                        /// @src 4:3934:3944  \"info.stake\"\n                                        let _72 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3934:3944  \"info.stake\" */ 1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _73 := sload(/** @src 4:3934:3944  \"info.stake\" */ _72)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value_7 := and(shr(8, _73), 0xffffffffffffffffffffffffffff)\n                                        if /** @src 4:3962:3971  \"stake > 0\" */ iszero(value_7)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_14 := mload(64)\n                                            mstore(memPtr_14, shl(229, 4594637))\n                                            mstore(add(memPtr_14, 4), _71)\n                                            mstore(add(memPtr_14, 36), 20)\n                                            mstore(add(memPtr_14, 68), \"No stake to withdraw\")\n                                            revert(memPtr_14, 100)\n                                        }\n                                        let value_8 := and(shr(152, _73), 0xffffffffffff)\n                                        if /** @src 4:4014:4035  \"info.withdrawTime > 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8)\n                                        {\n                                            let memPtr_15 := mload(64)\n                                            mstore(memPtr_15, shl(229, 4594637))\n                                            mstore(add(memPtr_15, 4), _71)\n                                            mstore(add(memPtr_15, 36), 29)\n                                            mstore(add(memPtr_15, 68), \"must call unlockStake() first\")\n                                            revert(memPtr_15, 100)\n                                        }\n                                        if /** @src 4:4100:4136  \"info.withdrawTime <= block.timestamp\" */ gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8, /** @src 4:4121:4136  \"block.timestamp\" */ timestamp())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr_16 := mload(64)\n                                            mstore(memPtr_16, shl(229, 4594637))\n                                            mstore(add(memPtr_16, 4), _71)\n                                            mstore(add(memPtr_16, 36), 27)\n                                            mstore(add(memPtr_16, 68), \"Stake withdrawal is not due\")\n                                            revert(memPtr_16, 100)\n                                        }\n                                        sstore(_72, and(_73, not(sub(shl(200, 1), 256))))\n                                        /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                        let _74 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                        log2(_74, sub(abi_encode_address_payable_uint256(_74, value0_6, value_7), _74), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                        /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                        let expr_component_8 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:4371:4391  \"withdrawAddress.call\" */ value0_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ value_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                        /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_component_8)\n                                        {\n                                            let memPtr_17 := mload(64)\n                                            mstore(memPtr_17, shl(229, 4594637))\n                                            mstore(add(memPtr_17, 4), _71)\n                                            mstore(add(memPtr_17, 36), 24)\n                                            mstore(add(memPtr_17, 68), \"failed to withdraw stake\")\n                                            revert(memPtr_17, 100)\n                                        }\n                                        return(0, 0)\n                                    }\n                                    case 0xdbed18e0 {\n                                        if callvalue() { revert(0, 0) }\n                                        let param_3, param_4, param_5 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                        /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                        fun_nonReentrantBefore()\n                                        /// @src 0:8042:8062  \"uint256 totalOps = 0\"\n                                        let var_totalOps := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8077:8090  \"uint256 i = 0\"\n                                        let var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8072:8839  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                                        for { }\n                                        /** @src 0:8092:8103  \"i < opasLen\" */ lt(var_i_2, param_4)\n                                        /// @src 0:8077:8090  \"uint256 i = 0\"\n                                        {\n                                            /// @src 0:8105:8108  \"i++\"\n                                            var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8105:8108  \"i++\" */ var_i_2, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:8105:8108  \"i++\"\n                                        {\n                                            /// @src 0:8160:8179  \"opsPerAggregator[i]\"\n                                            let expr_offset_1 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_i_2)\n                                            /// @src 0:8230:8241  \"opa.userOps\"\n                                            let expr_offset_2, expr_length := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_1, expr_offset_1)\n                                            /// @src 0:8280:8294  \"opa.aggregator\"\n                                            let _75 := 32\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _76 := and(/** @src 0:8280:8294  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_1, _75)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:8429:8430  \"1\"\n                                            let _77 := 0x01\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if /** @src 0:8398:8431  \"address(aggregator) != address(1)\" */ eq(_76, /** @src 0:8429:8430  \"1\" */ _77)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            {\n                                                let memPtr_18 := mload(64)\n                                                mstore(memPtr_18, shl(229, 4594637))\n                                                mstore(add(memPtr_18, 4), /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(memPtr_18, 36), 23)\n                                                mstore(add(memPtr_18, 68), \"AA96 invalid aggregator\")\n                                                revert(memPtr_18, 100)\n                                            }\n                                            /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                            if /** @src 0:8507:8540  \"address(aggregator) != address(0)\" */ iszero(iszero(_76))\n                                            /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                            {\n                                                /// @src 0:8660:8673  \"opa.signature\"\n                                                let expr_offset_3, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset_1, add(expr_offset_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64))\n                                                /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                if iszero(extcodesize(_76))\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    revert(0, 0)\n                                                }\n                                                /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                let _78 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                mstore(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x2dd81133))\n                                                let tail_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)\n                                                mstore(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ add(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 64)\n                                                let pos_1 := tail_1\n                                                mstore(tail_1, expr_length)\n                                                let _79 := 100\n                                                pos_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _79)\n                                                let tail_2 := add(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(5, expr_length)), _79)\n                                                let srcPtr := expr_offset_2\n                                                let i := 0\n                                                for { }\n                                                lt(i, expr_length)\n                                                {\n                                                    i := add(i, /** @src 0:8429:8430  \"1\" */ _77)\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    mstore(pos_1, add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(99)))\n                                                    let rel_offset_of_tail := calldataload(srcPtr)\n                                                    if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_2), not(286)))) { revert(0, 0) }\n                                                    tail_2 := abi_encode_struct_PackedUserOperation_calldata(add(rel_offset_of_tail, expr_offset_2), tail_2)\n                                                    srcPtr := add(srcPtr, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    pos_1 := add(pos_1, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(3)))\n                                                /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                let trySuccessCondition_1 := staticcall(gas(), _76, _78, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_3, expr_length_1, tail_2), /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                if trySuccessCondition_1\n                                                {\n                                                    finalize_allocation_26283(_78)\n                                                }\n                                                /// @src 0:8621:8778  \"try aggregator.validateSignatures(ops, opa.signature) {} catch {...\"\n                                                switch iszero(trySuccessCondition_1)\n                                                case 0 { }\n                                                default {\n                                                    /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                    let _80 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                    mstore(_80, shl(228, 0x086a9f75))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\" */ add(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _76)\n                                                    /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                    revert(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                }\n                                            }\n                                            /// @src 0:8806:8828  \"totalOps += ops.length\"\n                                            var_totalOps := checked_add_uint256(var_totalOps, /** @src 0:8818:8828  \"ops.length\" */ expr_length)\n                                        }\n                                        /// @src 0:8879:8905  \"new UserOpInfo[](totalOps)\"\n                                        let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                                        /// @src 0:8916:8935  \"uint256 opIndex = 0\"\n                                        let var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8950:8963  \"uint256 a = 0\"\n                                        let var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:8945:9776  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                        for { }\n                                        /** @src 0:8965:8976  \"a < opasLen\" */ lt(var_a, param_4)\n                                        /// @src 0:8950:8963  \"uint256 a = 0\"\n                                        {\n                                            /// @src 0:8978:8981  \"a++\"\n                                            var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8978:8981  \"a++\" */ var_a, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:8978:8981  \"a++\"\n                                        {\n                                            /// @src 0:9033:9052  \"opsPerAggregator[a]\"\n                                            let expr_offset_4 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a)\n                                            /// @src 0:9103:9114  \"opa.userOps\"\n                                            let expr_offset_5, expr_length_2 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_4, expr_offset_4)\n                                            /// @src 0:9153:9167  \"opa.aggregator\"\n                                            let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_4, /** @src 0:8280:8294  \"opa.aggregator\" */ 32))\n                                            /// @src 0:9228:9241  \"uint256 i = 0\"\n                                            let var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            let _81 := sub(shl(160, 1), 1)\n                                            let _82 := and(/** @src 0:9687:9706  \"address(aggregator)\" */ expr_address, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)\n                                            /// @src 0:9223:9766  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                            for { }\n                                            /** @src 0:9243:9253  \"i < opslen\" */ lt(var_i_3, expr_length_2)\n                                            /// @src 0:9228:9241  \"uint256 i = 0\"\n                                            {\n                                                /// @src 0:9255:9258  \"i++\"\n                                                var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9255:9258  \"i++\" */ var_i_3, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                            }\n                                            /// @src 0:9255:9258  \"i++\"\n                                            {\n                                                /// @src 0:9457:9501  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                                                let expr_component_9, expr_component_10 := fun_validatePrepayment(var_opIndex, /** @src 0:9486:9492  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_5, expr_length_2, var_i_3), /** @src 0:9305:9321  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex)))\n                                                /// @src 0:21736:21792  \"_getValidationData(...\"\n                                                let expr_component_11, expr_component_12 := fun_getValidationData(expr_component_9)\n                                                /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _82, and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_11, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                {\n                                                    /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    let _83 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    mstore(_83, shl(225, 0x1101335b))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                    mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                    /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                    revert(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                                if expr_component_12\n                                                {\n                                                    /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    let _84 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    mstore(_84, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                    mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                    /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                    revert(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:22320:22385  \"_getValidationData(...\"\n                                                let expr_component_13, expr_component_14 := fun_getValidationData(expr_component_10)\n                                                /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                {\n                                                    /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    let _85 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    mstore(_85, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                    mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                    /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                    revert(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                }\n                                                /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                                if expr_component_14\n                                                {\n                                                    /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    let _86 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    mstore(_86, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                    mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                    mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                    mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                    mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                    /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                    revert(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                }\n                                                /// @src 0:9742:9751  \"opIndex++\"\n                                                var_opIndex := increment_uint256(var_opIndex)\n                                            }\n                                        }\n                                        /// @src 0:9791:9808  \"BeforeExecution()\"\n                                        log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9791:9808  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                        /// @src 0:9850:9861  \"opIndex = 0\"\n                                        var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9819:9840  \"uint256 collected = 0\"\n                                        let var_collected_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9876:9889  \"uint256 a = 0\"\n                                        let var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:9871:10335  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                        for { }\n                                        /** @src 0:9891:9902  \"a < opasLen\" */ lt(var_a_1, param_4)\n                                        /// @src 0:9876:9889  \"uint256 a = 0\"\n                                        {\n                                            /// @src 0:9904:9907  \"a++\"\n                                            var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9904:9907  \"a++\" */ var_a_1, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                        }\n                                        /// @src 0:9904:9907  \"a++\"\n                                        {\n                                            /// @src 0:9959:9978  \"opsPerAggregator[a]\"\n                                            let expr_offset_6 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a_1)\n                                            /// @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                                            log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:10032:10046  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_6, /** @src 0:8280:8294  \"opa.aggregator\" */ 32)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                            /// @src 0:10099:10110  \"opa.userOps\"\n                                            let expr_offset_7, expr_length_3 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_6, expr_offset_6)\n                                            /// @src 0:10171:10184  \"uint256 i = 0\"\n                                            let var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:10166:10325  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                            for { }\n                                            /** @src 0:10186:10196  \"i < opslen\" */ lt(var_i_4, expr_length_3)\n                                            /// @src 0:10171:10184  \"uint256 i = 0\"\n                                            {\n                                                /// @src 0:10198:10201  \"i++\"\n                                                var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:10198:10201  \"i++\" */ var_i_4, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                            }\n                                            /// @src 0:10198:10201  \"i++\"\n                                            {\n                                                /// @src 0:10258:10264  \"ops[i]\"\n                                                let expr_offset_8 := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_7, expr_length_3, var_i_4)\n                                                /// @src 0:10221:10283  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                                                var_collected_1 := checked_add_uint256(var_collected_1, /** @src 0:10234:10283  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_8, /** @src 0:10266:10282  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex))))\n                                                /// @src 0:10301:10310  \"opIndex++\"\n                                                var_opIndex := increment_uint256(var_opIndex)\n                                            }\n                                        }\n                                        /// @src 0:10349:10387  \"SignatureAggregatorChanged(address(0))\"\n                                        log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        /// @src 0:10423:10432  \"collected\"\n                                        fun_compensate(param_5, var_collected_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        return(0, 0)\n                                    }\n                                    case 0xfc7e286d {\n                                        if callvalue() { revert(0, 0) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                        mstore(32, 0)\n                                        let dataSlot_5 := keccak256(0, 64)\n                                        let _87 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ dataSlot_5)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _88 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot_5, 1))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPos_7 := mload(64)\n                                        mstore(memPos_7, _87)\n                                        mstore(add(memPos_7, 32), iszero(iszero(and(_88, 0xff))))\n                                        mstore(add(memPos_7, 64), and(shr(8, _88), 0xffffffffffffffffffffffffffff))\n                                        mstore(add(memPos_7, 96), and(shr(120, _88), 0xffffffff))\n                                        mstore(add(memPos_7, 128), and(shr(152, _88), 0xffffffffffff))\n                                        return(memPos_7, 160)\n                                    }\n                                }\n                                if iszero(calldatasize())\n                                {\n                                    /// @src 4:1326:1336  \"msg.sender\"\n                                    fun_depositTo(caller())\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    stop()\n                                }\n                                revert(0, 0)\n                            }\n                            function finalize_allocation_26259(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 0xa0)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_26260(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 0x0140)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_26283(memPtr)\n                            {\n                                if gt(memPtr, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, memPtr)\n                            }\n                            function finalize_allocation_26350(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 96)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation(memPtr, size)\n                            {\n                                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function array_allocation_size_bytes(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(and(add(length, 31), not(31)), 0x20)\n                            }\n                            function abi_decode_available_length_bytes(src, length, end) -> array\n                            {\n                                let _1 := array_allocation_size_bytes(length)\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr, _1)\n                                array := memPtr\n                                mstore(memPtr, length)\n                                if gt(add(src, length), end)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                calldatacopy(add(memPtr, 0x20), src, length)\n                                mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                            }\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                            {\n                                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                length := calldataload(offset)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                arrayPos := add(offset, 0x20)\n                                if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                            }\n                            function abi_decode_uint192() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n                            {\n                                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                                let offset := calldataload(4)\n                                let _1 := 0xffffffffffffffff\n                                if gt(offset, _1) { revert(0, 0) }\n                                if iszero(slt(add(offset, 35), dataEnd))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let length := calldataload(add(4, offset))\n                                if gt(length, _1)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value0 := add(offset, 36)\n                                value1 := length\n                                let value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value2 := value\n                            }\n                            /// @src 0:1543:1547  \"2048\"\n                            function copy_memory_to_memory_with_cleanup(src, dst, length)\n                            {\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, 32) }\n                                {\n                                    mstore(add(dst, i), mload(add(src, i)))\n                                }\n                                mstore(add(dst, length), 0)\n                            }\n                            function abi_encode_bytes(value, pos) -> end\n                            {\n                                let length := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:1543:1547  \"2048\" */ value)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(pos, length)\n                                /// @src 0:1543:1547  \"2048\"\n                                copy_memory_to_memory_with_cleanup(add(value, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20), add(pos, 0x20), /** @src 0:1543:1547  \"2048\" */ length)\n                                end := add(add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ pos, and(add(/** @src 0:1543:1547  \"2048\" */ length, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 31), not(31))), 0x20)\n                            }\n                            function checked_add_uint256(x, y) -> sum\n                            {\n                                sum := add(x, y)\n                                if gt(x, sum)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                            }\n                            function update_storage_value_offsett_uint48_to_uint48(slot, value)\n                            {\n                                let _1 := sload(slot)\n                                sstore(slot, or(and(_1, not(shl(152, 0xffffffffffff))), and(shl(152, value), shl(152, 0xffffffffffff))))\n                            }\n                            function increment_uint256(value) -> ret\n                            {\n                                if eq(value, not(0))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                                ret := add(value, 1)\n                            }\n                            function checked_sub_uint256(x, y) -> diff\n                            {\n                                diff := sub(x, y)\n                                if gt(diff, x)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(0, 0x24)\n                                }\n                            }\n                            function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n                            {\n                                tail := add(headStart, 64)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                            }\n                            function extract_returndata() -> data\n                            {\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    let _2 := array_allocation_size_bytes(_1)\n                                    let memPtr := mload(64)\n                                    finalize_allocation(memPtr, _2)\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                }\n                            }\n                            /// @ast-id 968 @src 0:13258:13464  \"function getUserOpHash(...\"\n                            function fun_getUserOpHash(var_userOp_947_offset) -> var\n                            {\n                                /// @src 5:1998:2013  \"userOp.initCode\"\n                                let _1 := 64\n                                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, _1))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem, expr_offset, expr_length)\n                                let var_ret := keccak256(usr$mem, expr_length)\n                                /// @src 5:2062:2077  \"userOp.callData\"\n                                let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 96))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem_1 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem_1, expr_offset_1, expr_length_1)\n                                let var_ret_1 := keccak256(usr$mem_1, expr_length_1)\n                                /// @src 5:2300:2323  \"userOp.paymasterAndData\"\n                                let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 224))\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                let usr$mem_2 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                calldatacopy(usr$mem_2, expr_offset_2, expr_length_2)\n                                let var_ret_2 := keccak256(usr$mem_2, expr_length_2)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                let expr_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                let _2 := add(expr_mpos, /** @src 5:1938:1950  \"userOp.nonce\" */ 32)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_2, and(/** @src 5:823:884  \"assembly {...\" */ calldataload(/** @src 5:1895:1912  \"getSender(userOp)\" */ var_userOp_947_offset), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:1998:2013  \"userOp.initCode\" */ _1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:1938:1950  \"userOp.nonce\" */ add(var_userOp_947_offset, 32)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2062:2077  \"userOp.callData\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret)\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2115:2138  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret_1)\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2177:2202  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2115:2138  \"userOp.accountGasLimits\" */ add(var_userOp_947_offset, 128)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2230:2244  \"userOp.gasFees\" */ 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2177:2202  \"userOp.preVerificationGas\" */ add(var_userOp_947_offset, 160)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2300:2323  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2230:2244  \"userOp.gasFees\" */ add(var_userOp_947_offset, 192)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := 256\n                                mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), var_ret_2)\n                                /// @src 5:2342:2522  \"abi.encode(...\"\n                                mstore(expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                let newFreePtr := add(expr_mpos, 288)\n                                let _4 := 0xffffffffffffffff\n                                if or(gt(newFreePtr, _4), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr)\n                                /// @src 5:4955:4987  \"return keccak256(encode(userOp))\"\n                                let var_1 := /** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ expr_mpos))\n                                /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                let _5 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ expr_mpos, /** @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ 320)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(_5, var_1)\n                                mstore(add(expr_mpos, 352), /** @src 0:13435:13439  \"this\" */ address())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(expr_mpos, 384), /** @src 0:13442:13455  \"block.chainid\" */ chainid())\n                                /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                mstore(newFreePtr, /** @src 5:2062:2077  \"userOp.callData\" */ 96)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let newFreePtr_1 := add(expr_mpos, 416)\n                                if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, newFreePtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr_1)\n                                /// @src 0:13372:13457  \"return...\"\n                                var := /** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ newFreePtr))\n                            }\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(shl(5, length), 0x20)\n                            }\n                            function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n                            {\n                                let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                                let _2 := 64\n                                let memPtr_1 := mload(64)\n                                finalize_allocation(memPtr_1, _1)\n                                mstore(memPtr_1, length)\n                                memPtr := memPtr_1\n                                let _3 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                for { } lt(i, _3) { i := add(i, 32) }\n                                {\n                                    let memPtr_2 := mload(_2)\n                                    finalize_allocation_26259(memPtr_2)\n                                    let memPtr_3 := mload(_2)\n                                    finalize_allocation_26260(memPtr_3)\n                                    mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _4 := 32\n                                    mstore(add(memPtr_3, _4), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, _2), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _5 := 96\n                                    mstore(add(memPtr_3, _5), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _6 := 128\n                                    mstore(add(memPtr_3, _6), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 160), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 192), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 224), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 256), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_3, 288), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(memPtr_2, memPtr_3)\n                                    mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _5), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_2, _6), /** @src -1:-1:-1 */ 0)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                                }\n                            }\n                            function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n                            {\n                                if iszero(lt(index, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ baseRef)))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                addr := add(add(baseRef, shl(5, index)), 32)\n                            }\n                            function calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n                            {\n                                if iszero(lt(index, length))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(286))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                addr := add(base_ref, rel_offset_of_tail)\n                            }\n                            function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                            {\n                                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                                let value := mload(headStart)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                value0 := value\n                            }\n                            function abi_encode_bytes_calldata(start, length, pos) -> end\n                            {\n                                mstore(pos, length)\n                                calldatacopy(add(pos, 0x20), start, length)\n                                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                            }\n                            /// @ast-id 2547 @src 4:1935:2114  \"function depositTo(address account) public virtual payable {...\"\n                            function fun_depositTo(var_account)\n                            {\n                                /// @src 4:2025:2062  \"_incrementDeposit(account, msg.value)\"\n                                let expr := fun_incrementDeposit(var_account, /** @src 4:2052:2061  \"msg.value\" */ callvalue())\n                                /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_1, expr)\n                                /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                log2(_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ var_account, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                            }\n                            function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n                            {\n                                if iszero(lt(index, length))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x32)\n                                    revert(0, 0x24)\n                                }\n                                let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                addr := add(base_ref, rel_offset_of_tail)\n                            }\n                            function access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let addr_1 := add(base_ref, rel_offset_of_tail)\n                                length := calldataload(addr_1)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                addr := add(addr_1, 0x20)\n                                if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                            }\n                            function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n                            {\n                                let value := calldataload(ptr)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                returnValue := value\n                            }\n                            function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let addr_1 := add(base_ref, rel_offset_of_tail)\n                                length := calldataload(addr_1)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                addr := add(addr_1, 0x20)\n                                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                            }\n                            function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n                            {\n                                let rel_offset_of_tail := calldataload(ptr)\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                let value_1 := add(rel_offset_of_tail, base_ref)\n                                length := calldataload(value_1)\n                                value := add(value_1, 0x20)\n                                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n                            }\n                            function abi_encode_struct_PackedUserOperation_calldata(value, pos) -> end\n                            {\n                                let _1 := 0x0120\n                                let value_1 := calldataload(value)\n                                let _2 := and(value_1, sub(shl(160, 1), 1))\n                                if iszero(eq(value_1, _2))\n                                {\n                                    revert(/** @src -1:-1:-1 */ 0, 0)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(pos, _2)\n                                mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                                let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                                mstore(add(pos, 0x40), _1)\n                                let tail := abi_encode_bytes_calldata(memberValue0, memberValue1, add(pos, _1))\n                                let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                                mstore(add(pos, 0x60), sub(tail, pos))\n                                let tail_1 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail)\n                                mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                                mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                                mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                                let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, 0xe0))\n                                mstore(add(pos, 0xe0), sub(tail_1, pos))\n                                let tail_2 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_1)\n                                let _3 := 0x0100\n                                let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _3))\n                                mstore(add(pos, _3), sub(tail_2, pos))\n                                end := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_2)\n                            }\n                            /// @ast-id 49092 @src 73:2431:2738  \"function _nonReentrantBefore() private {...\"\n                            function fun_nonReentrantBefore()\n                            {\n                                /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                if /** @src 73:2558:2576  \"_status == ENTERED\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 73:2558:2565  \"_status\" */ 0x02), 0x02)\n                                /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                {\n                                    /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                    let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                    /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                    mstore(_1, shl(224, 0x3ee5aeb5))\n                                    revert(_1, 4)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(/** @src 73:2558:2565  \"_status\" */ 0x02, 0x02)\n                            }\n                            /// @ast-id 1795 @src 0:23805:25958  \"function _validatePrepayment(...\"\n                            function fun_validatePrepayment(var_opIndex, var_userOp_1628_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n                            {\n                                /// @src 0:24005:24036  \"uint256 paymasterValidationData\"\n                                var_paymasterValidationData := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:24069:24078  \"gasleft()\"\n                                let expr := gas()\n                                /// @src 0:24118:24135  \"outOpInfo.mUserOp\"\n                                let _431_mpos := mload(var_outOpInfo_mpos)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let value := calldataload(var_userOp_1628_offset)\n                                let _1 := and(value, sub(shl(160, 1), 1))\n                                if iszero(eq(value, _1)) { revert(0, 0) }\n                                mstore(_431_mpos, _1)\n                                mstore(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13851:13863  \"userOp.nonce\" */ add(var_userOp_1628_offset, 32)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := calldataload(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ add(var_userOp_1628_offset, 128))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := 0xffffffffffffffffffffffffffffffff\n                                mstore(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _2))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _4 := calldataload(/** @src 0:14139:14153  \"userOp.gasFees\" */ add(var_userOp_1628_offset, /** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ 192))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                mstore(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _4))\n                                /// @src 0:14198:14221  \"userOp.paymasterAndData\"\n                                let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, 224))\n                                /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                switch /** @src 0:14235:14262  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_length))\n                                case /** @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:14632:14649  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    mstore(/** @src 0:14676:14713  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    mstore(/** @src 0:14731:14762  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                }\n                                default /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                {\n                                    /// @src 5:490:492  \"52\"\n                                    if /** @src 0:14303:14368  \"paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET\" */ lt(expr_length, /** @src 5:490:492  \"52\" */ 0x34)\n                                    {\n                                        let memPtr := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 5:490:492  \"52\"\n                                        mstore(memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(229, 4594637))\n                                        /// @src 5:490:492  \"52\"\n                                        mstore(add(memPtr, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 5:490:492  \"52\" */ add(memPtr, 36), 29)\n                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 5:490:492  \"52\" */ memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 5:490:492  \"52\" */ \"AA93 invalid paymasterAndData\")\n                                        revert(memPtr, 100)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(0x14, expr_length)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 5:434:436  \"36\" */ 0x24, /** @src 5:372:374  \"20\" */ expr_length)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 5:490:492  \"52\" */ 0x34, /** @src 5:372:374  \"20\" */ expr_length)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    mstore(/** @src 0:14504:14535  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, /** @src 5:434:436  \"36\" */ 0x24))))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:14465:14502  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, 0x14))))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:14446:14463  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 5:4451:4511  \"bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])\" */ expr_offset)))\n                                }\n                                /// @src 0:24214:24235  \"getUserOpHash(userOp)\"\n                                let _5 := fun_getUserOpHash(var_userOp_1628_offset)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5)\n                                let _6 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                /// @src 0:24491:24552  \"mUserOp.preVerificationGas |...\"\n                                let expr_1 := or(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)), /** @src 0:24491:24552  \"mUserOp.preVerificationGas |...\" */ _6)\n                                /// @src 0:24491:24587  \"mUserOp.preVerificationGas |...\"\n                                let expr_2 := or(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                /// @src 0:24491:24639  \"mUserOp.preVerificationGas |...\"\n                                let expr_3 := or(expr_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                /// @src 0:24491:24685  \"mUserOp.preVerificationGas |...\"\n                                let expr_4 := or(expr_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                /// @src 0:24491:24720  \"mUserOp.preVerificationGas |...\"\n                                let expr_5 := or(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if /** @src 0:24781:24814  \"maxGasValues <= type(uint120).max\" */ gt(/** @src 0:24491:24763  \"mUserOp.preVerificationGas |...\" */ or(expr_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288))), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffffffffffffffffff)\n                                {\n                                    let memPtr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(memPtr_1, 36), 24)\n                                    mstore(add(memPtr_1, 68), \"AA94 gas values overflow\")\n                                    revert(memPtr_1, 100)\n                                }\n                                let _7 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum := add(_7, mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_1 := add(sum, mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_2 := add(sum_1, mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let sum_3 := add(sum_2, mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let product := mul(sum_3, mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                /// @src 0:24935:25098  \"_validateAccountPrepayment(...\"\n                                let var_validationData_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:17742:17756  \"opInfo.mUserOp\"\n                                let _mpos := mload(var_outOpInfo_mpos)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17787:17801  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 0:17854:17865  \"op.initCode\"\n                                let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                if /** @src 0:15810:15830  \"initCode.length != 0\" */ iszero(iszero(expr_length_1))\n                                /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                {\n                                    /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                    if /** @src 0:15902:15925  \"sender.code.length != 0\" */ iszero(iszero(/** @src 0:15902:15920  \"sender.code.length\" */ extcodesize(cleaned)))\n                                    /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                    {\n                                        /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        mstore(_8, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ add(_8, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 31)\n                                        mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA10 sender already constructed\")\n                                        /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                        revert(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    let _9 := mload(/** @src 0:16085:16120  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 0:16085:16099  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    let _10 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    mstore(_10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                    mstore(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ add(_10, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    let _11 := call(_9, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10), _10, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    if iszero(_11)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let pos := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        returndatacopy(pos, 0, returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    let expr_6 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                    if _11\n                                    {\n                                        let _12 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                        /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                        if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ returndatasize()) { _12 := returndatasize() }\n                                        finalize_allocation(_10, _12)\n                                        expr_6 := abi_decode_address_fromMemory(_10, add(_10, _12))\n                                    }\n                                    /// @src 0:16162:16183  \"sender1 == address(0)\"\n                                    let _13 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:16162:16183  \"sender1 == address(0)\" */ expr_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                    if /** @src 0:16162:16183  \"sender1 == address(0)\" */ iszero(_13)\n                                    /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                    {\n                                        /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        mstore(_14, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ add(_14, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 27)\n                                        mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA13 initCode failed or OOG\")\n                                        /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                        revert(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                    if /** @src 0:16274:16291  \"sender1 != sender\" */ iszero(eq(_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned))\n                                    /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                    {\n                                        /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        let _15 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        mstore(_15, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ add(_15, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA14 initCode must return sender\")\n                                        /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                        revert(_15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                    if /** @src 0:16387:16411  \"sender1.code.length == 0\" */ iszero(/** @src 0:16387:16406  \"sender1.code.length\" */ extcodesize(expr_6))\n                                    /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                    {\n                                        /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        let _16 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        mstore(_16, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ add(_16, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA15 initCode must create sender\")\n                                        /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                        revert(_16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    /// @src 5:372:374  \"20\"\n                                    if gt(/** @src 0:16548:16550  \"20\" */ 0x14, /** @src 5:372:374  \"20\" */ expr_length_1)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        revert(0, 0)\n                                    }\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _17 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:16689:16713  \"opInfo.mUserOp.paymaster\" */ add(/** @src 0:16689:16703  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                    let _18 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(_18, /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 0:16529:16552  \"bytes20(initCode[0:20])\" */ expr_offset_1)))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(_18, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                    /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                    log3(_18, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:16572:16727  \"AccountDeployed(...\" */ 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _17, cleaned)\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17900:17917  \"mUserOp.paymaster\" */ add(_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 0:17931:17962  \"uint256 missingAccountFunds = 0\"\n                                let var_missingAccountFunds := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(0, cleaned)\n                                    mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let _19 := sload(keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                    /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                    let expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                    switch /** @src 0:18094:18115  \"bal > requiredPrefund\" */ gt(_19, product)\n                                    case /** @src 0:18094:18183  \"bal > requiredPrefund...\" */ 0 {\n                                        expr_7 := /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18162:18183  \"requiredPrefund - bal\" */ product, _19)\n                                    }\n                                    default /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                    {\n                                        expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    }\n                                    /// @src 0:18072:18183  \"missingAccountFunds = bal > requiredPrefund...\"\n                                    var_missingAccountFunds := expr_7\n                                }\n                                /// @src 0:1543:1547  \"2048\"\n                                let _20 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                let _21 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                mstore(_21, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x06608bdf))\n                                /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                let trySuccessCondition := call(_6, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ _21, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_21, 4), var_userOp_1628_offset, _20, var_missingAccountFunds), _21), _21, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                let expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                if trySuccessCondition\n                                {\n                                    let _22 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                    /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                    if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _22 := returndatasize() }\n                                    finalize_allocation(_21, _22)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    if slt(sub(/** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ add(_21, _22), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    { revert(0, 0) }\n                                    /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                    expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(_21)\n                                }\n                                /// @src 0:18211:18617  \"try...\"\n                                switch iszero(trySuccessCondition)\n                                case 0 {\n                                    /// @src 0:18436:18468  \"validationData = _validationData\"\n                                    var_validationData_1 := expr_8\n                                }\n                                default /// @src 0:18211:18617  \"try...\"\n                                {\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$len := returndatasize()\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _23 := 0x0800\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _23)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    {\n                                        usr$len := /** @src 0:1543:1547  \"2048\" */ _23\n                                    }\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    let usr$ptr := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                    mstore(usr$ptr, usr$len)\n                                    returndatacopy(add(usr$ptr, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                    /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    let _24 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    mstore(_24, shl(224, 0x65c8fd4d))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_24, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                    mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA23 reverted\")\n                                    mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                    /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                    revert(_24, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr, add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24))\n                                }\n                                /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(0, cleaned)\n                                    mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let dataSlot := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _25 := sload(/** @src 0:18762:18780  \"senderInfo.deposit\" */ dataSlot)\n                                    /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                    if /** @src 0:18802:18827  \"requiredPrefund > deposit\" */ gt(product, _25)\n                                    /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                    {\n                                        /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        let _26 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        mstore(_26, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ add(_26, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                        mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA21 didn't pay prefund\")\n                                        /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                        revert(_26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    sstore(dataSlot, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18959:18984  \"deposit - requiredPrefund\" */ _25, product))\n                                }\n                                /// @src 0:24918:25098  \"validationData = _validateAccountPrepayment(...\"\n                                var_validationData := var_validationData_1\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25138:25152  \"mUserOp.sender\" */ _431_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _27 := mload(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(0, cleaned_3)\n                                mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                let _28 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(0, shr(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _27))\n                                mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _28)\n                                let dataSlot_1 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _29 := sload(/** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ dataSlot_1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(dataSlot_1, /** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_29))\n                                /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                if /** @src 0:25113:25168  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ iszero(/** @src 2:1373:1414  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_29, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 2:1343:1356  \"uint64(nonce)\" */ _27, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffff)))\n                                /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                {\n                                    /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    let _30 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    mstore(_30, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ add(_30, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 26)\n                                    mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA25 invalid account nonce\")\n                                    /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                    revert(_30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                }\n                                /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                if /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25296:25305  \"gasleft()\" */ gas()), /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ _6)\n                                /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                {\n                                    /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    let _31 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    mstore(_31, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ add(_31, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                    mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                    mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA26 over verificationGasLimit\")\n                                    /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                    revert(_31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                }\n                                /// @src 0:25441:25461  \"bytes memory context\"\n                                let var_context_1745_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:25441:25461  \"bytes memory context\"\n                                var_context_1745_mpos := /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96\n                                /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                if /** @src 0:25475:25506  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25475:25492  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))))\n                                /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                {\n                                    /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                    let var_context_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                    let var_validationData_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:19872:19881  \"gasleft()\"\n                                    let expr_9 := gas()\n                                    /// @src 0:19925:19939  \"opInfo.mUserOp\"\n                                    let _mpos_1 := mload(var_outOpInfo_mpos)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:19973:19990  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                    mstore(0, cleaned_4)\n                                    mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    let dataSlot_2 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _32 := sload(/** @src 0:20091:20112  \"paymasterInfo.deposit\" */ dataSlot_2)\n                                    /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                    if /** @src 0:20130:20155  \"deposit < requiredPreFund\" */ lt(_32, product)\n                                    /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                    {\n                                        /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        let _33 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        mstore(_33, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ add(_33, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                        mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA31 paymaster deposit too low\")\n                                        /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                        revert(_33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                    }\n                                    sstore(dataSlot_2, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:20285:20310  \"deposit - requiredPreFund\" */ _32, product))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _34 := mload(/** @src 0:20357:20394  \"mUserOp.paymasterVerificationGasLimit\" */ add(_mpos_1, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128))\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _35 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                    /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let _36 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                    /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    mstore(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x14add44b))\n                                    /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let trySuccessCondition_1 := call(_34, cleaned_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _36, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_36, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ var_userOp_1628_offset, _35, product), _36), _36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                    /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    let expr_component_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    let expr_component := 0\n                                    /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                    if trySuccessCondition_1\n                                    {\n                                        let _37 := returndatasize()\n                                        returndatacopy(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _37)\n                                        finalize_allocation(_36, _37)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if slt(sub(/** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        let offset := mload(_36)\n                                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                        if iszero(slt(add(add(_36, offset), 0x1f), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        let _38 := mload(add(_36, offset))\n                                        let _39 := array_allocation_size_bytes(_38)\n                                        let memPtr_2 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        finalize_allocation(memPtr_2, _39)\n                                        mstore(memPtr_2, _38)\n                                        if gt(add(add(add(_36, offset), _38), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        { revert(0, 0) }\n                                        copy_memory_to_memory_with_cleanup(add(add(_36, offset), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr_2, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _38)\n                                        let value_1 := mload(add(_36, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                        expr_component_mpos := memPtr_2\n                                        expr_component := value_1\n                                    }\n                                    /// @src 0:20408:20925  \"try...\"\n                                    switch iszero(trySuccessCondition_1)\n                                    case 0 {\n                                        /// @src 0:20708:20726  \"context = _context\"\n                                        var_context_mpos := expr_component_mpos\n                                        /// @src 0:20744:20776  \"validationData = _validationData\"\n                                        var_validationData_2 := expr_component\n                                    }\n                                    default /// @src 0:20408:20925  \"try...\"\n                                    {\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$len_1 := returndatasize()\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _40 := 0x0800\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _40)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        {\n                                            usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _40\n                                        }\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$ptr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(usr$ptr_1, usr$len_1)\n                                        returndatacopy(add(usr$ptr_1, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                        /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        let _41 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        mstore(_41, /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ shl(224, 0x65c8fd4d))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_41, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                        mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA33 reverted\")\n                                        mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                        /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                        revert(_41, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41))\n                                    }\n                                    /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                    if /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr_9, /** @src 0:20951:20960  \"gasleft()\" */ gas()), /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ _34)\n                                    /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                    {\n                                        /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        let _42 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        mstore(_42, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ add(_42, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 39)\n                                        mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA36 over paymasterVerificationG\")\n                                        mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"asLimit\")\n                                        /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                        revert(_42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                    }\n                                    /// @src 0:25522:25710  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                                    var_paymasterValidationData := var_validationData_2\n                                    var_context_1745_mpos := var_context_mpos\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 0:25754:25771  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ product)\n                                mstore(/** @src 0:25803:25826  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_context_1745_mpos)\n                                mstore(/** @src 0:25874:25892  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25904:25913  \"gasleft()\" */ gas()), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160))))\n                            }\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_encode_struct_UserOpInfo(value, pos)\n                            {\n                                let _1 := mload(value)\n                                let _2 := sub(shl(160, 1), 1)\n                                mstore(pos, and(mload(_1), _2))\n                                mstore(add(pos, 0x20), mload(add(_1, 0x20)))\n                                mstore(add(pos, 0x40), mload(add(_1, 0x40)))\n                                mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                                mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n                                mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n                                mstore(add(pos, 0xc0), mload(add(_1, 0xc0)))\n                                mstore(add(pos, 0xe0), and(mload(add(_1, 0xe0)), _2))\n                                let _3 := 0x0100\n                                mstore(add(pos, _3), mload(add(_1, _3)))\n                                let _4 := 0x0120\n                                mstore(add(pos, _4), mload(add(_1, _4)))\n                                mstore(add(pos, 0x0140), mload(add(value, 0x20)))\n                                mstore(add(pos, 0x0160), mload(add(value, 0x40)))\n                                mstore(add(pos, 0x0180), mload(add(value, 0x60)))\n                                mstore(add(pos, 0x01a0), mload(add(value, 0x80)))\n                            }\n                            /// @ast-id 328 @src 0:3032:6109  \"function _executeUserOp(...\"\n                            function fun_executeUserOp(var_opIndex, var_userOp_offset, var_opInfo_155_mpos) -> var_collected\n                            {\n                                /// @src 0:3242:3251  \"gasleft()\"\n                                let expr := gas()\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := mload(/** @src 0:3309:3329  \"opInfo.contextOffset\" */ add(var_opInfo_155_mpos, 96))\n                                /// @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\"\n                                let _2 := 0x40\n                                let var_saveFreePtr := mload(_2)\n                                /// @src 0:3531:3546  \"userOp.callData\"\n                                let expr_offset, expr_182_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                /// @src 0:3560:3582  \"bytes memory innerCall\"\n                                let var_innerCall_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                let var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                /// @src 0:3626:3806  \"assembly {...\"\n                                if gt(expr_182_length, 3)\n                                {\n                                    var_methodSig := calldataload(expr_offset)\n                                }\n                                /// @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\"\n                                let _3 := shl(224, 0x8dd7712f)\n                                /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                switch /** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ var_methodSig, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0xffffffff)), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                case /** @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\" */ 0 {\n                                    /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    mstore(add(var_saveFreePtr, 0x20), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                    mstore(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ add(var_saveFreePtr, 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                    let tail := abi_encode_bytes_calldata(expr_offset, expr_182_length, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                    abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                    mstore(add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail, /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                    /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    let _4 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail), /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr)\n                                    mstore(var_saveFreePtr, add(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)))\n                                    /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    finalize_allocation(var_saveFreePtr, _4)\n                                    /// @src 0:4146:4221  \"innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                    var_innerCall_mpos := var_saveFreePtr\n                                }\n                                default /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                {\n                                    /// @src 0:1543:1547  \"2048\"\n                                    let _5 := mload(/** @src 0:3978:3995  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, 32))\n                                    /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    let expr_206_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    mstore(add(expr_206_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    mstore(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ add(expr_206_mpos, 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let tail_1 := abi_encode_struct_PackedUserOperation_calldata(var_userOp_offset, add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                    mstore(add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), _5)\n                                    /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    let _6 := sub(tail_1, expr_206_mpos)\n                                    let _7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)\n                                    /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                    mstore(expr_206_mpos, add(_6, _7))\n                                    finalize_allocation(expr_206_mpos, _6)\n                                    /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    let expr_217_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                    /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    mstore(add(expr_217_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                    mstore(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ add(expr_217_mpos, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                    let tail_2 := abi_encode_bytes(expr_206_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                    abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                    mstore(add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail_2, /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                    /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    let _8 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail_2), /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos)\n                                    mstore(expr_217_mpos, add(_8, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ _7))\n                                    /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    finalize_allocation(expr_217_mpos, _8)\n                                    /// @src 0:4015:4095  \"innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                    var_innerCall_mpos := expr_217_mpos\n                                }\n                                /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                let _9 := 32\n                                let var_success := call(gas(), address(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_innerCall_mpos, _9), mload(var_innerCall_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                var_collected := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ var_saveFreePtr)\n                                /// @src 0:4488:6103  \"if (!success) {...\"\n                                if /** @src 0:4492:4500  \"!success\" */ iszero(var_success)\n                                /// @src 0:4488:6103  \"if (!success) {...\"\n                                {\n                                    /// @src 0:4516:4539  \"bytes32 innerRevertCode\"\n                                    let var_innerRevertCode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                    /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                    if eq(/** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9, /** @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                                    {\n                                        returndatacopy(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode, var_innerRevertCode, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                        /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                        var_innerRevertCode := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode)\n                                    }\n                                    /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                    switch /** @src 0:4797:4832  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(var_innerRevertCode, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                    case /** @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\" */ 0 {\n                                        /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                        switch /** @src 0:5093:5136  \"innerRevertCode == INNER_REVERT_LOW_PREFUND\" */ eq(var_innerRevertCode, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                        case /** @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\" */ 0 {\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _10 := mload(/** @src 0:5612:5629  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 0:5651:5665  \"opInfo.mUserOp\"\n                                            let _565_mpos := mload(var_opInfo_155_mpos)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _11 := sub(shl(160, 1), 1)\n                                            let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:5651:5672  \"opInfo.mUserOp.sender\" */ _565_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            let _12 := mload(/** @src 0:5694:5714  \"opInfo.mUserOp.nonce\" */ add(_565_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$len := returndatasize()\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _13 := 0x0800\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _13)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            {\n                                                usr$len := /** @src 0:1543:1547  \"2048\" */ _13\n                                            }\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$ptr := mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(usr$ptr, usr$len)\n                                            returndatacopy(add(usr$ptr, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                            /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                            let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(_14, _12)\n                                            /// @src 0:1543:1547  \"2048\"\n                                            mstore(add(_14, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                            log3(_14, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_14, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)), /** @src 0:5572:5795  \"PostOpRevertReason(...\" */ _14), 0xf62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792, _10, cleaned)\n                                            /// @src 0:5834:5852  \"preGas - gasleft()\"\n                                            let expr_1 := checked_sub_uint256(expr, /** @src 0:5843:5852  \"gasleft()\" */ gas())\n                                            /// @src 0:5855:5870  \"opInfo.preOpGas\"\n                                            let _15 := add(var_opInfo_155_mpos, 128)\n                                            /// @src 0:5900:6078  \"_postExecution(...\"\n                                            let var_actualGas := /** @src 0:5834:5870  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5855:5870  \"opInfo.preOpGas\" */ _15))\n                                            /// @src 0:5900:6078  \"_postExecution(...\"\n                                            let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:26799:26808  \"gasleft()\"\n                                            let expr_2 := gas()\n                                            /// @src 0:26842:26863  \"address refundAddress\"\n                                            let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                            /// @src 0:26842:26863  \"address refundAddress\"\n                                            let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                            /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                            let _mpos := mload(var_opInfo_155_mpos)\n                                            /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                            let expr_3 := fun_getUserOpGasPrice(_mpos)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                            switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                            case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                                var_refundAddress := cleaned_1\n                                                /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _1)))\n                                                /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    var_refundAddress_1 := var_actualGasCost\n                                                }\n                                            }\n                                            default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                            {\n                                                /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                                var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                            }\n                                            /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                            var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _16 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let sum := add(_16, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, 160)))\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let diff := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:28163:28178  \"opInfo.preOpGas\" */ _15))\n                                            /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                            if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff)\n                                            /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                            {\n                                                /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                                var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:28513:28516  \"100\" */ 0x64))\n                                            }\n                                            /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                            var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _17 := mload(/** @src 0:28682:28696  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                            /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                            switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_17, var_actualGasCost)\n                                            case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                                pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _17, var_actualGasCost)))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if var_refundAddress_1\n                                                {\n                                                    mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                }\n                                                /// @src 0:29478:29487  \"actualGas\"\n                                                fun_emitUserOperationEvent(var_opInfo_155_mpos, var_actualGasCost, var_actualGas)\n                                            }\n                                            default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if var_refundAddress_1\n                                                {\n                                                    mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                    mstore(4, 0x21)\n                                                    revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                }\n                                                /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                var_actualGasCost := _17\n                                                /// @src 0:28892:28898  \"opInfo\"\n                                                fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                /// @src 0:28974:28983  \"actualGas\"\n                                                fun_emitUserOperationEvent(var_opInfo_155_mpos, _17, var_actualGas)\n                                            }\n                                            /// @src 0:5888:6078  \"collected = _postExecution(...\"\n                                            var_collected := var_actualGasCost\n                                        }\n                                        default /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                        {\n                                            /// @src 0:5269:5287  \"preGas - gasleft()\"\n                                            let expr_4 := checked_sub_uint256(expr, /** @src 0:5278:5287  \"gasleft()\" */ gas())\n                                            /// @src 0:5269:5305  \"preGas - gasleft() + opInfo.preOpGas\"\n                                            let expr_5 := checked_add_uint256(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5290:5305  \"opInfo.preOpGas\" */ add(var_opInfo_155_mpos, 128)))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _18 := mload(/** @src 0:5347:5361  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                            /// @src 0:5397:5403  \"opInfo\"\n                                            fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                            /// @src 0:5475:5484  \"actualGas\"\n                                            fun_emitUserOperationEvent(var_opInfo_155_mpos, _18, expr_5)\n                                            /// @src 0:5503:5528  \"collected = actualGasCost\"\n                                            var_collected := _18\n                                        }\n                                    }\n                                    default /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                    {\n                                        /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                        /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        mstore(_19, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ add(_19, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                        /// @src 0:1474:1487  \"hex\\\"deadaa51\\\"\"\n                                        mstore(add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 68), 15)\n                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ \"AA95 out of gas\")\n                                        /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                        revert(_19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 132)\n                                    }\n                                }\n                            }\n                            /// @ast-id 146 @src 0:2446:2725  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n                            function fun_compensate(var_beneficiary, var_amount)\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := and(/** @src 0:2539:2564  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                if /** @src 0:2539:2564  \"beneficiary != address(0)\" */ iszero(_1)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                {\n                                    let memPtr := mload(64)\n                                    mstore(memPtr, shl(229, 4594637))\n                                    mstore(add(memPtr, 4), 32)\n                                    mstore(add(memPtr, 36), 24)\n                                    mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                                    revert(memPtr, 100)\n                                }\n                                /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                let expr_138_component := call(gas(), _1, var_amount, /** @src 0:2562:2563  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                                /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                pop(extract_returndata())\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                if iszero(expr_138_component)\n                                {\n                                    let memPtr_1 := mload(64)\n                                    mstore(memPtr_1, shl(229, 4594637))\n                                    mstore(add(memPtr_1, 4), 32)\n                                    mstore(add(memPtr_1, 36), 31)\n                                    mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                                    revert(memPtr_1, 100)\n                                }\n                            }\n                            /// @ast-id 2527 @src 4:1559:1818  \"function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {...\"\n                            function fun_incrementDeposit(var_account, var_amount) -> var\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                                mstore(0x20, /** @src 4:1683:1691  \"deposits\" */ 0x00)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let dataSlot := keccak256(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x40)\n                                /// @src 4:1730:1751  \"info.deposit + amount\"\n                                let expr := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 4:1730:1742  \"info.deposit\" */ dataSlot), /** @src 4:1730:1751  \"info.deposit + amount\" */ var_amount)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                sstore(dataSlot, expr)\n                                /// @src 4:1795:1811  \"return newAmount\"\n                                var := expr\n                            }\n                            /// @ast-id 2053 @src 0:29763:30294  \"function getUserOpGasPrice(...\"\n                            function fun_getUserOpGasPrice(var_mUserOp_mpos) -> var_\n                            {\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := mload(/** @src 0:29922:29942  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, 256))\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := mload(/** @src 0:29987:30015  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, 288))\n                                /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                if /** @src 0:30033:30069  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                                /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                {\n                                    /// @src 0:30168:30187  \"return maxFeePerGas\"\n                                    var_ := _1\n                                    leave\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _3 := add(/** @src 0:30240:30276  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 0:30263:30276  \"block.basefee\" */ basefee())\n                                /// @src 1:3338:3351  \"a < b ? a : b\"\n                                let expr := /** @src -1:-1:-1 */ 0\n                                /// @src 1:3338:3351  \"a < b ? a : b\"\n                                switch /** @src 1:3338:3343  \"a < b\" */ lt(_1, _3)\n                                case /** @src 1:3338:3351  \"a < b ? a : b\" */ 0 { expr := _3 }\n                                default { expr := _1 }\n                                /// @src 0:30215:30277  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                                var_ := expr\n                            }\n                            /// @ast-id 358 @src 0:6115:6505  \"function emitUserOperationEvent(UserOpInfo memory opInfo, bool success, uint256 actualGasCost, uint256 actualGas) internal virtual {...\"\n                            function fun_emitUserOperationEvent(var_opInfo_mpos, var_actualGasCost, var_actualGas)\n                            {\n                                /// @src 0:1543:1547  \"2048\"\n                                let _1 := mload(/** @src 0:6293:6310  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                let _mpos := mload(var_opInfo_mpos)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _2 := sub(shl(160, 1), 1)\n                                let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                let _3 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32))\n                                /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                let _4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_4, _3)\n                                mstore(add(_4, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32), /** @src -1:-1:-1 */ 0)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(_4, 64), var_actualGasCost)\n                                mstore(add(_4, 96), var_actualGas)\n                                /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                log4(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _1, cleaned, cleaned_1)\n                            }\n                            /// @ast-id 376 @src 0:6511:6739  \"function emitPrefundTooLow(UserOpInfo memory opInfo) internal virtual {...\"\n                            function fun_emitPrefundTooLow(var_opInfo_mpos)\n                            {\n                                /// @src 0:1543:1547  \"2048\"\n                                let _1 := mload(/** @src 0:6636:6653  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                /// @src 0:6667:6681  \"opInfo.mUserOp\"\n                                let _665_mpos := mload(var_opInfo_mpos)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6667:6688  \"opInfo.mUserOp.sender\" */ _665_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _2 := mload(/** @src 0:6702:6722  \"opInfo.mUserOp.nonce\" */ add(_665_mpos, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32))\n                                /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                let _3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                mstore(_3, _2)\n                                /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                log3(_3, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32, /** @src 0:6596:6732  \"UserOperationPrefundTooLow(...\" */ 0x67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e, _1, cleaned)\n                            }\n                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                            function abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                mstore(headStart, 96)\n                                tail := abi_encode_struct_PackedUserOperation_calldata(value0, add(headStart, 96))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                            /// @ast-id 1622 @src 0:22951:23437  \"function _getValidationData(...\"\n                            function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n                            {\n                                /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                if /** @src 0:23095:23114  \"validationData == 0\" */ iszero(var_validationData)\n                                /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                {\n                                    /// @src 0:23130:23156  \"return (address(0), false)\"\n                                    var_aggregator := /** @src 0:23113:23114  \"0\" */ 0x00\n                                    /// @src 0:23130:23156  \"return (address(0), false)\"\n                                    var_outOfTimeRange := /** @src 0:23113:23114  \"0\" */ 0x00\n                                    /// @src 0:23130:23156  \"return (address(0), false)\"\n                                    leave\n                                }\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let memPtr := mload(64)\n                                finalize_allocation_26350(memPtr)\n                                mstore(memPtr, /** @src 0:23113:23114  \"0\" */ 0x00)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(memPtr, 32), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                mstore(add(memPtr, 64), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                let _1 := and(/** @src 1:1507:1530  \"uint160(validationData)\" */ var_validationData, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                let _2 := 0xffffffffffff\n                                /// @src 1:1537:1586  \"uint48 validUntil = uint48(validationData >> 160)\"\n                                let var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(/** @src 1:1582:1585  \"160\" */ 0xa0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData), _2)\n                                /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                if /** @src 1:1596:1611  \"validUntil == 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validUntil)\n                                /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                {\n                                    /// @src 1:1623:1652  \"validUntil = type(uint48).max\"\n                                    var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2\n                                }\n                                let result := shr(/** @src 1:1710:1718  \"48 + 160\" */ 0xd0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData)\n                                let memPtr_1 := mload(64)\n                                finalize_allocation_26350(memPtr_1)\n                                mstore(memPtr_1, _1)\n                                mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32), result)\n                                let _3 := and(var_validUntil, _2)\n                                mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64), _3)\n                                /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                let expr := /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ gt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ _3)\n                                /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ lt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ result)\n                                }\n                                /// @src 0:23305:23392  \"outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                var_outOfTimeRange := expr\n                                /// @src 0:23402:23430  \"aggregator = data.aggregator\"\n                                var_aggregator := _1\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                    /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                    object \"SenderCreator_2414\" {\n                        code {\n                            {\n                                /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                let _1 := memoryguard(0x80)\n                                mstore(64, _1)\n                                if callvalue() { revert(0, 0) }\n                                let _2 := datasize(\"SenderCreator_2414_deployed\")\n                                codecopy(_1, dataoffset(\"SenderCreator_2414_deployed\"), _2)\n                                return(_1, _2)\n                            }\n                        }\n                        /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                        object \"SenderCreator_2414_deployed\" {\n                            code {\n                                {\n                                    /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                    let _1 := memoryguard(0x80)\n                                    if iszero(lt(calldatasize(), 4))\n                                    {\n                                        let _2 := 0\n                                        if eq(0x570e1a36, shr(224, calldataload(_2)))\n                                        {\n                                            if callvalue() { revert(_2, _2) }\n                                            if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                            let offset := calldataload(4)\n                                            let _3 := 0xffffffffffffffff\n                                            if gt(offset, _3) { revert(_2, _2) }\n                                            if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                                            let length := calldataload(add(4, offset))\n                                            if gt(length, _3) { revert(_2, _2) }\n                                            if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                                            let var_sender := _2\n                                            if gt(/** @src 3:726:728  \"20\" */ 0x14, /** @src 3:205:1231  \"contract SenderCreator {...\" */ length) { revert(_2, _2) }\n                                            let lengthOut := add(length, not(19))\n                                            if gt(lengthOut, _3)\n                                            {\n                                                mstore(_2, shl(224, 0x4e487b71))\n                                                mstore(4, 0x41)\n                                                revert(_2, 36)\n                                            }\n                                            let _4 := not(31)\n                                            let newFreePtr := add(_1, and(add(and(add(length, 11), _4), 63), _4))\n                                            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                            {\n                                                mstore(_2, shl(224, 0x4e487b71))\n                                                mstore(4, 0x41)\n                                                revert(_2, 36)\n                                            }\n                                            mstore(64, newFreePtr)\n                                            mstore(_1, lengthOut)\n                                            let dst := add(_1, 32)\n                                            calldatacopy(dst, add(offset, 56), lengthOut)\n                                            mstore(add(add(_1, length), 12), _2)\n                                            /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let var_success := call(gas(), /** @src 3:205:1231  \"contract SenderCreator {...\" */ shr(96, calldataload(add(offset, 36))), _2, /** @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\" */ dst, mload(_1), /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2, 32)\n                                            /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                            var_sender := mload(/** @src 3:205:1231  \"contract SenderCreator {...\" */ _2)\n                                            /// @src 3:1165:1223  \"if (!success) {...\"\n                                            if /** @src 3:1169:1177  \"!success\" */ iszero(var_success)\n                                            /// @src 3:1165:1223  \"if (!success) {...\"\n                                            {\n                                                /// @src 3:1193:1212  \"sender = address(0)\"\n                                                var_sender := /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2\n                                            }\n                                            let memPos := mload(64)\n                                            mstore(memPos, and(var_sender, sub(shl(160, 1), 1)))\n                                            return(memPos, 32)\n                                        }\n                                    }\n                                    revert(0, 0)\n                                }\n                            }\n                            data \".metadata\" hex\"a164736f6c6343000818000a\"\n                        }\n                    }\n                }\n                /// @use-src 64:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 67:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 68:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                object \"ERC20Mock_47815\" {\n                    code {\n                        {\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let _1 := memoryguard(0x80)\n                            if callvalue() { revert(0, 0) }\n                            let _2 := 64\n                            let newFreePtr := add(_1, _2)\n                            let _3 := sub(shl(64, 1), 1)\n                            if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            mstore(_2, newFreePtr)\n                            mstore(_1, 9)\n                            let _4 := 32\n                            mstore(add(_1, _4), \"ERC20Mock\")\n                            let memPtr := mload(_2)\n                            let newFreePtr_1 := add(memPtr, _2)\n                            if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            mstore(_2, newFreePtr_1)\n                            let _5 := 4\n                            mstore(memPtr, _5)\n                            mstore(add(memPtr, _4), \"E20M\")\n                            let newLen := mload(_1)\n                            if gt(newLen, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(_5, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            /// @src 66:1962:1975  \"_name = name_\"\n                            let _6 := 0x03\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let _7 := sload(/** @src 66:1962:1975  \"_name = name_\" */ _6)\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let length := /** @src -1:-1:-1 */ 0\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let _8 := 1\n                            length := shr(_8, _7)\n                            let outOfPlaceEncoding := and(_7, _8)\n                            if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                            if eq(outOfPlaceEncoding, lt(length, _4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(_5, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            let _9 := 31\n                            if gt(length, _9)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                let deleteStart := add(data, shr(5, add(newLen, _9)))\n                                if lt(newLen, _4) { deleteStart := data }\n                                let _10 := add(data, shr(5, add(length, _9)))\n                                let start := deleteStart\n                                for { } lt(start, _10) { start := add(start, _8) }\n                                {\n                                    sstore(start, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let srcOffset := /** @src -1:-1:-1 */ 0\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            srcOffset := _4\n                            switch gt(newLen, _9)\n                            case 1 {\n                                let loopEnd := and(newLen, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                for { } lt(i, loopEnd) { i := add(i, _4) }\n                                {\n                                    sstore(dstPtr, mload(add(_1, srcOffset)))\n                                    dstPtr := add(dstPtr, _8)\n                                    srcOffset := add(srcOffset, _4)\n                                }\n                                if lt(loopEnd, newLen)\n                                {\n                                    let lastValue := mload(add(_1, srcOffset))\n                                    sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), 248), not(0)))))\n                                }\n                                sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ add(shl(_8, newLen), _8))\n                            }\n                            default {\n                                let value := /** @src -1:-1:-1 */ 0\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                if newLen\n                                {\n                                    value := mload(add(_1, srcOffset))\n                                }\n                                sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), not(0)))), shl(_8, newLen)))\n                            }\n                            let newLen_1 := mload(memPtr)\n                            if gt(newLen_1, _3)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(_5, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            let _11 := sload(_5)\n                            let length_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            length_1 := shr(_8, _11)\n                            let outOfPlaceEncoding_1 := and(_11, _8)\n                            if iszero(outOfPlaceEncoding_1)\n                            {\n                                length_1 := and(length_1, 0x7f)\n                            }\n                            if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                mstore(_5, 0x22)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                            }\n                            if gt(length_1, _9)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _9)))\n                                if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                                let _12 := add(data_1, shr(5, add(length_1, _9)))\n                                let start_1 := deleteStart_1\n                                for { } lt(start_1, _12) { start_1 := add(start_1, _8) }\n                                {\n                                    sstore(start_1, /** @src -1:-1:-1 */ 0)\n                                }\n                            }\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            srcOffset_1 := _4\n                            switch gt(newLen_1, _9)\n                            case 1 {\n                                let loopEnd_1 := and(newLen_1, not(31))\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                let i_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                                {\n                                    sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                                    dstPtr_1 := add(dstPtr_1, _8)\n                                    srcOffset_1 := add(srcOffset_1, _4)\n                                }\n                                if lt(loopEnd_1, newLen_1)\n                                {\n                                    let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                                    sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                                }\n                                sstore(_5, add(shl(_8, newLen_1), _8))\n                            }\n                            default {\n                                let value_1 := /** @src -1:-1:-1 */ 0\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                if newLen_1\n                                {\n                                    value_1 := mload(add(memPtr, srcOffset_1))\n                                }\n                                sstore(_5, or(and(value_1, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), not(0)))), shl(_8, newLen_1)))\n                            }\n                            let _13 := mload(_2)\n                            let _14 := datasize(\"ERC20Mock_47815_deployed\")\n                            codecopy(_13, dataoffset(\"ERC20Mock_47815_deployed\"), _14)\n                            return(_13, _14)\n                        }\n                    }\n                    /// @use-src 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                    object \"ERC20Mock_47815_deployed\" {\n                        code {\n                            {\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    let _4 := 0\n                                    switch shr(224, calldataload(_4))\n                                    case 0x06fdde03 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let ret := _4\n                                        let slotValue := sload(/** @src 66:2151:2156  \"_name\" */ 0x03)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let length := _4\n                                        let _5 := 1\n                                        length := shr(1, slotValue)\n                                        let outOfPlaceEncoding := and(slotValue, 1)\n                                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                        let _6 := 32\n                                        if eq(outOfPlaceEncoding, lt(length, _6))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_1, length)\n                                        switch outOfPlaceEncoding\n                                        case 0 {\n                                            mstore(add(_1, _6), and(slotValue, not(255)))\n                                            ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                        }\n                                        case 1 {\n                                            mstore(_4, /** @src 66:2151:2156  \"_name\" */ 0x03)\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                            let i := _4\n                                            for { } lt(i, length) { i := add(i, _6) }\n                                            {\n                                                mstore(add(add(_1, i), _6), sload(dataPos))\n                                                dataPos := add(dataPos, _5)\n                                            }\n                                            ret := add(add(_1, i), _6)\n                                        }\n                                        let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr)\n                                        return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                                    }\n                                    case 0x095ea7b3 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0 := abi_decode_address_3706()\n                                        let _7 := calldataload(36)\n                                        /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                        if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                        /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                        {\n                                            /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                            /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            mstore(_8, shl(224, 0xe602df05))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                            /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                            revert(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        let _9 := and(/** @src 66:10159:10180  \"spender == address(0)\" */ value0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                        if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _9)\n                                        /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                        {\n                                            /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            let _10 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                            /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            mstore(_10, shl(225, 0x4a1406b1))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                            /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                            revert(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(0x20, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _11 := keccak256(_4, _2)\n                                        mstore(_4, _9)\n                                        mstore(0x20, _11)\n                                        sstore(keccak256(_4, _2), _7)\n                                        /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                        let _12 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        mstore(_12, _7)\n                                        /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                        log3(_12, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let memPos := mload(_2)\n                                        mstore(memPos, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        return(memPos, 0x20)\n                                    }\n                                    case 0x18160ddd {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let _13 := sload(/** @src 66:3222:3234  \"_totalSupply\" */ 0x02)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, _13)\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x23b872dd {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                        let value0_1 := abi_decode_address_3706()\n                                        let value1 := abi_decode_address()\n                                        let value := calldataload(68)\n                                        let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                        mstore(_4, _14)\n                                        mstore(32, 1)\n                                        let _15 := keccak256(_4, _2)\n                                        mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(32, _15)\n                                        let _16 := sload(keccak256(_4, _2))\n                                        /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                        if /** @src 66:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 66:10848:10865  \"type(uint256).max\" */ not(0)))\n                                        /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                        {\n                                            /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                            if /** @src 66:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                            /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                            {\n                                                /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                let _17 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                mstore(_17, shl(225, 0x7dc7a0d9))\n                                                revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                            }\n                                            /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                            if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _14)\n                                            /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                            {\n                                                /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                let _18 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                mstore(_18, shl(224, 0xe602df05))\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                revert(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                            }\n                                            /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                            if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                            /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                            {\n                                                /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                let _19 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                mstore(_19, shl(225, 0x4a1406b1))\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                revert(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                            }\n                                            mstore(_4, _14)\n                                            mstore(32, 1)\n                                            let _20 := keccak256(_4, _2)\n                                            mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(32, _20)\n                                            sstore(keccak256(_4, _2), sub(/** @src 66:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                        }\n                                        /// @src 66:5249:5254  \"value\"\n                                        fun_transfer(value0_1, value1, value)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, 1)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0x313ce567 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPos_3 := mload(_2)\n                                        mstore(memPos_3, /** @src 66:3075:3077  \"18\" */ 0x12)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        return(memPos_3, 32)\n                                    }\n                                    case 0x40c10f19 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_2 := abi_decode_address_3706()\n                                        let value_1 := calldataload(36)\n                                        let _21 := and(/** @src 66:7791:7812  \"account == address(0)\" */ value0_2, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                        if /** @src 66:7791:7812  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _21)\n                                        /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                        {\n                                            /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            let _22 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                            /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_22, shl(224, 0xec442f05))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                            /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        let _23 := sload(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let sum := add(_23, value_1)\n                                        if gt(_23, sum)\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x11)\n                                            revert(_4, 36)\n                                        }\n                                        sstore(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sum)\n                                        mstore(_4, _21)\n                                        mstore(0x20, _4)\n                                        let dataSlot := keccak256(_4, _2)\n                                        sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_1))\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        let _24 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        mstore(_24, value_1)\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        log3(_24, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        return(_4, _4)\n                                    }\n                                    case 0x70a08231 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                        mstore(_4, and(abi_decode_address_3706(), sub(shl(160, 1), 1)))\n                                        mstore(32, _4)\n                                        let _25 := sload(keccak256(_4, _2))\n                                        let memPos_4 := mload(_2)\n                                        mstore(memPos_4, _25)\n                                        return(memPos_4, 32)\n                                    }\n                                    case 0x95d89b41 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPtr := mload(_2)\n                                        let ret_1 := _4\n                                        let slotValue_1 := sload(_3)\n                                        let length_1 := _4\n                                        let _26 := 1\n                                        length_1 := shr(1, slotValue_1)\n                                        let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                        if iszero(outOfPlaceEncoding_1)\n                                        {\n                                            length_1 := and(length_1, 0x7f)\n                                        }\n                                        let _27 := 32\n                                        if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x22)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(memPtr, length_1)\n                                        switch outOfPlaceEncoding_1\n                                        case 0 {\n                                            mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                            ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                        }\n                                        case 1 {\n                                            mstore(_4, _3)\n                                            let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                            let i_1 := _4\n                                            for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                            {\n                                                mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                                dataPos_1 := add(dataPos_1, _26)\n                                            }\n                                            ret_1 := add(add(memPtr, i_1), _27)\n                                        }\n                                        let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                        {\n                                            mstore(_4, shl(224, 0x4e487b71))\n                                            mstore(_3, 0x41)\n                                            revert(_4, 0x24)\n                                        }\n                                        mstore(_2, newFreePtr_1)\n                                        return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                                    }\n                                    case 0x9dc29fac {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_3 := abi_decode_address_3706()\n                                        let value_2 := calldataload(36)\n                                        let _28 := and(/** @src 66:8317:8338  \"account == address(0)\" */ value0_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                        if /** @src 66:8317:8338  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _28)\n                                        /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                        {\n                                            /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                            let _29 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                            /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                            mstore(_29, shl(225, 0x4b637e8f))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                            /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                            revert(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        mstore(_4, _28)\n                                        mstore(0x20, _4)\n                                        let _30 := sload(keccak256(_4, _2))\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_30, value_2)\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        {\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            let _31 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            mstore(_31, shl(226, 0x391434e3))\n                                            revert(_31, sub(abi_encode_address_uint256_uint256(add(_31, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ value0_3, _30, value_2), _31))\n                                        }\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(_4, _28)\n                                        mstore(0x20, _4)\n                                        sstore(keccak256(_4, _2), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _30, value_2))\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        sstore(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(sload(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_2))\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        let _32 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        mstore(_32, value_2)\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        log3(_32, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _28, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        return(_4, _4)\n                                    }\n                                    case 0xa9059cbb {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_4 := abi_decode_address_3706()\n                                        /// @src 66:3754:3759  \"value\"\n                                        fun_transfer(/** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:3754:3759  \"value\" */ value0_4, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ calldataload(36))\n                                        let memPos_5 := mload(_2)\n                                        mstore(memPos_5, 1)\n                                        return(memPos_5, 32)\n                                    }\n                                    case 0xdd62ed3e {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                        let value0_5 := abi_decode_address_3706()\n                                        let value1_1 := abi_decode_address()\n                                        let _33 := sub(shl(160, 1), 1)\n                                        mstore(_4, and(value0_5, _33))\n                                        mstore(32, /** @src 66:3952:3963  \"_allowances\" */ 0x01)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _34 := keccak256(_4, _2)\n                                        mstore(_4, and(value1_1, _33))\n                                        mstore(32, _34)\n                                        let _35 := sload(keccak256(_4, _2))\n                                        let memPos_6 := mload(_2)\n                                        mstore(memPos_6, _35)\n                                        return(memPos_6, 32)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_string(headStart, value0) -> tail\n                            {\n                                let _1 := 32\n                                mstore(headStart, 32)\n                                let length := mload(value0)\n                                mstore(add(headStart, 32), length)\n                                let i := 0\n                                for { } lt(i, length) { i := add(i, _1) }\n                                {\n                                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                                }\n                                mstore(add(add(headStart, length), 64), 0)\n                                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                            }\n                            function abi_decode_address_3706() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(36)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                mstore(add(headStart, 32), value1)\n                                mstore(add(headStart, 64), value2)\n                            }\n                            /// @ast-id 48060 @src 66:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                            function fun_transfer(var_from, var_to, var_value)\n                            {\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _1 := sub(shl(160, 1), 1)\n                                let _2 := and(/** @src 66:5739:5757  \"from == address(0)\" */ var_from, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                if /** @src 66:5739:5757  \"from == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                {\n                                    /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    let _3 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                    /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_3, /** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                    /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                    revert(_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                let _4 := and(/** @src 66:5834:5850  \"to == address(0)\" */ var_to, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                if /** @src 66:5834:5850  \"to == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                {\n                                    /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    let _5 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                    /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_5, /** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                    /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_5, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                /// @src 66:6356:6896  \"if (from == address(0)) {...\"\n                                let _6 := 0\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _7 := sload(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40))\n                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_8, shl(226, 0x391434e3))\n                                    revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                                }\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                sstore(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                let dataSlot := keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40)\n                                sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ var_value))\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                let _9 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                mstore(_9, var_value)\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_9, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"0100044beb3fdc38e616d470b3c32b036a5315a584937af8b009afae9ab43188","factoryDependencies":{"010001c35984ded208c2d56c49b3738fdf02a3abd7c9d628d759857a2ed491a5":"script/HelperConfig.s.sol:HelperConfig"},"id":83}