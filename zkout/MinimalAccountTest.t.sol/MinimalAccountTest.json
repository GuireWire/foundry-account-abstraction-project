{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"MinimalAccountTest.t.sol:MinimalAccountTest\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_19\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r3\n\tjump.lt\t@.BB0_344\n\tld\tr1, r1\n\tshr.s\t224, r1, r1\n\tsub.s!\t@CPI0_13[0], r1, r3\n\tjump.le\t@.BB0_37\n\tsub.s!\t@CPI0_14[0], r1, r3\n\tjump.le\t@.BB0_51\n\tsub.s!\t@CPI0_15[0], r1, r3\n\tjump.gt\t@.BB0_68\n\tsub.s!\t@CPI0_19[0], r1, r3\n\tjump.eq\t@.BB0_160\n\tsub.s!\t@CPI0_20[0], r1, r3\n\tjump.eq\t@.BB0_183\n\tsub.s!\t@CPI0_21[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t8, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_18\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.1\t132, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_46[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_13\n\tadd\tr0, r0, r7\n.BB0_12:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t128, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_12\n.BB0_13:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_15\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t128, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_15:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_236\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t128, r1, r2\n\tst.1\t64, r2\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\t128, r1\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n.BB0_18:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr2, r1\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_19:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t31, r0, r1\n\tsload\tr1, r2\n\tand\tr2, r3, r2\n\tor\t1, r2, r2\n\tsstore\tr1, r2\n\tadd\t324, r0, r1\n\tadd\t32, r0, r2\n\tadd\tr2, r0, stack-[17]\n\tsstore\tr2, r1\n\tadd\t300, r0, r1\n\tadd\t33, r0, r2\n\tsstore\tr2, r1\n\tadd\t260, r0, r1\n\tadd\t34, r0, r2\n\tsstore\tr2, r1\n\tadd\t10, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_1[0], r0, r2\n\tst.1\t160, r2\n\tst.1\t224, r2\n\tst.1\t234, r0\n\tst.1\t192, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tld\tr1, r1\n\tadd\t@CPI0_3[0], r0, r2\n\tst.1\t256, r2\n\tst.1\t260, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_24\n\tadd\tr0, r0, r7\n.BB0_23:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tadd\t256, r8, r8\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_23\n.BB0_24:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_26\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tshl.s\t3, r5, r5\n\tadd\t256, r6, r6\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_26:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_45\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tor\t256, r1, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\t256, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_344\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r6\n\tadd\t36, r6, r1\n\tadd\t64, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\tr6, r1\n\tadd\t4, r6, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r6, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t100, r6, r2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_34\n\tadd\tr0, r0, r3\n.BB0_33:\n\tadd\tr3, r2, r4\n\tadd\t160, r3, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_33\n.BB0_34:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r6, r3\n\tadd\tr2, r0, r3\n\tadd.lt\tr6, r0, r3\n\tshl.s\t64, r3, r3\n\tadd\t100, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r3, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tadd\tr6, r0, stack-[15]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_231\n\tadd\tstack-[15], r0, r1\n\tadd\tr1, r0, r2\n\tsub.s!\t@CPI0_10[0], r1, r1\n\tjump.ge\t@.BB0_859\n\tst.1\t64, r2\n\tadd\t39, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_11[0], r2, r2\n\tor\tstack-[16], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_12[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_37:\n\tsub.s!\t@CPI0_28[0], r1, r2\n\tjump.gt\t@.BB0_62\n\tsub.s!\t@CPI0_35[0], r1, r2\n\tjump.le\t@.BB0_91\n\tsub.s!\t@CPI0_36[0], r1, r2\n\tjump.eq\t@.BB0_150\n\tsub.s!\t@CPI0_37[0], r1, r2\n\tjump.eq\t@.BB0_173\n\tsub.s!\t@CPI0_38[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t22, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_44\n\tadd\t160, r0, r4\n\tadd\t@CPI0_90[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_220:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_6[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_220\n\tjump\t@.BB0_227\n.BB0_45:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_48\n\tadd\tr0, r0, r6\n.BB0_47:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_47\n.BB0_48:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n.BB0_49:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_50:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_51:\n\tsub.s!\t@CPI0_22[0], r1, r2\n\tjump.le\t@.BB0_73\n\tsub.s!\t@CPI0_23[0], r1, r2\n\tjump.eq\t@.BB0_111\n\tsub.s!\t@CPI0_24[0], r1, r2\n\tjump.eq\t@.BB0_143\n\tsub.s!\t@CPI0_25[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_60\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_60\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_488\n.BB0_60:\n\tadd\t37, r0, r1\n\tsload\tr1, r2\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tld.1\t64, r10\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr10, r3\n\tand\t@CPI0_6[0], r1, r3\n\tadd\t4, r10, r1\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[15]\n\tjump.ne\t@.BB0_241\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_247\n.BB0_62:\n\tsub.s!\t@CPI0_29[0], r1, r2\n\tjump.le\t@.BB0_102\n\tsub.s!\t@CPI0_30[0], r1, r2\n\tjump.eq\t@.BB0_157\n\tsub.s!\t@CPI0_31[0], r1, r2\n\tjump.eq\t@.BB0_180\n\tsub.s!\t@CPI0_32[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tnear_call\tr0, @fun_isOnZkSyncChainId, @DEFAULT_UNWIND\n\tjump\t@.BB0_208\n.BB0_68:\n\tsub.s!\t@CPI0_16[0], r1, r2\n\tjump.eq\t@.BB0_165\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.eq\t@.BB0_203\n\tsub.s!\t@CPI0_18[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t31, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_41[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_73:\n\tsub.s!\t@CPI0_26[0], r1, r2\n\tjump.eq\t@.BB0_167\n\tsub.s!\t@CPI0_27[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t26, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_47[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_201\n\tadd\t128, r0, r6\n\tadd\t@CPI0_84[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[11]\n.BB0_80:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_464\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_86\n\tadd\tr3, r0, stack-[12]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[16]\n\tadd\tr6, r0, stack-[17]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tadd\tstack-[15], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_87\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[12], r0, r11\n.BB0_85:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_85\n\tjump\t@.BB0_88\n.BB0_86:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_88\n.BB0_87:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n.BB0_88:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_80\n\tjump\t@.BB0_200\n.BB0_91:\n\tsub.s!\t@CPI0_39[0], r1, r2\n\tjump.eq\t@.BB0_206\n\tsub.s!\t@CPI0_40[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_98\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_98\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_524\n.BB0_98:\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_101[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t36, r1, r2\n\tadd\t@CPI0_102[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[17]\n\tst.1\tr2, r4\n\tadd\t@CPI0_103[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_447\n\tld\tr1, r2\n\tsub!\tr2, r0, r1\n\tjump.ne\t@.BB0_561\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_448\n.BB0_102:\n\tsub.s!\t@CPI0_33[0], r1, r2\n\tjump.eq\t@.BB0_209\n\tsub.s!\t@CPI0_34[0], r1, r1\n\tjump.ne\t@.BB0_344\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t30, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[4]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[4], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tadd\tstack-[4], r0, r4\n\tst.1\t128, r4\n\tst.1\t0, r1\n\tsub!\tr4, r0, r1\n\tjump.ne\t@.BB0_411\n.BB0_108:\n\tadd\t32, r0, r1\n\tst.1.inc\tr3, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[17]\n\tadd\t64, r3, r2\n\tshl.s\t5, r1, r3\n\tadd\tr3, r2, r6\n\tadd\tr1, r0, stack-[16]\n\tsub!\tr1, r0, r3\n\tjump.ne\t@.BB0_480\n\tadd\tr6, r0, r11\n.BB0_110:\n\tadd\tstack-[17], r0, r4\n\tsub\tr11, r4, r1\n\tjump\t@.BB0_230\n.BB0_111:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t29, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[9], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.eq\t@.BB0_164\n\tsub.s!\t@CPI0_52[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\t@CPI0_83[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r6\n.BB0_117:\n\tadd\tr6, r0, stack-[14]\n\tadd\tr5, r0, stack-[15]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tr1, r0, stack-[17]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr4, r0, stack-[16]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tld\tr1, r2\n\tadd\tstack-[11], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_136\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[12], r0, r8\n.BB0_120:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_54[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_120\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_123\n.BB0_122:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_123:\n\tadd\tstack-[16], r0, r4\n\tadd\tstack-[15], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_125\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_138\n.BB0_126:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_127\n.BB0_139:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_140\n.BB0_128:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_129\n.BB0_141:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_142\n.BB0_130:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_132\n.BB0_131:\n\tand\t@CPI0_54[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_132:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tadd\tstack-[17], r0, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[9], r6, r2\n\tjump.ge\t@.BB0_578\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.le\t@.BB0_117\n\tjump\t@.BB0_859\n.BB0_125:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_126\n.BB0_138:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_139\n.BB0_127:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_128\n.BB0_140:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_141\n.BB0_129:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_130\n.BB0_142:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_131\n\tjump\t@.BB0_132\n.BB0_136:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[12], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_122\n\tjump\t@.BB0_123\n.BB0_143:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_148\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_148\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_500\n.BB0_148:\n\tadd\t37, r0, r4\n\tsload\tr4, r2\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tld.1\t64, r10\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr10, r3\n\tand\t@CPI0_6[0], r1, r5\n\tadd\t4, r10, r1\n\tst.1\tr1, r5\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[14]\n\tadd\tr2, r0, stack-[16]\n\tadd\tr5, r0, stack-[17]\n\tjump.ne\t@.BB0_272\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_278\n.BB0_150:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_155\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_155\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_512\n.BB0_155:\n\tadd\t37, r0, r1\n\tsload\tr1, r2\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tld.1\t64, r10\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr10, r3\n\tand\t@CPI0_6[0], r1, r3\n\tadd\t4, r10, r1\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[16]\n\tjump.ne\t@.BB0_293\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_299\n.BB0_157:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t24, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_216\n\tjump\t@.BB0_44\n.BB0_160:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t28, r0, r4\n\tsload\tr4, r1\n\tadd\tr1, r0, stack-[9]\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[9], r0, r1\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r4\n\tsub!\tr3, r0, r3\n\tjump.ne\t@.BB0_345\n.BB0_164:\n\tadd\tr1, r0, stack-[17]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_struct_FuzzSelector_dyn, @DEFAULT_UNWIND\n\tjump\t@.BB0_202\n.BB0_165:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tnear_call\tr0, @fun_isOnZkSyncPrecompiles, @DEFAULT_UNWIND\n\tjump\t@.BB0_208\n.BB0_167:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t27, r0, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[8]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[8], r0, r2\n\tshl.s\t5, r2, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r15\n\tst.1\t64, r15\n\tadd\tstack-[8], r0, r3\n\tst.1\t128, r3\n\tst.1\t0, r1\n\tsub!\tr3, r0, r1\n\tjump.ne\t@.BB0_373\n.BB0_171:\n\tadd\t32, r0, r1\n\tst.1.inc\tr15, r1, r2\n\tld.1\t128, r1\n\tst.1\tr2, r1\n\tadd\t64, r15, r3\n\tshl.s\t5, r1, r2\n\tadd\tr2, r3, r2\n\tsub!\tr1, r0, r4\n\tjump.ne\t@.BB0_472\n.BB0_172:\n\tsub\tr2, r15, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r15, r3\n\tadd.ge\tr2, r0, r15\n\tshl.s\t64, r15, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_173:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_178\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_178\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_536\n.BB0_178:\n\tadd\t37, r0, r1\n\tsload\tr1, r2\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[15]\n\tsload\tr1, r1\n\tld.1\t64, r10\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr10, r3\n\tand\t@CPI0_6[0], r1, r3\n\tadd\t4, r10, r1\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr2, r0, stack-[16]\n\tjump.ne\t@.BB0_314\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_320\n.BB0_180:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t23, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_221\n\tjump\t@.BB0_44\n.BB0_183:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t25, r0, r4\n\tsload\tr4, r5\n\tsub.s!\t@CPI0_47[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tsub.s!\t@CPI0_49[0], r2, r3\n\tjump.gt\t@.BB0_859\n\tadd\t128, r2, r1\n\tst.1\t64, r1\n\tst.1\t128, r5\n\tst.1\t0, r4\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_201\n\tadd\t128, r0, r6\n\tadd\t@CPI0_50[0], r0, r7\n\tadd\tr0, r0, r8\n\tadd\tr5, r0, stack-[11]\n.BB0_188:\n\tsload\tr7, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_464\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_194\n\tadd\tr3, r0, stack-[12]\n\tadd\tr4, r0, stack-[15]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[16]\n\tadd\tr6, r0, stack-[17]\n\tadd\tr7, r0, stack-[14]\n\tst.1\t0, r7\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tadd\tstack-[15], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[16], r0, r8\n\tjump.eq\t@.BB0_195\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[12], r0, r11\n.BB0_193:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_193\n\tjump\t@.BB0_196\n.BB0_194:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_196\n.BB0_195:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r7\n\tadd\tstack-[13], r0, r9\n.BB0_196:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\t32, r6, r6\n\tst.1\t64, r1\n\tst.1\tr6, r9\n\tadd\t1, r7, r7\n\tadd\t1, r8, r8\n\tsub!\tr8, r5, r1\n\tjump.lt\t@.BB0_188\n.BB0_200:\n\tld.1\t64, r1\n.BB0_201:\n\tadd\tr1, r0, stack-[17]\n\tadd\t128, r0, r2\n\tnear_call\tr0, @abi_encode_array_string_dyn, @DEFAULT_UNWIND\n.BB0_202:\n\tadd\tstack-[17], r0, r4\n\tjump\t@.BB0_229\n.BB0_203:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t21, r0, r2\n\tsload\tr2, r1\n\tst.1\t128, r1\n\tst.1\t0, r2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_224\n.BB0_44:\n\tadd\t32, r0, r2\n\tjump\t@.BB0_228\n.BB0_206:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tnear_call\tr0, @fun_isZkSyncChain, @DEFAULT_UNWIND\n.BB0_208:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_43[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_209:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[13]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_56[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub.s!\tstack-[17], r1, r2\n\tjump.eq\t@.BB0_214\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tjump.eq\t@.BB0_214\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tjump.ne\t@.BB0_548\n.BB0_214:\n\tadd\t37, r0, r4\n\tsload\tr4, r2\n\tadd\t36, r0, r1\n\tadd\tr1, r0, stack-[16]\n\tsload\tr1, r1\n\tld.1\t64, r10\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr10, r3\n\tand\t@CPI0_6[0], r1, r3\n\tadd\t4, r10, r1\n\tadd\tr3, r0, stack-[17]\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[14]\n\tadd\tr2, r0, stack-[15]\n\tjump.ne\t@.BB0_335\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_341\n.BB0_216:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_87[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_217:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_6[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_217\n\tjump\t@.BB0_227\n.BB0_221:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_86[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_222:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_6[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_222\n\tjump\t@.BB0_227\n.BB0_224:\n\tadd\t160, r0, r4\n\tadd\t@CPI0_42[0], r0, r2\n\tadd\tr0, r0, r3\n.BB0_225:\n\tadd\tr4, r0, r5\n\tsload\tr2, r4\n\tand\t@CPI0_6[0], r4, r4\n\tst.1.inc\tr5, r4, r4\n\tadd\t1, r2, r2\n\tadd\t1, r3, r3\n\tsub!\tr3, r1, r6\n\tjump.lt\t@.BB0_225\n.BB0_227:\n\tsub.s\t96, r5, r2\n.BB0_228:\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[17]\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @abi_encode_array_address_dyn, @DEFAULT_UNWIND\n\tadd\tstack-[16], r0, r4\n.BB0_229:\n\tsub\tr1, r4, r1\n.BB0_230:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_231:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_234\n\tadd\tr0, r0, r6\n.BB0_233:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_233\n.BB0_234:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_236:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_239\n\tadd\tr0, r0, r6\n.BB0_238:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_238\n.BB0_239:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_241:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\tr10, r0, stack-[14]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_244\n\tadd\tr0, r0, r7\n.BB0_243:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_243\n.BB0_244:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_246\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_246:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_432\n.BB0_247:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[14]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_584\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r3\n\tst.1\t64, r3\n\tadd\t@CPI0_68[0], r0, r1\n\tadd\tstack-[12], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r3, r1\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r0, r1\n\tst.1\tr3, r1\n\tsub.s!\t@CPI0_49[0], r3, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r1\n\tadd\t128, r1, r1\n\tst.1\t64, r1\n\tadd\t39, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_853\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_71[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\t@CPI0_72[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_890\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r1\n\tadd\tstack-[15], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t100, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[16]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[12], r0, r6\n\tjump.eq\t@.BB0_268\n\tadd\tr0, r0, r3\n.BB0_267:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_267\n.BB0_268:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_270\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[16], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_929\n.BB0_270:\n\tadd\tstack-[16], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[16], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_272:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\tr10, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_275\n\tadd\tr0, r0, r7\n.BB0_274:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_274\n.BB0_275:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_277\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_277:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_437\n.BB0_278:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_589\n\tadd\tstack-[13], r0, r2\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r5\n\tst.1\t64, r5\n\tadd\t@CPI0_68[0], r0, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r2\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr4, r2\n\tadd\t68, r5, r2\n\tadd\t@CPI0_69[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r0, r2\n\tst.1\tr5, r2\n\tsub.s!\t@CPI0_49[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r5\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t64, r2\n\tadd\t228, r5, r2\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[9]\n\tst.1\tr2, r4\n\tadd\t160, r5, r4\n\tadd\t@CPI0_73[0], r0, r2\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r2\n\tadd\t164, r5, r2\n\tadd\tstack-[16], r0, r4\n\tst.1\tr2, r4\n\tadd\t260, r5, r4\n\tld.1\tr5, r2\n\tst.1\tr4, r2\n\tadd\t196, r5, r4\n\tst.1\tr4, r0\n\tadd\t292, r5, r4\n\tsub!\tr2, r0, r5\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_289\n\tadd\tr0, r0, r5\n.BB0_288:\n\tadd\tr5, r4, r6\n\tadd\tr5, r8, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_288\n.BB0_289:\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r2, r2\n\tadd\t132, r2, r4\n\tadd\tstack-[11], r0, r6\n\tst.1\tr6, r4\n\tadd\t195, r2, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r6, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_47[0], r4, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[17], r0, r6\n\tst.1\t64, r6\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tadd\t38, r0, r4\n\tsload\tr4, r4\n\tadd\t@CPI0_74[0], r0, r5\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[13]\n\tand\t@CPI0_6[0], r4, stack-[12]\n\tcontext.gas_left\tr4\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_634\n\tsub.s!\t96, r3, r2\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_640\n.BB0_293:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\tr10, r0, stack-[14]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_296\n\tadd\tr0, r0, r7\n.BB0_295:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_295\n.BB0_296:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_298\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_298:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_442\n.BB0_299:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_594\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r5\n\tst.1\t64, r5\n\tadd\t@CPI0_68[0], r0, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r2\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr4, r2\n\tadd\t68, r5, r2\n\tadd\t@CPI0_69[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r0, r2\n\tst.1\tr5, r2\n\tsub.s!\t@CPI0_49[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r5\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t64, r2\n\tadd\t228, r5, r2\n\tadd\t96, r0, r4\n\tst.1\tr2, r4\n\tadd\t160, r5, r4\n\tadd\t@CPI0_73[0], r0, r2\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r2\n\tadd\t164, r5, r2\n\tadd\tstack-[16], r0, r4\n\tst.1\tr2, r4\n\tadd\t260, r5, r4\n\tld.1\tr5, r2\n\tst.1\tr4, r2\n\tadd\t196, r5, r4\n\tst.1\tr4, r0\n\tadd\t292, r5, r4\n\tsub!\tr2, r0, r5\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_310\n\tadd\tr0, r0, r5\n.BB0_309:\n\tadd\tr5, r4, r6\n\tadd\tr5, r8, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_309\n.BB0_310:\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r2, r2\n\tadd\t132, r2, r4\n\tadd\tstack-[11], r0, r6\n\tst.1\tr6, r4\n\tadd\t195, r2, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r6, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_47[0], r4, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[17], r0, r6\n\tst.1\t64, r6\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[9]\n\tsload\tr2, r2\n\tadd\t38, r0, r4\n\tsload\tr4, r4\n\tadd\t@CPI0_74[0], r0, r5\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[14]\n\tand\t@CPI0_6[0], r4, stack-[12]\n\tcontext.gas_left\tr4\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_708\n\tsub.s!\t96, r3, r2\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_714\n.BB0_314:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\tr10, r0, stack-[14]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[14], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_317\n\tadd\tr0, r0, r7\n.BB0_316:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_316\n.BB0_317:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_319\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_319:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_454\n.BB0_320:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[14]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[12]\n\tadd\t4, r4, r1\n\tadd\tstack-[14], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[11]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[14]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_599\n\tadd\tstack-[14], r0, r2\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r5\n\tst.1\t64, r5\n\tadd\t@CPI0_68[0], r0, r2\n\tadd\tstack-[12], r0, r4\n\tst.1\tr4, r2\n\tadd\tstack-[17], r0, r2\n\tadd\tstack-[11], r0, r4\n\tst.1\tr4, r2\n\tadd\t68, r5, r2\n\tadd\t@CPI0_69[0], r0, r4\n\tst.1\tr2, r4\n\tadd\t68, r0, r2\n\tst.1\tr5, r2\n\tsub.s!\t@CPI0_49[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r5\n\tadd\t128, r5, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t64, r2\n\tadd\t228, r5, r2\n\tadd\t96, r0, r4\n\tadd\tr4, r0, stack-[9]\n\tst.1\tr2, r4\n\tadd\t160, r5, r4\n\tadd\t@CPI0_73[0], r0, r2\n\tadd\tr4, r0, stack-[10]\n\tst.1\tr4, r2\n\tadd\t164, r5, r2\n\tadd\tstack-[16], r0, r4\n\tst.1\tr2, r4\n\tadd\t260, r5, r4\n\tld.1\tr5, r2\n\tst.1\tr4, r2\n\tadd\t196, r5, r4\n\tst.1\tr4, r0\n\tadd\t292, r5, r4\n\tsub!\tr2, r0, r5\n\tadd\tstack-[12], r0, r8\n\tjump.eq\t@.BB0_331\n\tadd\tr0, r0, r5\n.BB0_330:\n\tadd\tr5, r4, r6\n\tadd\tr5, r8, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB0_330\n.BB0_331:\n\tadd\tr2, r4, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, stack-[16]\n\tand\tstack-[16], r2, r2\n\tadd\t132, r2, r4\n\tadd\tstack-[11], r0, r6\n\tst.1\tr6, r4\n\tadd\t195, r2, r2\n\tand\tstack-[16], r2, r2\n\tadd\tr2, r6, r4\n\tsub!\tr4, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tadd\tr4, r0, stack-[17]\n\tsub.s!\t@CPI0_47[0], r4, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[17], r0, r6\n\tst.1\t64, r6\n\tadd\t35, r0, r2\n\tadd\tr2, r0, stack-[8]\n\tsload\tr2, r2\n\tadd\t38, r0, r4\n\tsload\tr4, r4\n\tadd\t@CPI0_74[0], r0, r5\n\tst.1.inc\tr6, r5, r5\n\tadd\tr5, r0, stack-[14]\n\tand\t@CPI0_6[0], r4, stack-[12]\n\tcontext.gas_left\tr4\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_775\n\tsub.s!\t96, r3, r2\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_781\n.BB0_335:\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r3\n\tadd.lt\tr10, r0, r4\n\tshl.s\t64, r4, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\tr10, r0, stack-[13]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_338\n\tadd\tr0, r0, r7\n.BB0_337:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_337\n.BB0_338:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_340\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_340:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_459\n.BB0_341:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.ge\t@.BB0_465\n.BB0_344:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_345:\n\tsub.s!\t@CPI0_52[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tadd\t@CPI0_53[0], r0, r4\n\tadd\t160, r0, r5\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r6\n.BB0_347:\n\tadd\tr6, r0, stack-[14]\n\tadd\tr5, r0, stack-[15]\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tsload\tr4, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tr1, r0, stack-[17]\n\tst.1.inc\tr1, r2, r1\n\tadd\tr1, r0, stack-[10]\n\tadd\tr4, r0, stack-[16]\n\tadd\t1, r4, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[13]\n\tadd\tr3, r0, stack-[11]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[12]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tld\tr1, r2\n\tadd\tstack-[11], r0, r9\n\tsub.s!\t8, r9, r1\n\tjump.lt\t@.BB0_366\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[12], r0, r8\n.BB0_350:\n\tadd\t224, r8, r3\n\tsload\tr2, r4\n\tand\t@CPI0_54[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t192, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t160, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t128, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t96, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t64, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t32, r8, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr8, r3\n\tadd\t1, r2, r2\n\tadd\t256, r8, r8\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r9, r3\n\tjump.lt\t@.BB0_350\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_353\n.BB0_352:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr8, r3, r8\n\tor\t1, r1, r1\n.BB0_353:\n\tadd\tstack-[16], r0, r4\n\tadd\tstack-[15], r0, r5\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_355\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_368\n.BB0_356:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_357\n.BB0_369:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_370\n.BB0_358:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_359\n.BB0_371:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_372\n.BB0_360:\n\tsub!\tr1, r9, r1\n\tjump.ge\t@.BB0_362\n.BB0_361:\n\tand\t@CPI0_54[0], r2, r1\n\tst.1.inc\tr8, r1, r8\n.BB0_362:\n\tsub\tr8, r7, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r7, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tadd\tstack-[17], r0, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr1, r7\n\tst.1.inc\tr5, r3, r5\n\tld.1\t64, r1\n\tadd\t1, r6, r6\n\tsub.s!\tstack-[9], r6, r2\n\tjump.ge\t@.BB0_164\n\tadd\t2, r4, r4\n\tsub.s!\t@CPI0_55[0], r1, r2\n\tjump.le\t@.BB0_347\n\tjump\t@.BB0_859\n.BB0_355:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_356\n.BB0_368:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_369\n.BB0_357:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_358\n.BB0_370:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_371\n.BB0_359:\n\tsub!\tr1, r9, r3\n\tjump.ge\t@.BB0_360\n.BB0_372:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr8, r3, r8\n\tadd\t1, r1, r1\n\tsub!\tr1, r9, r1\n\tjump.lt\t@.BB0_361\n\tjump\t@.BB0_362\n.BB0_366:\n\tadd\tr0, r0, r1\n\tadd\tstack-[14], r0, r6\n\tadd\tstack-[13], r0, r7\n\tadd\tstack-[12], r0, r8\n\tsload\tr2, r2\n\tsub!\tr1, r9, r3\n\tjump.lt\t@.BB0_352\n\tjump\t@.BB0_353\n.BB0_373:\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.gt\t@.BB0_859\n\tadd\t@CPI0_85[0], r0, r5\n\tadd\t160, r0, stack-[15]\n\tadd\tr0, r0, stack-[14]\n.BB0_375:\n\tadd\t64, r15, r6\n\tst.1\t64, r6\n\tsload\tr5, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\txor\tr1, r3, r3\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_464\n\tst.1\tr6, r4\n\tadd\t96, r15, r3\n\tsub!\tr2, r0, r2\n\tadd\tr15, r0, stack-[17]\n\tadd\tr5, r0, stack-[16]\n\tjump.eq\t@.BB0_381\n\tadd\tr3, r0, stack-[11]\n\tadd\tr4, r0, stack-[13]\n\tadd\tr6, r0, stack-[12]\n\tst.1\t0, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tadd\tstack-[13], r0, r7\n\tsub!\tr7, r0, r2\n\tjump.eq\t@.BB0_382\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[17], r0, r15\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[12], r0, r6\n\tadd\tstack-[11], r0, r8\n.BB0_380:\n\tadd\tr1, r8, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r7, r3\n\tjump.lt\t@.BB0_380\n\tjump\t@.BB0_383\n.BB0_381:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_383\n.BB0_382:\n\tadd\tr0, r0, r1\n\tadd\tstack-[17], r0, r15\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[12], r0, r6\n.BB0_383:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, stack-[13]\n\tand\tstack-[13], r1, r2\n\tadd\tr2, r6, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tst.1.inc\tr15, r6, r1\n\tadd\tr1, r0, stack-[9]\n\tadd\t1, r5, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[12]\n\tadd\tr3, r0, stack-[10]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[11]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tld\tr1, r2\n\tadd\tstack-[10], r0, r8\n\tsub.s!\t8, r8, r1\n\tjump.lt\t@.BB0_404\n\tadd\tr0, r0, r1\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[11], r0, r7\n.BB0_388:\n\tadd\t224, r7, r3\n\tsload\tr2, r4\n\tand\t@CPI0_54[0], r4, r5\n\tst.1\tr3, r5\n\tshl.s\t32, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t192, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t64, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t160, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t96, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t128, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t128, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t96, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t160, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t64, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t192, r4, r3\n\tand\t@CPI0_54[0], r3, r3\n\tadd\t32, r7, r5\n\tst.1\tr5, r3\n\tshl.s\t224, r4, r3\n\tst.1\tr7, r3\n\tadd\t1, r2, r2\n\tadd\t256, r7, r7\n\tadd\t8, r1, r1\n\tor\t7, r1, r3\n\tsub!\tr3, r8, r3\n\tjump.lt\t@.BB0_388\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_391\n.BB0_390:\n\tshl.s\t224, r2, r3\n\tst.1.inc\tr7, r3, r7\n\tor\t1, r1, r1\n.BB0_391:\n\tadd\tstack-[16], r0, r5\n\tadd\tstack-[12], r0, r4\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_393\n\tshl.s\t192, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_406\n.BB0_394:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_395\n.BB0_407:\n\tshl.s\t128, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_408\n.BB0_396:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_397\n.BB0_409:\n\tshl.s\t64, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_410\n.BB0_398:\n\tsub!\tr1, r8, r1\n\tjump.ge\t@.BB0_400\n.BB0_399:\n\tand\t@CPI0_54[0], r2, r1\n\tst.1.inc\tr7, r1, r7\n.BB0_400:\n\tsub\tr7, r4, r1\n\tadd\t31, r1, r1\n\tand\tstack-[13], r1, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\tr1, r4\n\tadd\tstack-[15], r0, r1\n\tst.1.inc\tr1, r6, r1\n\tadd\tr1, r0, stack-[15]\n\tld.1\t64, r15\n\tadd\tstack-[14], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\tstack-[8], r2, r1\n\tjump.ge\t@.BB0_609\n\tadd\t2, r5, r5\n\tsub.s!\t@CPI0_55[0], r15, r1\n\tjump.le\t@.BB0_375\n\tjump\t@.BB0_859\n.BB0_393:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_394\n.BB0_406:\n\tshl.s\t160, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_407\n.BB0_395:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_396\n.BB0_408:\n\tshl.s\t96, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_409\n.BB0_397:\n\tsub!\tr1, r8, r3\n\tjump.ge\t@.BB0_398\n.BB0_410:\n\tshl.s\t32, r2, r3\n\tand\t@CPI0_54[0], r3, r3\n\tst.1.inc\tr7, r3, r7\n\tadd\t1, r1, r1\n\tsub!\tr1, r8, r1\n\tjump.lt\t@.BB0_399\n\tjump\t@.BB0_400\n.BB0_404:\n\tadd\tr0, r0, r1\n\tadd\tstack-[17], r0, r6\n\tadd\tstack-[11], r0, r7\n\tsload\tr2, r2\n\tsub!\tr1, r8, r3\n\tjump.lt\t@.BB0_390\n\tjump\t@.BB0_391\n.BB0_411:\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_52[0], r2, r1\n\tjump.gt\t@.BB0_859\n\tadd\t@CPI0_88[0], r0, stack-[8]\n\tadd\t160, r0, stack-[7]\n\tadd\tr0, r0, stack-[6]\n.BB0_413:\n\tadd\tstack-[17], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\tstack-[8], r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_6[0], r1, r1\n\tst.1.inc\tr2, r1, r1\n\tadd\tr1, r0, stack-[5]\n\tor\t1, r3, r1\n\tsload\tr1, r5\n\tsub.s!\t@CPI0_47[0], r5, r2\n\tjump.gt\t@.BB0_859\n\tshl.s\t5, r5, r2\n\tadd\t63, r2, r2\n\tand\t@CPI0_48[0], r2, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tadd\tr3, r0, stack-[9]\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r2\n\tadd\tr5, r0, stack-[10]\n\tadd\tstack-[9], r0, r2\n\tst.1\tr2, r5\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tadd\tstack-[10], r0, r5\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_430\n\tld\tr1, r6\n\tadd\tr0, r0, r7\n\tadd\tstack-[9], r0, r8\n.BB0_419:\n\tsload\tr6, r1\n\tand!\t1, r1, r2\n\tshr.s\t1, r1, r3\n\tand\t127, r3, r4\n\tadd.ne\tr3, r0, r4\n\tsub.s!\t31, r4, r3\n\tadd\t0, r0, r3\n\tadd.gt\t1, r0, r3\n\tsub!\tr2, r3, r3\n\tjump.ne\t@.BB0_464\n\tld.1\t64, r9\n\tst.1.inc\tr9, r4, r3\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_425\n\tadd\tr3, r0, stack-[11]\n\tadd\tr4, r0, stack-[12]\n\tadd\tr9, r0, stack-[13]\n\tadd\tr8, r0, stack-[14]\n\tadd\tr7, r0, stack-[15]\n\tadd\tr6, r0, stack-[16]\n\tst.1\t0, r6\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_51[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tadd\tstack-[12], r0, r10\n\tsub!\tr10, r0, r2\n\tadd\tstack-[15], r0, r7\n\tadd\tstack-[14], r0, r8\n\tjump.eq\t@.BB0_426\n\tld\tr1, r2\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[13], r0, r9\n\tadd\tstack-[11], r0, r11\n.BB0_424:\n\tadd\tr1, r11, r3\n\tsload\tr2, r4\n\tst.1\tr3, r4\n\tadd\t1, r2, r2\n\tadd\t32, r1, r1\n\tsub!\tr1, r10, r3\n\tjump.lt\t@.BB0_424\n\tjump\t@.BB0_427\n.BB0_425:\n\tsub.s\t256, r0, r2\n\tand\tr1, r2, r1\n\tst.1\tr3, r1\n\tsub!\tr4, r0, r1\n\tadd\t32, r0, r1\n\tadd.eq\t0, r0, r1\n\tjump\t@.BB0_427\n.BB0_426:\n\tadd\tr0, r0, r1\n\tadd\tstack-[10], r0, r5\n\tadd\tstack-[16], r0, r6\n\tadd\tstack-[13], r0, r9\n.BB0_427:\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r3\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tadd\t32, r8, r8\n\tst.1\t64, r1\n\tst.1\tr8, r9\n\tadd\t1, r6, r6\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r1\n\tjump.lt\t@.BB0_419\n.BB0_430:\n\tadd\tstack-[5], r0, r1\n\tadd\tstack-[9], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[7], r0, r2\n\tst.1.inc\tr2, r1, r2\n\tadd\tr2, r0, stack-[7]\n\tld.1\t64, r3\n\tadd\tstack-[6], r0, r2\n\tadd\t1, r2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\tstack-[4], r2, r1\n\tjump.ge\t@.BB0_633\n\tadd\tstack-[8], r0, r1\n\tadd\t2, r1, stack-[8]\n\tadd\tr3, r0, stack-[17]\n\tsub.s!\t@CPI0_55[0], r3, r1\n\tjump.le\t@.BB0_413\n\tjump\t@.BB0_859\n.BB0_432:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_435\n\tadd\tr0, r0, r6\n.BB0_434:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_434\n.BB0_435:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_437:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_440\n\tadd\tr0, r0, r6\n.BB0_439:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_439\n.BB0_440:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_442:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_445\n\tadd\tr0, r0, r6\n.BB0_444:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_444\n.BB0_445:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_447:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_448:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_451\n\tadd\tr0, r0, r6\n.BB0_450:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_450\n.BB0_451:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_453\n.BB0_452:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_453:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_454:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_457\n\tadd\tr0, r0, r6\n.BB0_456:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_456\n.BB0_457:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_459:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_462\n\tadd\tr0, r0, r6\n.BB0_461:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_461\n.BB0_462:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_464:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_465:\n\tld.1\tr5, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t4, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\tr1, r0, stack-[13]\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[12]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_604\n\tadd\tstack-[12], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[12], r0, r4\n\tst.1\t64, r4\n\tadd\t@CPI0_68[0], r0, r1\n\tadd\tstack-[11], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[17], r0, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr2, r1\n\tadd\t68, r4, r1\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t68, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI0_49[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[12], r0, r1\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tadd\tr2, r0, stack-[13]\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tadd\tstack-[17], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.ne\t@.BB0_610\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_616\n.BB0_472:\n\tadd\t128, r0, r4\n\tadd\t64, r0, r5\n\tadd\tr0, r0, r6\n\tjump\t@.BB0_474\n.BB0_473:\n\tadd\t1, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.ge\t@.BB0_172\n.BB0_474:\n\tsub\tr2, r15, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr3, r7, r3\n\tadd\t32, r4, r4\n\tld.1\tr4, r7\n\tld.1.inc\tr7, r9, r8\n\tst.1.inc\tr2, r5, r7\n\tadd\t64, r2, r12\n\tld.1.inc\tr9, r10, r11\n\tst.1\tr12, r10\n\tadd\t96, r2, r9\n\tsub!\tr10, r0, r12\n\tjump.eq\t@.BB0_477\n\tadd\tr0, r0, r12\n.BB0_476:\n\tadd\tr12, r9, r13\n\tadd\tr11, r12, r14\n\tld.1\tr14, r14\n\tst.1\tr13, r14\n\tadd\t32, r12, r12\n\tsub!\tr12, r10, r13\n\tjump.lt\t@.BB0_476\n.BB0_477:\n\tadd\tr10, r9, r11\n\tst.1\tr11, r0\n\tadd\t31, r10, r10\n\tsub.s\t32, r0, r11\n\tand\tr10, r11, r10\n\tadd\tr10, r9, r9\n\tld.1\tr8, r8\n\tsub\tr9, r2, r2\n\tst.1\tr7, r2\n\tld.1\tr8, r7\n\tst.1.inc\tr9, r7, r2\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_473\n\tadd\tr0, r0, r9\n.BB0_479:\n\tadd\t32, r8, r8\n\tld.1\tr8, r10\n\tand\t@CPI0_54[0], r10, r10\n\tst.1.inc\tr2, r10, r2\n\tadd\t1, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_479\n\tjump\t@.BB0_473\n.BB0_480:\n\tadd\t128, r0, r3\n\tadd\t64, r0, r4\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_482\n.BB0_481:\n\tadd\t1, r5, r5\n\tsub.s!\tstack-[16], r5, r1\n\tadd\tr11, r0, r6\n\tjump.ge\t@.BB0_110\n.BB0_482:\n\tsub.s\tstack-[17], r6, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\t32, r3, r3\n\tld.1\tr3, r7\n\tld.1.inc\tr7, r7, r8\n\tand\t@CPI0_6[0], r7, r7\n\tst.1.inc\tr6, r7, r9\n\tld.1\tr8, r7\n\tst.1\tr9, r4\n\tadd\t64, r6, r9\n\tld.1\tr7, r8\n\tst.1\tr9, r8\n\tadd\t96, r6, r9\n\tshl.s\t5, r8, r10\n\tadd\tr10, r9, r11\n\tsub!\tr8, r0, r10\n\tjump.eq\t@.BB0_481\n\tadd\tr0, r0, r10\n\tjump\t@.BB0_485\n.BB0_484:\n\tadd\t31, r12, r1\n\tsub.s\t32, r0, r13\n\tand\tr1, r13, r1\n\tadd\tr12, r11, r12\n\tst.1\tr12, r0\n\tadd\tr1, r11, r11\n\tadd\t1, r10, r10\n\tsub!\tr10, r8, r1\n\tjump.ge\t@.BB0_481\n.BB0_485:\n\tsub\tr11, r6, r12\n\tsub.s\t96, r12, r12\n\tst.1.inc\tr9, r12, r9\n\tadd\t32, r7, r7\n\tld.1\tr7, r12\n\tld.1.inc\tr12, r12, r13\n\tst.1.inc\tr11, r12, r11\n\tsub!\tr12, r0, r14\n\tjump.eq\t@.BB0_484\n\tadd\tr0, r0, r14\n.BB0_487:\n\tadd\tr14, r11, r15\n\tadd\tr13, r14, r1\n\tld.1\tr1, r1\n\tst.1\tr15, r1\n\tadd\t32, r14, r14\n\tsub!\tr14, r12, r1\n\tjump.lt\t@.BB0_487\n\tjump\t@.BB0_484\n.BB0_488:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[16], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_491\n.BB0_490:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_60\n.BB0_491:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_490\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tr5, r0, stack-[17]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_490\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_497\n\tadd\tr0, r0, r6\n.BB0_496:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_496\n.BB0_497:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_560\n.BB0_500:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_503\n.BB0_502:\n\tsub.s!\t3, r3, r1\n\tadd\t1, r3, r3\n\tjump.ge\t@.BB0_148\n.BB0_503:\n\tshl.s\t5, r3, r1\n\tadd\tstack-[17], r1, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_502\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tr3, r0, stack-[16]\n\tadd\tstack-[14], r0, r3\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_502\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_509\n\tadd\tr0, r0, r6\n.BB0_508:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_508\n.BB0_509:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_560\n.BB0_512:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_515\n.BB0_514:\n\tsub.s!\t3, r3, r1\n\tadd\t1, r3, r3\n\tjump.ge\t@.BB0_155\n.BB0_515:\n\tshl.s\t5, r3, r1\n\tadd\tstack-[17], r1, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_514\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tr3, r0, stack-[16]\n\tadd\tstack-[14], r0, r3\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_514\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_521\n\tadd\tr0, r0, r6\n.BB0_520:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_520\n.BB0_521:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_560\n.BB0_524:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r3\n\tjump\t@.BB0_527\n.BB0_526:\n\tsub.s!\t3, r3, r1\n\tadd\t1, r3, r3\n\tjump.ge\t@.BB0_98\n.BB0_527:\n\tshl.s\t5, r3, r1\n\tadd\tstack-[17], r1, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_526\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tr3, r0, stack-[16]\n\tadd\tstack-[14], r0, r3\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_526\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_533\n\tadd\tr0, r0, r6\n.BB0_532:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_532\n.BB0_533:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_560\n.BB0_536:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[16], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_539\n.BB0_538:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_178\n.BB0_539:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_538\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tr5, r0, stack-[17]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_538\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_545\n\tadd\tr0, r0, r6\n.BB0_544:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_544\n.BB0_545:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tjump\t@.BB0_560\n.BB0_548:\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[16]\n\tsub.s!\t@CPI0_49[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[16], r0, r3\n\tadd\t128, r3, r1\n\tst.1\t64, r1\n\tadd\t96, r3, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r3, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r3, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr3, r1\n\tadd\t32777, r0, stack-[15]\n\tadd\t1, r0, stack-[14]\n\tadd\tr0, r0, r5\n\tjump\t@.BB0_551\n.BB0_550:\n\tsub.s!\t3, r5, r1\n\tadd\t1, r5, r5\n\tjump.ge\t@.BB0_214\n.BB0_551:\n\tshl.s\t5, r5, r1\n\tadd\tr1, r3, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB0_550\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_58[0], r1, r1\n\tadd\tstack-[15], r0, r2\n\tadd\tstack-[14], r0, r3\n\tadd\tr5, r0, stack-[17]\n\tadd\tr0, r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r5\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tadd\tstack-[16], r0, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_550\n\tld.1\t64, r4\n\tsub.s!\t@CPI0_59[0], r4, r1\n\tjump.gt\t@.BB0_859\n\tadd\t96, r4, r1\n\tst.1\t64, r1\n\tadd\t64, r4, r1\n\tadd\t@CPI0_60[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r4, r3\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t38, r0, r1\n\tst.1\tr4, r1\n\tld.1\t64, r1\n\tadd\t32, r1, r2\n\tadd\t@CPI0_62[0], r0, r5\n\tst.1\tr2, r5\n\tadd\t36, r1, r5\n\tadd\tstack-[13], r0, r6\n\tst.1\tr5, r6\n\tld.1\tr4, r4\n\tadd\t68, r1, r5\n\tst.1\tr5, r4\n\tadd\t100, r1, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_557\n\tadd\tr0, r0, r6\n.BB0_556:\n\tadd\tr6, r5, r7\n\tadd\tr6, r3, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_556\n.BB0_557:\n\tadd\tr4, r5, r3\n\tst.1\tr3, r0\n\tadd\t31, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r3\n\tadd\t68, r3, r5\n\tst.1\tr1, r5\n\tadd\t131, r3, r3\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r3\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n.BB0_560:\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr1, r2, r1\n\tadd\t@CPI0_63[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_561:\n\tld.1\t64, r10\n\tadd\t@CPI0_105[0], r0, r1\n\tst.1.inc\tr10, r1, r4\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tadd\tr4, r0, stack-[16]\n\tjump.ne\t@.BB0_563\n\tadd\tstack[@returndatasize], r0, r3\n\tsub.s!\t64, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tjump\t@.BB0_569\n.BB0_563:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r10, r4\n\tadd.lt\tr10, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\tr10, r0, stack-[15]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[15], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t64, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t64, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_566\n\tadd\tr0, r0, r7\n.BB0_565:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_565\n.BB0_566:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_568\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr10, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_568:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_579\n.BB0_569:\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tr10, r0, r5\n\tadd\tr2, r10, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t64, r3, r2\n\tjump.lt\t@.BB0_344\n\tld.1\tr5, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[16], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tadd\t36, r0, r4\n\tsload\tr4, r5\n\tand\t@CPI0_11[0], r5, r5\n\tor\tr5, r3, r3\n\tsstore\tr4, r3\n\tadd\t35, r0, r3\n\tsload\tr3, r4\n\tand\t@CPI0_11[0], r4, r4\n\tor\tr4, r2, r2\n\tsstore\tr3, r2\n\tsub.s!\t@CPI0_101[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t36, r1, r2\n\tadd\t@CPI0_106[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[17], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_103[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_842\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_858\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_843\n.BB0_578:\n\tjump\t@.BB0_164\n.BB0_579:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_582\n\tadd\tr0, r0, r6\n.BB0_581:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_581\n.BB0_582:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_584:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_587\n\tadd\tr0, r0, r6\n.BB0_586:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_586\n.BB0_587:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_589:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_592\n\tadd\tr0, r0, r6\n.BB0_591:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_591\n.BB0_592:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_594:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_597\n\tadd\tr0, r0, r6\n.BB0_596:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_596\n.BB0_597:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_599:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_602\n\tadd\tr0, r0, r6\n.BB0_601:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_601\n.BB0_602:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_604:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_607\n\tadd\tr0, r0, r6\n.BB0_606:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_606\n.BB0_607:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_609:\n\tjump\t@.BB0_171\n.BB0_610:\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tadd\tstack-[13], r0, r4\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_75[0], r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_613\n\tadd\tr0, r0, r7\n.BB0_612:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_612\n.BB0_613:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_615\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_615:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_848\n.BB0_616:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r1\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_344\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_885\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tr1, r0, stack-[17]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r3\n\tadd\t68, r3, r1\n\tadd\t96, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_73[0], r0, r1\n\tst.1\tr3, r1\n\tadd\t4, r3, r2\n\tadd\tstack-[15], r0, r1\n\tadd\tr2, r0, stack-[10]\n\tst.1\tr2, r1\n\tadd\t36, r3, r1\n\tst.1\tr1, r0\n\tadd\tstack-[12], r0, r1\n\tld.1\tr1, r1\n\tadd\t100, r3, r2\n\tst.1\tr2, r1\n\tadd\tr3, r0, stack-[13]\n\tadd\t132, r3, r2\n\tsub!\tr1, r0, r3\n\tadd\tstack-[11], r0, r6\n\tjump.eq\t@.BB0_628\n\tadd\tr0, r0, r3\n.BB0_627:\n\tadd\tr3, r2, r4\n\tadd\tr3, r6, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r4\n\tjump.lt\t@.BB0_627\n.BB0_628:\n\tadd\tr1, r2, r2\n\tst.1\tr2, r0\n\tcontext.gas_left\tr2\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t4, r3, r3\n\tjump.eq\t@.BB0_630\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t132, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[17], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_910\n.BB0_630:\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[16], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr4, r3\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_915\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_921\n.BB0_633:\n\tjump\t@.BB0_108\n.BB0_634:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_637\n\tadd\tr0, r0, r7\n.BB0_636:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_636\n.BB0_637:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_639\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_639:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_860\n.BB0_640:\n\tadd\t31, r4, r2\n\tand\t224, r2, r2\n\tadd\tstack-[17], r2, r2\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r2\n\tsub.s!\t96, r3, r4\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tadd\t96, r2, r4\n\tst.1\t64, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[13], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tst.1\tr4, r5\n\tadd\tstack-[17], r0, r5\n\tadd\t64, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tadd\t64, r2, r6\n\tst.1\tr6, r5\n\tadd\tstack-[15], r0, r5\n\tsload\tr5, r8\n\tld.1\t64, r9\n\tadd\t@CPI0_76[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\t160, r0, r7\n\tst.1\tr5, r7\n\tadd\tstack-[11], r0, r5\n\tld.1\tr5, r5\n\tadd\t164, r9, r7\n\tst.1\tr7, r5\n\tadd\tr9, r0, stack-[17]\n\tadd\t196, r9, r7\n\tand\t@CPI0_6[0], r8, stack-[13]\n\tsub!\tr5, r0, r8\n\tadd\tstack-[10], r0, r11\n\tjump.eq\t@.BB0_649\n\tadd\tr0, r0, r8\n.BB0_648:\n\tadd\tr8, r7, r9\n\tadd\tr8, r11, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r5, r9\n\tjump.lt\t@.BB0_648\n.BB0_649:\n\tadd\tr5, r7, r7\n\tst.1\tr7, r0\n\tld.1\tr2, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tstack-[17], r0, r8\n\tadd\t36, r8, r7\n\tst.1\tr7, r2\n\tld.1\tr4, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\t68, r8, r4\n\tst.1\tr4, r2\n\tld.1\tr6, r2\n\tadd\t132, r8, r4\n\tadd\tstack-[13], r0, r6\n\tst.1\tr4, r6\n\tadd\t100, r8, r4\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\tr4, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_651\n\tadd\t31, r5, r1\n\tand\tstack-[16], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_895\n.BB0_651:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_654\n\tadd\tr0, r0, r5\n.BB0_653:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_653\n.BB0_654:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_656\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[17], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_656:\n\tadd\t31, r3, r1\n\tand\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[12], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_78[0], r0, r1\n\tsub.s!\t32, r3, r2\n\tadd\tr0, r0, r2\n\tadd.lt\tr1, r0, r2\n\tsub!\tr0, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_78[0], r0, r4\n\tadd.ne\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_47[0], r2, r1\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[17], r3, r1\n\tadd\tstack-[17], r2, r2\n\tsub\tr1, r2, r3\n\tadd\t@CPI0_78[0], r0, r4\n\tsub.s!\t288, r3, r5\n\tadd\tr0, r0, r5\n\tadd.lt\tr4, r0, r5\n\tand\t@CPI0_78[0], r3, r3\n\tsub!\tr3, r0, r6\n\tadd.le\tr0, r0, r4\n\tsub.s!\t@CPI0_78[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[12], r0, r3\n\tsub.s!\t@CPI0_79[0], r3, r3\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[12], r0, r3\n\tadd\t288, r3, r3\n\tst.1\t64, r3\n\tld.1.inc\tr2, r4, r3\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[12], r0, r5\n\tst.1.inc\tr5, r4, r4\n\tld.1\tr3, r3\n\tst.1\tr4, r3\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_47[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tadd\tr3, r2, r3\n\tadd\t31, r3, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tand\t@CPI0_78[0], r1, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr3, r3, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tadd\t31, r3, r5\n\tand\tstack-[16], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[16], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_47[0], r6, r8\n\tjump.gt\t@.BB0_859\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r6\n\tst.1.inc\tr5, r3, r6\n\tadd\tr3, r4, r7\n\tsub!\tr7, r1, r7\n\tjump.gt\t@.BB0_344\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_672\n\tadd\tr0, r0, r7\n.BB0_671:\n\tadd\tr7, r6, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB0_671\n.BB0_672:\n\tadd\tr6, r3, r3\n\tst.1\tr3, r0\n\tadd\tstack-[12], r0, r3\n\tadd\t64, r3, r3\n\tst.1\tr3, r5\n\tadd\t96, r2, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_47[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tadd\tr3, r2, r3\n\tadd\t31, r3, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tand\t@CPI0_78[0], r1, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr3, r3, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tadd\t31, r3, r5\n\tand\tstack-[16], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[16], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_47[0], r6, r8\n\tjump.gt\t@.BB0_859\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r6\n\tst.1.inc\tr5, r3, r6\n\tadd\tr3, r4, r7\n\tsub!\tr7, r1, r7\n\tjump.gt\t@.BB0_344\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_681\n\tadd\tr0, r0, r7\n.BB0_680:\n\tadd\tr7, r6, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB0_680\n.BB0_681:\n\tadd\tr6, r3, r3\n\tst.1\tr3, r0\n\tadd\tstack-[12], r0, r6\n\tadd\t96, r6, r3\n\tst.1\tr3, r5\n\tadd\t128, r2, r3\n\tld.1\tr3, r3\n\tadd\t128, r6, r4\n\tst.1\tr4, r3\n\tadd\t160, r2, r3\n\tld.1\tr3, r3\n\tadd\t160, r6, r4\n\tst.1\tr4, r3\n\tadd\t192, r6, r3\n\tadd\t192, r2, r4\n\tld.1\tr4, r4\n\tst.1\tr3, r4\n\tadd\t224, r2, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_47[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tadd\tr3, r2, r3\n\tadd\t31, r3, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tand\t@CPI0_78[0], r1, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr3, r3, r4\n\tsub.s!\t@CPI0_47[0], r3, r5\n\tjump.gt\t@.BB0_859\n\tadd\t31, r3, r5\n\tand\tstack-[16], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[16], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_47[0], r6, r8\n\tjump.gt\t@.BB0_859\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r6\n\tst.1.inc\tr5, r3, r6\n\tadd\tr3, r4, r7\n\tsub!\tr7, r1, r7\n\tjump.gt\t@.BB0_344\n\tsub!\tr3, r0, r7\n\tjump.eq\t@.BB0_690\n\tadd\tr0, r0, r7\n.BB0_689:\n\tadd\tr7, r6, r8\n\tadd\tr7, r4, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r3, r8\n\tjump.lt\t@.BB0_689\n.BB0_690:\n\tadd\tr6, r3, r3\n\tst.1\tr3, r0\n\tadd\tstack-[12], r0, r3\n\tadd\t224, r3, r3\n\tst.1\tr3, r5\n\tadd\t256, r2, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_47[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tadd\tr3, r2, r2\n\tadd\t31, r2, r3\n\tadd\t@CPI0_78[0], r0, r4\n\tsub!\tr3, r1, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_78[0], r3, r3\n\tand\t@CPI0_78[0], r1, r6\n\tsub!\tr3, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr3, r6, r3\n\tsub.s!\t@CPI0_78[0], r3, r3\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r3\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr2, r2, r3\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tadd\t31, r2, r4\n\tand\tstack-[16], r4, r4\n\tadd\t63, r4, r4\n\tand\tstack-[16], r4, r5\n\tld.1\t64, r4\n\tadd\tr4, r5, r5\n\tsub!\tr5, r4, r6\n\tadd\t0, r0, r6\n\tadd.lt\t1, r0, r6\n\tsub.s!\t@CPI0_47[0], r5, r7\n\tjump.gt\t@.BB0_859\n\tand!\t1, r6, r6\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r5\n\tst.1.inc\tr4, r2, r5\n\tadd\tr2, r3, r6\n\tsub!\tr6, r1, r1\n\tjump.gt\t@.BB0_344\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_699\n\tadd\tr0, r0, r1\n.BB0_698:\n\tadd\tr1, r5, r6\n\tadd\tr1, r3, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r6\n\tjump.lt\t@.BB0_698\n.BB0_699:\n\tadd\tr5, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[12], r0, r1\n\tadd\t256, r1, r1\n\tst.1\tr1, r4\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_80[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t4, r4, r1\n\tadd\tstack-[13], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_944\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t@CPI0_55[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t1, r0, r1\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_79[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t288, r1, r2\n\tst.1\t64, r2\n\tadd\t256, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tst.1\tr2, r3\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t160, r1, r2\n\tst.1\tr2, r0\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_707\n\tadd\tstack-[12], r0, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_949\n.BB0_707:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_708:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_711\n\tadd\tr0, r0, r7\n.BB0_710:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_710\n.BB0_711:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_713\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_713:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_865\n.BB0_714:\n\tadd\t31, r4, r2\n\tand\t224, r2, r2\n\tadd\tstack-[17], r2, r2\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r2\n\tsub.s!\t96, r3, r4\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tadd\t96, r2, r4\n\tst.1\t64, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[14], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tst.1\tr4, r5\n\tadd\tstack-[17], r0, r5\n\tadd\t64, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tadd\t64, r2, r6\n\tst.1\tr6, r5\n\tadd\tstack-[15], r0, r5\n\tsload\tr5, r7\n\tld.1\t64, r9\n\tadd\t@CPI0_76[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\t160, r0, r8\n\tst.1\tr5, r8\n\tadd\tstack-[11], r0, r5\n\tld.1\tr5, r5\n\tadd\t164, r9, r8\n\tst.1\tr8, r5\n\tadd\tr9, r0, stack-[17]\n\tadd\t196, r9, r8\n\tand\t@CPI0_6[0], r7, r7\n\tsub!\tr5, r0, r9\n\tadd\tstack-[10], r0, r12\n\tjump.eq\t@.BB0_723\n\tadd\tr0, r0, r9\n.BB0_722:\n\tadd\tr9, r8, r10\n\tadd\tr9, r12, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r5, r10\n\tjump.lt\t@.BB0_722\n.BB0_723:\n\tadd\tr5, r8, r8\n\tst.1\tr8, r0\n\tld.1\tr2, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tstack-[17], r0, r9\n\tadd\t36, r9, r8\n\tst.1\tr8, r2\n\tld.1\tr4, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\t68, r9, r4\n\tst.1\tr4, r2\n\tld.1\tr6, r2\n\tadd\t132, r9, r4\n\tst.1\tr4, r7\n\tadd\t100, r9, r4\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\tr4, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_725\n\tadd\t31, r5, r1\n\tand\tstack-[16], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_900\n.BB0_725:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_728\n\tadd\tr0, r0, r5\n.BB0_727:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_727\n.BB0_728:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_730\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[17], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_730:\n\tadd\t31, r3, r1\n\tand\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_78[0], r0, r1\n\tsub.s!\t32, r3, r2\n\tadd\tr0, r0, r2\n\tadd.lt\tr1, r0, r2\n\tsub!\tr0, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_78[0], r0, r4\n\tadd.ne\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_47[0], r2, r1\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[17], r3, r1\n\tadd\tstack-[17], r2, r2\n\tsub\tr1, r2, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub.s!\t288, r4, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_79[0], r4, r4\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r4\n\tadd\t288, r4, r4\n\tst.1\t64, r4\n\tld.1.inc\tr2, r5, r4\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[14], r0, r6\n\tst.1.inc\tr6, r5, r5\n\tld.1\tr4, r4\n\tadd\tr5, r0, stack-[17]\n\tst.1\tr5, r4\n\tadd\t64, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_746\n\tadd\tr0, r0, r8\n.BB0_745:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_745\n.BB0_746:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r4\n\tadd\t64, r4, r4\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r6\n\tadd\t96, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_755\n\tadd\tr0, r0, r8\n.BB0_754:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_754\n.BB0_755:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r5\n\tadd\t96, r5, r4\n\tadd\tr4, r0, stack-[6]\n\tst.1\tr4, r6\n\tadd\t128, r2, r4\n\tld.1\tr4, r4\n\tadd\t128, r5, r6\n\tadd\tr6, r0, stack-[10]\n\tst.1\tr6, r4\n\tadd\t160, r2, r4\n\tld.1\tr4, r4\n\tadd\t160, r5, r6\n\tadd\tr6, r0, stack-[7]\n\tst.1\tr6, r4\n\tadd\t192, r5, r5\n\tadd\t192, r2, r4\n\tld.1\tr4, r4\n\tadd\tr5, r0, stack-[8]\n\tst.1\tr5, r4\n\tadd\t224, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_764\n\tadd\tr0, r0, r8\n.BB0_763:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_763\n.BB0_764:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r4\n\tadd\t224, r4, r4\n\tadd\tr4, r0, stack-[5]\n\tst.1\tr4, r6\n\tadd\t256, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r2\n\tadd\t31, r2, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tand\t@CPI0_78[0], r1, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr2, r2, r4\n\tsub.s!\t@CPI0_47[0], r2, r5\n\tjump.gt\t@.BB0_859\n\tadd\t31, r2, r5\n\tand\tstack-[16], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[16], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_47[0], r6, r8\n\tjump.gt\t@.BB0_859\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r6\n\tst.1.inc\tr5, r2, r6\n\tadd\tr2, r4, r7\n\tsub!\tr7, r1, r1\n\tjump.gt\t@.BB0_344\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_773\n\tadd\tr0, r0, r1\n.BB0_772:\n\tadd\tr1, r6, r7\n\tadd\tr1, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r7\n\tjump.lt\t@.BB0_772\n.BB0_773:\n\tadd\tr6, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tadd\t256, r1, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\tr1, r5\n\tadd\tstack-[9], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t@CPI0_74[0], r0, r1\n\tadd\tr4, r0, stack-[12]\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[9]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_955\n\tsub.s!\t96, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_961\n.BB0_775:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr1, r0, r4\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_778\n\tadd\tr0, r0, r7\n.BB0_777:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_777\n.BB0_778:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_780\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_780:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_870\n.BB0_781:\n\tadd\t31, r4, r2\n\tand\t224, r2, r2\n\tadd\tstack-[17], r2, r2\n\tsub.s!\t@CPI0_47[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r2\n\tsub.s!\t96, r3, r4\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r2, r4\n\tjump.gt\t@.BB0_859\n\tadd\t96, r2, r4\n\tst.1\t64, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr2, r4, r4\n\tadd\tstack-[14], r0, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tst.1\tr4, r5\n\tadd\tstack-[17], r0, r5\n\tadd\t64, r5, r5\n\tld.1\tr5, r5\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tadd\t64, r2, r6\n\tst.1\tr6, r5\n\tadd\tstack-[15], r0, r5\n\tsload\tr5, r7\n\tld.1\t64, r9\n\tadd\t@CPI0_76[0], r0, r5\n\tst.1\tr9, r5\n\tadd\t4, r9, r5\n\tadd\t160, r0, r8\n\tst.1\tr5, r8\n\tadd\tstack-[11], r0, r5\n\tld.1\tr5, r5\n\tadd\t164, r9, r8\n\tst.1\tr8, r5\n\tadd\tr9, r0, stack-[17]\n\tadd\t196, r9, r8\n\tand\t@CPI0_6[0], r7, r7\n\tsub!\tr5, r0, r9\n\tadd\tstack-[10], r0, r12\n\tjump.eq\t@.BB0_790\n\tadd\tr0, r0, r9\n.BB0_789:\n\tadd\tr9, r8, r10\n\tadd\tr9, r12, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r5, r10\n\tjump.lt\t@.BB0_789\n.BB0_790:\n\tadd\tr5, r8, r8\n\tst.1\tr8, r0\n\tld.1\tr2, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tstack-[17], r0, r9\n\tadd\t36, r9, r8\n\tst.1\tr8, r2\n\tld.1\tr4, r2\n\tand\t@CPI0_6[0], r2, r2\n\tadd\t68, r9, r4\n\tst.1\tr4, r2\n\tld.1\tr6, r2\n\tadd\t132, r9, r4\n\tst.1\tr4, r7\n\tadd\t100, r9, r4\n\tand\t@CPI0_6[0], r2, r2\n\tst.1\tr4, r2\n\tcontext.gas_left\tr2\n\tadd\tstack-[12], r0, r4\n\tsub.s!\t4, r4, r4\n\tjump.eq\t@.BB0_792\n\tadd\t31, r5, r1\n\tand\tstack-[16], r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tadd\t196, r1, r1\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_905\n.BB0_792:\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tadd\tstack-[17], r0, r8\n\tjump.eq\t@.BB0_795\n\tadd\tr0, r0, r5\n.BB0_794:\n\tshl.s\t5, r5, r6\n\tadd\tr8, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_794\n.BB0_795:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_797\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tadd\tstack-[17], r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_797:\n\tadd\t31, r3, r1\n\tand\t@CPI0_77[0], r1, r1\n\tadd\tstack-[17], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[14]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[14], r0, r1\n\tst.1\t64, r1\n\tadd\t@CPI0_78[0], r0, r1\n\tsub.s!\t32, r3, r2\n\tadd\tr0, r0, r2\n\tadd.lt\tr1, r0, r2\n\tsub!\tr0, r0, r4\n\tadd.le\tr0, r0, r1\n\tsub.s!\t@CPI0_78[0], r0, r4\n\tadd.ne\tr2, r0, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r2\n\tsub.s!\t@CPI0_47[0], r2, r1\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[17], r3, r1\n\tadd\tstack-[17], r2, r2\n\tsub\tr1, r2, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub.s!\t288, r4, r6\n\tadd\tr0, r0, r6\n\tadd.lt\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tsub!\tr4, r0, r7\n\tadd.le\tr0, r0, r5\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tadd\tstack-[14], r0, r4\n\tsub.s!\t@CPI0_79[0], r4, r4\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[14], r0, r4\n\tadd\t288, r4, r4\n\tst.1\t64, r4\n\tld.1.inc\tr2, r5, r4\n\tsub.s!\t@CPI0_6[0], r5, r6\n\tjump.gt\t@.BB0_344\n\tadd\tstack-[14], r0, r6\n\tst.1.inc\tr6, r5, r5\n\tld.1\tr4, r4\n\tadd\tr5, r0, stack-[17]\n\tst.1\tr5, r4\n\tadd\t64, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_813\n\tadd\tr0, r0, r8\n.BB0_812:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_812\n.BB0_813:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r4\n\tadd\t64, r4, r4\n\tadd\tr4, r0, stack-[11]\n\tst.1\tr4, r6\n\tadd\t96, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_822\n\tadd\tr0, r0, r8\n.BB0_821:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_821\n.BB0_822:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r5\n\tadd\t96, r5, r4\n\tadd\tr4, r0, stack-[5]\n\tst.1\tr4, r6\n\tadd\t128, r2, r4\n\tld.1\tr4, r4\n\tadd\t128, r5, r6\n\tadd\tr6, r0, stack-[10]\n\tst.1\tr6, r4\n\tadd\t160, r2, r4\n\tld.1\tr4, r4\n\tadd\t160, r5, r6\n\tadd\tr6, r0, stack-[6]\n\tst.1\tr6, r4\n\tadd\t192, r5, r5\n\tadd\t192, r2, r4\n\tld.1\tr4, r4\n\tadd\tr5, r0, stack-[7]\n\tst.1\tr5, r4\n\tadd\t224, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r4\n\tadd\t31, r4, r5\n\tadd\t@CPI0_78[0], r0, r6\n\tsub!\tr5, r1, r7\n\tadd\tr0, r0, r7\n\tadd.ge\tr6, r0, r7\n\tand\t@CPI0_78[0], r5, r5\n\tand\t@CPI0_78[0], r1, r8\n\tsub!\tr5, r8, r9\n\tadd.ge\tr0, r0, r6\n\txor\tr5, r8, r5\n\tsub.s!\t@CPI0_78[0], r5, r5\n\tadd.ne\tr7, r0, r6\n\tsub!\tr6, r0, r5\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr4, r4, r5\n\tsub.s!\t@CPI0_47[0], r4, r6\n\tjump.gt\t@.BB0_859\n\tadd\t31, r4, r6\n\tand\tstack-[16], r6, r6\n\tadd\t63, r6, r6\n\tand\tstack-[16], r6, r7\n\tld.1\t64, r6\n\tadd\tr6, r7, r7\n\tsub!\tr7, r6, r8\n\tadd\t0, r0, r8\n\tadd.lt\t1, r0, r8\n\tsub.s!\t@CPI0_47[0], r7, r9\n\tjump.gt\t@.BB0_859\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r7\n\tst.1.inc\tr6, r4, r7\n\tadd\tr4, r5, r8\n\tsub!\tr8, r1, r8\n\tjump.gt\t@.BB0_344\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB0_831\n\tadd\tr0, r0, r8\n.BB0_830:\n\tadd\tr8, r7, r9\n\tadd\tr8, r5, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB0_830\n.BB0_831:\n\tadd\tr7, r4, r4\n\tst.1\tr4, r0\n\tadd\tstack-[14], r0, r4\n\tadd\t224, r4, r4\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr4, r6\n\tadd\t256, r2, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_47[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tadd\tr4, r2, r2\n\tadd\t31, r2, r4\n\tadd\t@CPI0_78[0], r0, r5\n\tsub!\tr4, r1, r6\n\tadd\tr0, r0, r6\n\tadd.ge\tr5, r0, r6\n\tand\t@CPI0_78[0], r4, r4\n\tand\t@CPI0_78[0], r1, r7\n\tsub!\tr4, r7, r8\n\tadd.ge\tr0, r0, r5\n\txor\tr4, r7, r4\n\tsub.s!\t@CPI0_78[0], r4, r4\n\tadd.ne\tr6, r0, r5\n\tsub!\tr5, r0, r4\n\tjump.ne\t@.BB0_344\n\tld.1.inc\tr2, r2, r4\n\tsub.s!\t@CPI0_47[0], r2, r5\n\tjump.gt\t@.BB0_859\n\tadd\t31, r2, r5\n\tand\tstack-[16], r5, r5\n\tadd\t63, r5, r5\n\tand\tstack-[16], r5, r6\n\tld.1\t64, r5\n\tadd\tr5, r6, r6\n\tsub!\tr6, r5, r7\n\tadd\t0, r0, r7\n\tadd.lt\t1, r0, r7\n\tsub.s!\t@CPI0_47[0], r6, r8\n\tjump.gt\t@.BB0_859\n\tand!\t1, r7, r7\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r6\n\tst.1.inc\tr5, r2, r6\n\tadd\tr2, r4, r7\n\tsub!\tr7, r1, r1\n\tjump.gt\t@.BB0_344\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB0_840\n\tadd\tr0, r0, r1\n.BB0_839:\n\tadd\tr1, r6, r7\n\tadd\tr1, r4, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r1, r1\n\tsub!\tr1, r2, r7\n\tjump.lt\t@.BB0_839\n.BB0_840:\n\tadd\tr6, r2, r1\n\tst.1\tr1, r0\n\tadd\tstack-[14], r0, r1\n\tadd\t256, r1, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\tr1, r5\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r4\n\tadd\t@CPI0_74[0], r0, r1\n\tadd\tr4, r0, stack-[12]\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[2]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_982\n\tsub.s!\t96, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tjump\t@.BB0_988\n.BB0_842:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_843:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_846\n\tadd\tr0, r0, r6\n.BB0_845:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_845\n.BB0_846:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_453\n\tjump\t@.BB0_452\n.BB0_848:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_851\n\tadd\tr0, r0, r6\n.BB0_850:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_850\n.BB0_851:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_853:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_856\n\tadd\tr0, r0, r6\n.BB0_855:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_855\n.BB0_856:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_858:\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t37, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_11[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_101[0], r1, r2\n\tjump.le\t@.BB0_875\n.BB0_859:\n\tadd\t@CPI0_82[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_860:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_863\n\tadd\tr0, r0, r6\n.BB0_862:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_862\n.BB0_863:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_865:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_868\n\tadd\tr0, r0, r6\n.BB0_867:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_867\n.BB0_868:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_870:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_873\n\tadd\tr0, r0, r6\n.BB0_872:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_872\n.BB0_873:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_875:\n\tadd\t36, r1, r2\n\tadd\t@CPI0_107[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tcontext.gas_left\tr3\n\tadd\tstack-[17], r0, r4\n\tst.1\tr2, r4\n\tadd\t@CPI0_103[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r1, r2\n\tst.1\tr2, r0\n\tadd\t4, r1, r2\n\tst.1\tr2, r0\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr1, r2, r1\n\tor\t@CPI0_104[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_878\n\tld\tr1, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_884\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_879\n.BB0_878:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_879:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_882\n\tadd\tr0, r0, r6\n.BB0_881:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_881\n.BB0_882:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_453\n\tjump\t@.BB0_452\n.BB0_884:\n\tand\t@CPI0_6[0], r1, r1\n\tadd\t38, r0, r2\n\tsload\tr2, r3\n\tand\t@CPI0_11[0], r3, r3\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_885:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_888\n\tadd\tr0, r0, r6\n.BB0_887:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_887\n.BB0_888:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_890:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_893\n\tadd\tr0, r0, r6\n.BB0_892:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_892\n.BB0_893:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_895:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_898\n\tadd\tr0, r0, r6\n.BB0_897:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_897\n.BB0_898:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_900:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_903\n\tadd\tr0, r0, r6\n.BB0_902:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_902\n.BB0_903:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_905:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_908\n\tadd\tr0, r0, r6\n.BB0_907:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_907\n.BB0_908:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_910:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_913\n\tadd\tr0, r0, r6\n.BB0_912:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_912\n.BB0_913:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_915:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[13], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_65[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_918\n\tadd\tr0, r0, r7\n.BB0_917:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_917\n.BB0_918:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_920\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_920:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_934\n.BB0_921:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r1\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_939\n.BB0_927:\n.BB0_1183:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_929:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_932\n\tadd\tr0, r0, r6\n.BB0_931:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_931\n.BB0_932:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_934:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_937\n\tadd\tr0, r0, r6\n.BB0_936:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_936\n.BB0_937:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_939:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_942\n\tadd\tr0, r0, r6\n.BB0_941:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_941\n.BB0_942:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_944:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_947\n\tadd\tr0, r0, r6\n.BB0_946:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_946\n.BB0_947:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_949:\n\tadd\t39, r0, r1\n\tadd\tr1, r0, stack-[12]\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t4, r4, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[10]\n\tshl.s\t192, r2, r1\n\tor\tstack-[10], r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1009\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_74[0], r0, r1\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1014\n\tsub.s!\t96, r3, r1\n\tadd.ge\t96, r0, r3\n\tjump\t@.BB0_1020\n.BB0_955:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[12], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_958\n\tadd\tr0, r0, r7\n.BB0_957:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[12], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_957\n.BB0_958:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_960\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_960:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1048\n.BB0_961:\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[9], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tst.1\tr2, r4\n\tadd\tstack-[12], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_344\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tld.1\tr1, r2\n\tld.1\t64, r7\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[13], r0, r4\n\tst.1\tr1, r4\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_6[0], r1, r4\n\tadd\t36, r7, r1\n\tst.1\tr1, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tadd\t68, r7, r5\n\tst.1\tr5, r4\n\tadd\tstack-[11], r0, r4\n\tld.1\tr4, r4\n\tadd\t100, r7, r5\n\tadd\t288, r0, r6\n\tst.1\tr5, r6\n\tadd\t324, r7, r5\n\tld.1.inc\tr4, r4, r6\n\tst.1\tr5, r4\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tr7, r0, stack-[17]\n\tadd\t356, r7, r5\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_971\n\tadd\tr0, r0, r7\n.BB0_970:\n\tadd\tr7, r5, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_970\n.BB0_971:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[16], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r1, r5\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[17], r0, r7\n\tadd\t132, r7, r7\n\tst.1\tr7, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_974\n\tadd\tr0, r0, r7\n.BB0_973:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_973\n.BB0_974:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[17], r0, r8\n\tadd\t164, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[7], r0, r6\n\tld.1\tr6, r6\n\tadd\t196, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[8], r0, r6\n\tld.1\tr6, r6\n\tadd\t228, r8, r7\n\tst.1\tr7, r6\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r1, r5\n\tadd\t260, r8, r6\n\tadd\tstack-[5], r0, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r5\n\tld.1.inc\tr7, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_977\n\tadd\tr0, r0, r7\n.BB0_976:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_976\n.BB0_977:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r6\n\tsub\tr6, r1, r1\n\tadd\tstack-[4], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[17], r0, r5\n\tadd\t292, r5, r5\n\tst.1\tr5, r1\n\tld.1.inc\tr4, r4, r5\n\tst.1.inc\tr6, r4, r1\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_980\n\tadd\tr0, r0, r6\n.BB0_979:\n\tadd\tr6, r1, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_979\n.BB0_980:\n\tadd\tr4, r1, r5\n\tst.1\tr5, r0\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r6\n\tjump.ne\t@.BB0_1053\n\tsub.s!\t32, r3, r1\n\tadd.ge\t32, r0, r3\n\tjump\t@.BB0_1059\n.BB0_982:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tadd\tstack-[12], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.lt\tr5, r0, r3\n\tshl.s\t64, r3, r3\n\tshl.s\t192, r1, r1\n\tor\tr1, r3, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_985\n\tadd\tr0, r0, r7\n.BB0_984:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[12], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_984\n.BB0_985:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_987\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_987:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1066\n.BB0_988:\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[12], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[2], r0, r4\n\tld.1\tr4, r4\n\tsub.s!\t@CPI0_6[0], r4, r5\n\tjump.gt\t@.BB0_344\n\tst.1\tr2, r4\n\tadd\tstack-[12], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.gt\t@.BB0_344\n\tadd\t64, r1, r4\n\tst.1\tr4, r2\n\tld.1\tr1, r2\n\tld.1\t64, r7\n\tadd\t@CPI0_91[0], r0, r1\n\tst.1\tr7, r1\n\tadd\t4, r7, r1\n\tadd\tstack-[13], r0, r4\n\tst.1\tr1, r4\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_6[0], r1, r4\n\tadd\t36, r7, r1\n\tst.1\tr1, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tadd\t68, r7, r5\n\tst.1\tr5, r4\n\tadd\tstack-[11], r0, r4\n\tld.1\tr4, r4\n\tadd\t100, r7, r5\n\tadd\t288, r0, r6\n\tadd\tr6, r0, stack-[2]\n\tst.1\tr5, r6\n\tadd\t324, r7, r5\n\tld.1.inc\tr4, r4, r6\n\tst.1\tr5, r4\n\tand\t@CPI0_6[0], r2, r2\n\tadd\tr7, r0, stack-[13]\n\tadd\t356, r7, r5\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_998\n\tadd\tr0, r0, r7\n.BB0_997:\n\tadd\tr7, r5, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_997\n.BB0_998:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[16], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r1, r5\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[13], r0, r7\n\tadd\t132, r7, r7\n\tst.1\tr7, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1001\n\tadd\tr0, r0, r7\n.BB0_1000:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_1000\n.BB0_1001:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[13], r0, r8\n\tadd\t164, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r6\n\tadd\t196, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[7], r0, r6\n\tld.1\tr6, r6\n\tadd\t228, r8, r7\n\tst.1\tr7, r6\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r1, r5\n\tadd\t260, r8, r6\n\tadd\tstack-[4], r0, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r5\n\tld.1.inc\tr7, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1004\n\tadd\tr0, r0, r7\n.BB0_1003:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_1003\n.BB0_1004:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r6\n\tsub\tr6, r1, r1\n\tadd\tstack-[3], r0, r4\n\tld.1\tr4, r4\n\tadd\tstack-[13], r0, r5\n\tadd\t292, r5, r5\n\tst.1\tr5, r1\n\tld.1.inc\tr4, r4, r5\n\tst.1.inc\tr6, r4, r1\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_1007\n\tadd\tr0, r0, r6\n.BB0_1006:\n\tadd\tr6, r1, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_1006\n.BB0_1007:\n\tadd\tr4, r1, r5\n\tst.1\tr5, r0\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r6\n\tjump.ne\t@.BB0_1071\n\tsub.s!\t32, r3, r1\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1077\n.BB0_1009:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1012\n\tadd\tr0, r0, r6\n.BB0_1011:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1011\n.BB0_1012:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1014:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tstack-[10], r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t96, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t96, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1017\n\tadd\tr0, r0, r7\n.BB0_1016:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1016\n.BB0_1017:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1019\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1019:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1082\n.BB0_1020:\n\tadd\t31, r3, r1\n\tand\t224, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[17], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[11], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tst.1\tr2, r3\n\tadd\tstack-[17], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_344\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tadd\tstack-[12], r0, r2\n\tsload\tr2, r2\n\tadd\tr2, r0, stack-[17]\n\tld.1\tr1, r1\n\tadd\t@CPI0_7[0], r0, r2\n\tst.2\t0, r2\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tr1, r0, stack-[12]\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[17], r0, r3\n\tand\t@CPI0_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r2\n\tadd\t64, r0, r1\n\tadd\tr2, r0, stack-[11]\n\tst.1\tr2, r1\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\t68, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[17]\n\tadd\t100, r4, r2\n\tshl.s\t5, r1, r4\n\tadd\tr4, r2, r6\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_1043\n\tadd\t288, r0, r4\n\tadd\tr0, r0, r5\n.BB0_1030:\n\tsub.s\tstack-[17], r6, r7\n\tsub.s\t100, r7, r7\n\tst.1.inc\tr2, r7, r2\n\tadd\tstack-[13], r0, r7\n\tadd\t32, r7, r7\n\tadd\tr7, r0, stack-[13]\n\tld.1\tr7, r7\n\tld.1.inc\tr7, r8, r9\n\tand\t@CPI0_6[0], r8, r8\n\tst.1.inc\tr6, r8, r8\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t64, r7, r8\n\tld.1\tr8, r8\n\tadd\t64, r6, r9\n\tst.1\tr9, r4\n\tadd\t288, r6, r9\n\tld.1.inc\tr8, r8, r10\n\tst.1\tr9, r8\n\tadd\t320, r6, r9\n\tsub!\tr8, r0, r11\n\tjump.eq\t@.BB0_1033\n\tadd\tr0, r0, r11\n.BB0_1032:\n\tadd\tr11, r9, r12\n\tadd\tr10, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r8, r12\n\tjump.lt\t@.BB0_1032\n.BB0_1033:\n\tadd\tr8, r9, r10\n\tst.1\tr10, r0\n\tadd\t31, r8, r8\n\tand\tstack-[16], r8, r8\n\tadd\tr8, r9, r8\n\tadd\t96, r7, r9\n\tld.1\tr9, r9\n\tsub\tr8, r6, r10\n\tadd\t96, r6, r11\n\tst.1\tr11, r10\n\tld.1.inc\tr9, r9, r10\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr9, r0, r11\n\tjump.eq\t@.BB0_1036\n\tadd\tr0, r0, r11\n.BB0_1035:\n\tadd\tr11, r8, r12\n\tadd\tr10, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB0_1035\n.BB0_1036:\n\tadd\tr9, r8, r10\n\tst.1\tr10, r0\n\tadd\t128, r7, r10\n\tld.1\tr10, r10\n\tadd\t128, r6, r11\n\tst.1\tr11, r10\n\tadd\t160, r7, r10\n\tld.1\tr10, r10\n\tadd\t160, r6, r11\n\tst.1\tr11, r10\n\tadd\t192, r7, r10\n\tld.1\tr10, r10\n\tadd\t192, r6, r11\n\tst.1\tr11, r10\n\tadd\t31, r9, r9\n\tand\tstack-[16], r9, r9\n\tadd\tr9, r8, r8\n\tsub\tr8, r6, r9\n\tadd\t224, r6, r10\n\tadd\t224, r7, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r9\n\tld.1.inc\tr11, r9, r10\n\tst.1.inc\tr8, r9, r8\n\tsub!\tr9, r0, r11\n\tjump.eq\t@.BB0_1039\n\tadd\tr0, r0, r11\n.BB0_1038:\n\tadd\tr11, r8, r12\n\tadd\tr10, r11, r13\n\tld.1\tr13, r13\n\tst.1\tr12, r13\n\tadd\t32, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB0_1038\n.BB0_1039:\n\tadd\tr9, r8, r10\n\tst.1\tr10, r0\n\tadd\t31, r9, r9\n\tand\tstack-[16], r9, r9\n\tadd\tr9, r8, r9\n\tadd\t256, r7, r7\n\tld.1\tr7, r7\n\tsub\tr9, r6, r8\n\tadd\t256, r6, r6\n\tst.1\tr6, r8\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr9, r7, r6\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB0_1042\n\tadd\tr0, r0, r9\n.BB0_1041:\n\tadd\tr9, r6, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB0_1041\n.BB0_1042:\n\tadd\t31, r7, r8\n\tand\tstack-[16], r8, r8\n\tadd\tr7, r6, r7\n\tst.1\tr7, r0\n\tadd\tr8, r6, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r7\n\tjump.lt\t@.BB0_1030\n.BB0_1043:\n\tadd\tstack-[17], r0, r1\n\tadd\t36, r1, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr1\n\tadd\tstack-[12], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.eq\t@.BB0_1045\n\tadd\tstack-[17], r0, r5\n\tsub\tr6, r5, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tshl.s\t64, r4, r4\n\tsub.s!\t@CPI0_0[0], r2, r5\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r4, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\tr2, r1, r1\n\tadd\tstack-[12], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1087\n.BB0_1045:\n\tadd\tstack-[17], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[17], r0, r4\n\tst.1\t64, r4\n\tadd\tstack-[14], r0, r1\n\tsload\tr1, r2\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r1\n\tadd\t@CPI0_64[0], r0, r3\n\tst.1\tr4, r3\n\tand\t@CPI0_6[0], r1, r1\n\tadd\tstack-[11], r0, r3\n\tst.1\tr3, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_1092\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_1098\n.BB0_1048:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1051\n\tadd\tr0, r0, r6\n.BB0_1050:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1050\n.BB0_1051:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1053:\n\tadd\t31, r4, r3\n\tand\tstack-[16], r3, r3\n\tadd\tstack-[17], r0, r6\n\tsub\tr1, r6, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r6, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr6, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1056\n\tadd\tr0, r0, r7\n.BB0_1055:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1055\n.BB0_1056:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1058\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1058:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1104\n.BB0_1059:\n\tadd\t31, r3, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_93[0], r0, r2\n\tst.1\t0, r2\n\tst.1\t28, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_94[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r2\n\tld\tr1, r1\n\tadd\tstack-[4], r0, r3\n\tld.1\tr3, r5\n\tld.1.inc\tr5, r3, r4\n\tsub.s!\t65, r3, r6\n\tjump.ne\t@.BB0_1108\n\tadd\t64, r5, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_96[0], r3, r6\n\tjump.le\t@.BB0_1110\n\tadd\t@CPI0_100[0], r0, r1\n\tjump\t@.BB0_1109\n.BB0_1066:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1069\n\tadd\tr0, r0, r6\n.BB0_1068:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1068\n.BB0_1069:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1071:\n\tadd\t31, r4, r3\n\tand\tstack-[16], r3, r3\n\tadd\tstack-[13], r0, r6\n\tsub\tr1, r6, r1\n\tadd\tr1, r3, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r6, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr6, r0, r4\n\tshl.s\t64, r4, r4\n\tor\tr1, r4, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1074\n\tadd\tr0, r0, r7\n.BB0_1073:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[13], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1073\n.BB0_1074:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1076\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1076:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1118\n.BB0_1077:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[13], r1, r2\n\tsub!\tr2, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tadd\tr2, r0, stack-[12]\n\tsub.s!\t@CPI0_47[0], r2, r2\n\tjump.gt\t@.BB0_859\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_859\n\tadd\tstack-[12], r0, r1\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[8], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_74[0], r0, r1\n\tadd\tstack-[12], r0, r4\n\tst.1.inc\tr4, r1, r1\n\tadd\tr1, r0, stack-[13]\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_1123\n\tsub.s!\t96, r3, r1\n\tadd.ge\t96, r0, r3\n\tjump\t@.BB0_1129\n.BB0_1082:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1085\n\tadd\tr0, r0, r6\n.BB0_1084:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1084\n.BB0_1085:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1228\n\tjump\t@.BB0_1227\n.BB0_1087:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1090\n\tadd\tr0, r0, r6\n.BB0_1089:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1089\n.BB0_1090:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1092:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_1095\n\tadd\tr0, r0, r7\n.BB0_1094:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1094\n.BB0_1095:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1097\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1097:\n\tadd\tr3, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1153\n.BB0_1098:\n\tadd\t31, r4, r1\n\tand\t96, r1, r1\n\tadd\tstack-[17], r1, r1\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\t@CPI0_69[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1158\n\tjump\t@.BB0_927\n.BB0_1104:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1107\n\tadd\tr0, r0, r6\n.BB0_1106:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1106\n.BB0_1107:\n\tsub!\tr3, r0, r6\n\tjump.ne\t@.BB0_1227\n\tjump\t@.BB0_1228\n.BB0_1108:\n\tadd\t@CPI0_95[0], r0, r1\n.BB0_1109:\n\tst.1\tr2, r1\n\tadd\t4, r2, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_65[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1110:\n\tadd\t96, r5, r5\n\tld.1\tr5, r5\n\tld.1\tr4, r4\n\tadd\t96, r2, r6\n\tst.1\tr6, r3\n\tadd\t64, r2, r3\n\tst.1\tr3, r4\n\tshr.s\t248, r5, r3\n\tadd\t32, r2, r4\n\tst.1\tr4, r3\n\tst.1\tr2, r1\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_97[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1113\n\tadd\tr0, r0, r7\n.BB0_1112:\n\tshl.s\t5, r7, r8\n\tptr.add\tr1, r8, r9\n\tld\tr9, r9\n\tst.1\tr8, r9\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_1112\n.BB0_1113:\n\tsub!\tr6, r0, r7\n\tjump.eq\t@.BB0_1115\n\tshl.s\t3, r6, r6\n\tshl.s\t5, r5, r5\n\tld.1\tr5, r7\n\tshl\tr7, r6, r7\n\tshr\tr7, r6, r7\n\tptr.add\tr1, r5, r8\n\tld\tr8, r8\n\tsub\t256, r6, r6\n\tshr\tr8, r6, r8\n\tshl\tr8, r6, r6\n\tor\tr6, r7, r6\n\tst.1\tr5, r6\n.BB0_1115:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tld.1\t64, r5\n\tadd\tr5, r0, stack-[17]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1163\n\tld.1\t0, r1\n\tand!\t@CPI0_6[0], r1, stack-[16]\n\tjump.ne\t@.BB0_1169\n\tadd\t@CPI0_99[0], r0, r1\n\tadd\tstack-[17], r0, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tor\t@CPI0_75[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1118:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1121\n\tadd\tr0, r0, r6\n.BB0_1120:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1120\n.BB0_1121:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1123:\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[12], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t96, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t96, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1126\n\tadd\tr0, r0, r7\n.BB0_1125:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[12], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1125\n.BB0_1126:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1128\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[12], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1128:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1184\n.BB0_1129:\n\tadd\t31, r3, r1\n\tand\t224, r1, r1\n\tadd\tstack-[12], r1, r1\n\tsub.s!\t@CPI0_47[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB0_344\n\tsub.s!\t@CPI0_59[0], r1, r2\n\tjump.gt\t@.BB0_859\n\tadd\t96, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[12], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_344\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[13], r0, r3\n\tld.1\tr3, r3\n\tsub.s!\t@CPI0_6[0], r3, r4\n\tjump.gt\t@.BB0_344\n\tst.1\tr2, r3\n\tadd\tstack-[12], r0, r2\n\tadd\t64, r2, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_6[0], r2, r3\n\tjump.gt\t@.BB0_344\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[13]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[13], r0, r3\n\tand\t@CPI0_6[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_70[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tr1, r0, stack-[8]\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[13]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[12]\n\tshl.s\t192, r2, r1\n\tor\tstack-[12], r1, r1\n\tor\t@CPI0_65[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1189\n\tadd\tstack-[13], r0, r1\n\tsub.s!\t@CPI0_47[0], r1, r1\n\tjump.gt\t@.BB0_859\n\tadd\tstack-[13], r0, r7\n\tst.1\t64, r7\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_92[0], r0, r1\n\tst.1\tr7, r1\n\tadd\tstack-[9], r0, r1\n\tadd\tstack-[8], r0, r4\n\tst.1\tr4, r1\n\tadd\tstack-[14], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_6[0], r1, r4\n\tadd\t100, r7, r1\n\tst.1\tr1, r4\n\tadd\tstack-[17], r0, r4\n\tld.1\tr4, r4\n\tadd\t132, r7, r5\n\tst.1\tr5, r4\n\tadd\tstack-[11], r0, r4\n\tld.1\tr4, r4\n\tadd\t164, r7, r5\n\tadd\tstack-[2], r0, r6\n\tst.1\tr5, r6\n\tadd\t388, r7, r5\n\tld.1.inc\tr4, r4, r6\n\tst.1\tr5, r4\n\tadd\t420, r7, r5\n\tand\t@CPI0_6[0], r2, r2\n\tsub!\tr4, r0, r7\n\tjump.eq\t@.BB0_1142\n\tadd\tr0, r0, r7\n.BB0_1141:\n\tadd\tr7, r5, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_1141\n.BB0_1142:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[16], r4, r4\n\tadd\tr4, r5, r4\n\tsub\tr4, r1, r5\n\tadd\tstack-[5], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[13], r0, r7\n\tadd\t196, r7, r7\n\tst.1\tr7, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1145\n\tadd\tr0, r0, r7\n.BB0_1144:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_1144\n.BB0_1145:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\tstack-[10], r0, r6\n\tld.1\tr6, r6\n\tadd\tstack-[13], r0, r8\n\tadd\t228, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[6], r0, r6\n\tld.1\tr6, r6\n\tadd\t260, r8, r7\n\tst.1\tr7, r6\n\tadd\tstack-[7], r0, r6\n\tld.1\tr6, r6\n\tadd\t292, r8, r7\n\tst.1\tr7, r6\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r1, r5\n\tadd\t324, r8, r6\n\tadd\tstack-[4], r0, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r5\n\tld.1.inc\tr7, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1148\n\tadd\tr0, r0, r7\n.BB0_1147:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_1147\n.BB0_1148:\n\tadd\tr5, r4, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tstack-[16], r5, r5\n\tadd\tr5, r4, r4\n\tsub\tr4, r1, r1\n\tadd\tstack-[3], r0, r5\n\tld.1\tr5, r5\n\tadd\tstack-[13], r0, r6\n\tadd\t356, r6, r6\n\tst.1\tr6, r1\n\tld.1.inc\tr5, r1, r5\n\tst.1.inc\tr4, r1, r4\n\tsub!\tr1, r0, r6\n\tjump.eq\t@.BB0_1151\n\tadd\tr0, r0, r6\n.BB0_1150:\n\tadd\tr6, r4, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r1, r7\n\tjump.lt\t@.BB0_1150\n.BB0_1151:\n\tadd\tr1, r4, r5\n\tst.1\tr5, r0\n\tadd\tstack-[13], r0, r7\n\tadd\t68, r7, r5\n\tadd\t@CPI0_69[0], r0, r6\n\tst.1\tr5, r6\n\tadd\t36, r7, r5\n\tadd\tstack-[1], r0, r6\n\tst.1\tr5, r6\n\tcontext.gas_left\tr5\n\tsub.s!\t4, r2, r6\n\tjump.ne\t@.BB0_1194\n\tsub.s!\t32, r3, r1\n\tadd.ge\t32, r0, r3\n\tjump\t@.BB0_1200\n.BB0_1153:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1156\n\tadd\tr0, r0, r6\n.BB0_1155:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1155\n.BB0_1156:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1158:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1161\n\tadd\tr0, r0, r6\n.BB0_1160:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1160\n.BB0_1161:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1163:\n\tand\t31, r4, r2\n\tshr.s!\t5, r4, r3\n\tjump.eq\t@.BB0_1166\n\tadd\tr0, r0, r5\n.BB0_1165:\n\tshl.s\t5, r5, r6\n\tadd\tstack-[17], r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r3, r6\n\tjump.lt\t@.BB0_1165\n.BB0_1166:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_1168\n\tshl.s\t5, r3, r3\n\tptr.add\tr1, r3, r1\n\tadd\tstack-[17], r3, r3\n\tshl.s\t3, r2, r2\n\tld.1\tr3, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr3, r1\n.BB0_1168:\n\tadd\t@CPI0_0[0], r0, r1\n\tadd\tstack-[17], r0, r3\n\tsub.s!\t@CPI0_0[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r1\n\tshl.s\t96, r4, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1169:\n\tadd\tstack-[15], r0, r1\n\tsload\tr1, r2\n\tadd\t@CPI0_89[0], r0, r1\n\tadd\tstack-[17], r0, r4\n\tst.1\tr4, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_6[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_1176\n\tadd\t@CPI0_0[0], r0, r3\n\tadd\tstack-[17], r0, r5\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd\tr3, r0, r4\n\tadd.lt\tr5, r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tshl.s\t64, r4, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_75[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1173\n\tadd\tr0, r0, r7\n.BB0_1172:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[17], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1172\n.BB0_1173:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1175\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[17], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1175:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1212\n.BB0_1176:\n\tadd\t31, r3, r1\n\tand\t96, r1, r2\n\tadd\tstack-[17], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[17], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tsub.s!\t@CPI0_6[0], r1, r1\n\tjump.gt\t@.BB0_344\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t36, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_98[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[16], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1183\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1220\n\tadd\tr0, r0, r6\n.BB0_1219:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1219\n.BB0_1220:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1184:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1187\n\tadd\tr0, r0, r6\n.BB0_1186:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1186\n.BB0_1187:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1228\n\tjump\t@.BB0_1227\n.BB0_1189:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1192\n\tadd\tr0, r0, r6\n.BB0_1191:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1191\n.BB0_1192:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1194:\n\tsub.s\tstack-[13], r4, r3\n\tadd\t31, r1, r1\n\tand\tstack-[16], r1, r1\n\tadd\tr3, r1, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r5, r3\n\tor\tr3, r1, r1\n\tor\tstack-[12], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tsub.s!\t32, r4, r3\n\tadd\tr4, r0, r3\n\tadd.ge\t32, r0, r3\n\tand\t31, r3, r5\n\tshr.s!\t5, r3, r6\n\tjump.eq\t@.BB0_1197\n\tadd\tr0, r0, r7\n.BB0_1196:\n\tshl.s\t5, r7, r8\n\tadd\tstack-[13], r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_1196\n.BB0_1197:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_1199\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[13], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_1199:\n\tadd\tr4, r0, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1222\n.BB0_1200:\n\tadd\t31, r3, r1\n\tand\t96, r1, r2\n\tadd\tstack-[13], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_47[0], r1, r4\n\tjump.gt\t@.BB0_859\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_859\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_344\n\tadd\tstack-[13], r0, r1\n\tld.1\tr1, r1\n\tadd\tr1, r0, stack-[17]\n\tadd\t@CPI0_7[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_5[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_1211\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_344\n\tld.1\t64, r4\n\tadd\t@CPI0_66[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[17], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[17]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_67[0], r1, r1\n\tadd\t@CPI0_5[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_927\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_1209\n\tadd\tr0, r0, r6\n.BB0_1208:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1208\n.BB0_1209:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_50\n\tjump\t@.BB0_49\n.BB0_1211:\n\trevert\n.BB0_1212:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1215\n\tadd\tr0, r0, r6\n.BB0_1214:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1214\n.BB0_1215:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1228\n\tjump\t@.BB0_1227\n.BB0_1222:\n\tld.1\t64, r2\n\tand\t31, r4, r3\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_1225\n\tadd\tr0, r0, r6\n.BB0_1224:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_1224\n.BB0_1225:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_1228\n.BB0_1227:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r3, r3\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_1228:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r4, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\nabi_encode_array_address_dyn:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1\tr2, r3\n\tst.1\tr4, r3\n\tadd\t64, r1, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\t32, r2, r2\n\tld.1\tr2, r5\n\tand\t@CPI1_0[0], r5, r5\n\tst.1.inc\tr1, r5, r1\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tret\n.func_end1:\n\nabi_encode_array_string_dyn:\n.func_begin2:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r6\n\tjump\t@.BB2_2\n.BB2_5:\n\tadd\t31, r7, r8\n\tsub.s\t32, r0, r9\n\tand\tr8, r9, r8\n\tadd\tr7, r3, r7\n\tst.1\tr7, r0\n\tadd\tr8, r3, r3\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.ge\t@.BB2_6\n.BB2_2:\n\tsub\tr3, r1, r7\n\tsub.s\t64, r7, r7\n\tst.1.inc\tr5, r7, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r7\n\tld.1.inc\tr7, r7, r8\n\tst.1.inc\tr3, r7, r3\n\tsub!\tr7, r0, r9\n\tjump.eq\t@.BB2_5\n\tadd\tr0, r0, r9\n.BB2_4:\n\tadd\tr9, r3, r10\n\tadd\tr8, r9, r11\n\tld.1\tr11, r11\n\tst.1\tr10, r11\n\tadd\t32, r9, r9\n\tsub!\tr9, r7, r10\n\tjump.lt\t@.BB2_4\n\tjump\t@.BB2_5\n.BB2_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end2:\n\nabi_encode_array_struct_FuzzSelector_dyn:\n.func_begin3:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1\tr2, r4\n\tst.1\tr3, r4\n\tadd\t64, r1, r5\n\tshl.s\t5, r4, r3\n\tadd\tr5, r3, r3\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB3_6\n\tadd\t64, r0, r6\n\tadd\tr0, r0, r7\n\tjump\t@.BB3_2\n.BB3_5:\n\tadd\t1, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.ge\t@.BB3_6\n.BB3_2:\n\tsub\tr3, r1, r8\n\tsub.s\t64, r8, r8\n\tst.1.inc\tr5, r8, r5\n\tadd\t32, r2, r2\n\tld.1\tr2, r8\n\tld.1.inc\tr8, r8, r9\n\tand\t@CPI3_0[0], r8, r8\n\tst.1.inc\tr3, r8, r10\n\tld.1\tr9, r8\n\tst.1\tr10, r6\n\tadd\t64, r3, r10\n\tld.1\tr8, r9\n\tst.1\tr10, r9\n\tadd\t96, r3, r3\n\tsub!\tr9, r0, r10\n\tjump.eq\t@.BB3_5\n\tadd\tr0, r0, r10\n.BB3_4:\n\tadd\t32, r8, r8\n\tld.1\tr8, r11\n\tand\t@CPI3_1[0], r11, r11\n\tst.1.inc\tr3, r11, r3\n\tadd\t1, r10, r10\n\tsub!\tr10, r9, r11\n\tjump.lt\t@.BB3_4\n\tjump\t@.BB3_5\n.BB3_6:\n\tadd\tr3, r0, r1\n\tret\n.func_end3:\n\nfun_isZkSyncChain:\n.func_begin4:\n\tnop\tstack+=[4]\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tadd\t@CPI4_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsub.s!\tstack-[4], r1, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB4_5\n\tadd\t33, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r2\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB4_5\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\tr0, r0, r3\n\tjump.ne\t@.BB4_6\n.BB4_5:\n\tadd\tr3, r0, r1\n\tret\n.BB4_6:\n\tld.1\t64, r5\n\tsub.s!\t@CPI4_3[0], r5, r1\n\tjump.ge\t@.BB4_7\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tadd\t96, r5, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r5, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r5, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr5, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r6\n\tadd\tr5, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB4_9\n.BB4_12:\n\tsub.s!\t3, r6, r1\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB4_13\n.BB4_9:\n\tshl.s\t5, r6, r1\n\tadd\tr1, r5, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI4_4[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB4_12\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI4_1[0], r4, stack[@returndatasize]\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB4_12\n\tadd\tr3, r0, r1\n\tret\n.BB4_13:\n\tadd\tr0, r0, r3\n\tadd\tr3, r0, r1\n\tret\n.BB4_1:\n\trevert\n.BB4_7:\n\tadd\t@CPI4_6[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_7[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfinalize_allocation:\n.func_begin5:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI5_0[0], r1, r3\n\tjump.gt\t@.BB5_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB5_2\n\tst.1\t64, r1\n\tret\n.BB5_2:\n\tadd\t@CPI5_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nfun_isOnZkSyncChainId:\n.func_begin6:\n\tnop\tstack+=[1]\n\tadd\t32, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t@CPI6_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI6_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI6_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI6_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB6_1\n\tadd\t1, r0, r2\n\tld\tr1, r1\n\tsub.s!\tstack-[1], r1, r3\n\tjump.eq\t@.BB6_5\n\tadd\t33, r0, r3\n\tsload\tr3, r3\n\tsub!\tr1, r3, r3\n\tjump.eq\t@.BB6_5\n\tadd\t34, r0, r2\n\tsload\tr2, r2\n\tsub!\tr1, r2, r1\n\tadd\t0, r0, r2\n\tadd.eq\t1, r0, r2\n.BB6_5:\n\tand\t1, r2, r1\n\tret\n.BB6_1:\n\trevert\n.func_end6:\n\nfun_isOnZkSyncPrecompiles:\n.func_begin7:\n\tnop\tstack+=[4]\n\tld.1\t64, r5\n\tsub.s!\t@CPI7_0[0], r5, r1\n\tjump.gt\t@.BB7_1\n\tadd\t128, r5, r1\n\tst.1\t64, r1\n\tadd\t96, r5, r1\n\tadd\t8, r0, r2\n\tst.1\tr1, r2\n\tadd\t64, r5, r1\n\tadd\t5, r0, r2\n\tst.1\tr1, r2\n\tadd\t32, r5, r1\n\tadd\t4, r0, r2\n\tst.1\tr1, r2\n\tadd\t3, r0, r1\n\tst.1\tr5, r1\n\tadd\t32777, r0, stack-[1]\n\tadd\t1, r0, r3\n\tadd\tr0, r0, r6\n\tadd\tr5, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tjump\t@.BB7_3\n.BB7_6:\n\tsub.s!\t3, r6, r1\n\tadd\t1, r6, r6\n\tjump.ge\t@.BB7_7\n.BB7_3:\n\tshl.s\t5, r6, r1\n\tadd\tr1, r5, r1\n\tld.1\tr1, r2\n\tcontext.gas_left\tr1\n\tand\t@CPI7_1[0], r2, r4\n\tsub.s!\t4, r4, r2\n\tjump.eq\t@.BB7_6\n\tsub.s!\t@CPI7_2[0], r1, r2\n\tadd.ge\t@CPI7_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI7_3[0], r1, r1\n\tadd\tstack-[1], r0, r2\n\tadd\tr0, r0, r5\n\tadd\tr6, r0, stack-[4]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r6\n\tadd\tstack-[2], r0, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI7_2[0], r4, stack[@returndatasize]\n\tadd\tstack-[3], r0, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB7_6\n\tadd\tr3, r0, r1\n\tret\n.BB7_7:\n\tadd\tr0, r0, r3\n\tadd\tr3, r0, r1\n\tret\n.BB7_1:\n\tadd\t@CPI7_4[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI7_5[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__cxa_throw:\n.func_begin8:\n\trevert\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI6_1:\nCPI7_2:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 51735810803603326920093875405627034980936023444920712683823047157028839489536\nCPI0_2:\n\t.cell 904625697166532776746648320380374280103671755992598535832976423508200390656\nCPI0_3:\n\t.cell -166923669067369873766191994592930785159943346089370123761369690313261580288\nCPI0_4:\n\t.cell 2852213855235882636237227425792\nCPI0_5:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_6:\nCPI1_0:\nCPI3_0:\nCPI4_4:\nCPI7_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_7:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_8:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_9:\n\t.cell -26079055428631999755169999820041264995593315863804083392934812248473178472448\nCPI0_10:\n\t.cell 18446744073709551616\nCPI0_11:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_12:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_13:\n\t.cell 1725540767\nCPI0_14:\n\t.cell 2957397979\nCPI0_15:\n\t.cell 3651357472\nCPI0_16:\n\t.cell 3651357473\nCPI0_17:\n\t.cell 3792478065\nCPI0_18:\n\t.cell 4202047188\nCPI0_19:\n\t.cell 2957397980\nCPI0_20:\n\t.cell 3041954473\nCPI0_21:\n\t.cell 3124842406\nCPI0_22:\n\t.cell 2439649221\nCPI0_23:\n\t.cell 2439649222\nCPI0_24:\n\t.cell 2448165410\nCPI0_25:\n\t.cell 2650435679\nCPI0_26:\n\t.cell 1725540768\nCPI0_27:\n\t.cell 2233625729\nCPI0_28:\n\t.cell 534123561\nCPI0_29:\n\t.cell 1046363170\nCPI0_30:\n\t.cell 1046363171\nCPI0_31:\n\t.cell 1064470260\nCPI0_32:\n\t.cell 1169906350\nCPI0_33:\n\t.cell 534123562\nCPI0_34:\n\t.cell 719206528\nCPI0_35:\n\t.cell 327102041\nCPI0_36:\n\t.cell 327102042\nCPI0_37:\n\t.cell 335028620\nCPI0_38:\n\t.cell 517440284\nCPI0_39:\n\t.cell 139621531\nCPI0_40:\n\t.cell 177362148\nCPI0_41:\n\t.cell 2535301202817642044428229017600\nCPI0_42:\n\t.cell 38878206584692966203415385907871375197469080758325516314230789535345649042549\nCPI0_43:\n\t.cell 2535301200456458802993406410752\nCPI0_44:\n\t.cell 46361386726410499263322427381369506175992020241588171917386103515624534704128\nCPI0_45:\n\t.cell 46308022326495007027972728677917914892729792999299745830475596687180801507328\nCPI0_46:\n\t.cell 5387515053331158197795811229696\nCPI0_47:\nCPI5_0:\n\t.cell 18446744073709551615\nCPI0_48:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_49:\nCPI7_0:\n\t.cell 18446744073709551487\nCPI0_50:\n\t.cell -48719757687822547800745197551118351534541568878739321821808546113428889233771\nCPI0_51:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_52:\n\t.cell 18446744073709551423\nCPI0_53:\n\t.cell 6454973039698199198119942482240540643982028891330163610098731264865829167633\nCPI0_54:\nCPI3_1:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_55:\n\t.cell 18446744073709551551\nCPI0_56:\nCPI4_0:\nCPI6_0:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_57:\nCPI4_2:\nCPI6_2:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_58:\nCPI4_5:\nCPI7_3:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_59:\n\t.cell 18446744073709551519\nCPI0_60:\n\t.cell 55371796281815195168167723001542036422477424776400971004801198784948912259072\nCPI0_61:\n\t.cell 37731746783061185660350875849884670107245567124908624499486762246297581743648\nCPI0_62:\n\t.cell 29485693692093900896535320720837539044516270774257971310649688876405881831424\nCPI0_63:\n\t.cell 120209876281281145568259943\nCPI0_64:\n\t.cell 50942633119752846454219349998365661925608737367104304655302372697894809501696\nCPI0_65:\nCPI4_7:\nCPI5_2:\nCPI7_5:\n\t.cell 2852213850513516153367582212096\nCPI0_66:\n\t.cell -46967347869762817211770011756586609677844163125355452868590611683642280247296\nCPI0_67:\n\t.cell 5387515050969974956360988622848\nCPI0_68:\n\t.cell 29289127993025145568725129057828671567744754166070328588094505464281371246592\nCPI0_69:\n\t.cell 1000000000000000000\nCPI0_70:\n\t.cell -24243573542908756656742960469620706294859471809197549687606805108482832859136\nCPI0_71:\n\t.cell -27536857605250809579915372324135987738810261726803944444161409881874687328256\nCPI0_72:\n\t.cell 36585680516800130076674952755767652720215973367664673231270495149701979963392\nCPI0_73:\n\t.cell -33419636430028734643022972782987963516055066601414890002813699607517053583360\nCPI0_74:\n\t.cell -27151071013223617441696809311706469891330170172232269417374360038580301070336\nCPI0_75:\n\t.cell 316912650057057350374175801344\nCPI0_76:\n\t.cell -16790397505530373845563056488870850555205695027089044236548141291459116531712\nCPI0_77:\n\t.cell 8589934560\nCPI0_78:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_79:\n\t.cell 18446744073709551327\nCPI0_80:\n\t.cell -25085042922932715679007901429792258562186342537147911894151979128382061281280\nCPI0_81:\n\t.cell 53539900407852911456456701308484928931406331239208729481905787339876560011264\nCPI0_82:\nCPI4_6:\nCPI5_1:\nCPI7_4:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_83:\n\t.cell 49422300655976383518971161772042036479724517635858811238160587340303074464591\nCPI0_84:\n\t.cell 2481041784956016742021570618494952475758789857281704946240779902470294861374\nCPI0_85:\n\t.cell 26616959624788145501257665028759500958019551560565664426117466910078421933505\nCPI0_86:\n\t.cell -26169279673760072341673943167871893214131042372482409454972450661548556448747\nCPI0_87:\n\t.cell -35624623585156310935986566609950774337791491079595188565361216048441042957010\nCPI0_88:\n\t.cell 36516136433507714556481507284757523525550975291680945358964353894568634540880\nCPI0_89:\n\t.cell -51723044313523656053393963764110524395896352204932251959347227769995480006656\nCPI0_90:\n\t.cell -18002263324862296164297574372220909754226456243825434961346737007256845270391\nCPI0_91:\n\t.cell 15742374736755560200867032344613233170649429379879687236804144291568011968512\nCPI0_92:\n\t.cell 11537839058114535555356276652086655718983938579725392199733168789926996606976\nCPI0_93:\n\t.cell 11430537079145650693387304458692941425836787954612963690241153482819318579200\nCPI0_94:\n\t.cell 904625697166532776746648320380374280103671759954006657414122630674458345472\nCPI0_95:\n\t.cell -1401820844882498205785418849946084699849473257180799186470767787552591052800\nCPI0_96:\n\t.cell 57896044618658097711785492504343953926418782139537452191302581570759080747168\nCPI0_97:\n\t.cell 10141204801825835211973625643008\nCPI0_98:\n\t.cell 36784665143163702161339441327371172859310420721361339561610400621048880955392\nCPI0_99:\n\t.cell -4399567410664312436217910391711023685490938802098584046133129080549566054400\nCPI0_100:\n\t.cell -18297812966642927639546323119482596956946477707846785379148242173554237374464\nCPI0_101:\n\t.cell 18446744073709551483\nCPI0_102:\n\t.cell 452317745995237654134427455439135334428760040780041922473956816458961671535\nCPI0_103:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_104:\n\t.cell 904625697166532776746648320380374280103671765658434358441154937409622769664\nCPI0_105:\n\t.cell 56754858411141558304599661950743269417851770002052927676745353822001623465984\nCPI0_106:\n\t.cell 452320427257589735736092501655702212210535795424078143435447840818844483830\nCPI0_107:\n\t.cell 452342502339312709344410783015654991423214681929482127226334524265687429512\nCPI4_3:\n\t.cell 18446744073709551488\n","methodIdentifiers":{"IS_TEST()":"fa7626d4","excludeArtifacts()":"b5508aa9","excludeContracts()":"e20c9f71","excludeSelectors()":"b0464fdc","excludeSenders()":"1ed7831c","failed()":"ba414fa6","isOnZkSyncChainId()":"45bb5aae","isOnZkSyncPrecompiles()":"d9a34b21","isZkSyncChain()":"0852749b","setUp()":"0a9254e4","targetArtifactSelectors()":"66d9a9a0","targetArtifacts()":"85226c81","targetContracts()":"3f7286f4","targetInterfaces()":"2ade3880","targetSelectors()":"916a17c6","targetSenders()":"3e5e3c23","testEntryPointCanExecuteCommands()":"91ec0a22","testNonOwnerCannotExecuteCommands()":"9dfa705f","testOwnerCanExecuteCommands()":"1fd6142a","testRecoverSignedOp()":"137f2e5a","testValidationOfUserOps()":"13f8218c"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncChainId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOnZkSyncPrecompiles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isZkSyncChain\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isZkSync\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEntryPointCanExecuteCommands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testNonOwnerCannotExecuteCommands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerCanExecuteCommands\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testRecoverSignedOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testValidationOfUserOps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ethereum/MinimalAccountTest.t.sol\":\"MinimalAccountTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@account-abstraction/contracts/=lib/account-abstraction/contracts/\",\":@foundry-devops/src/=lib/foundry-devops/src/\",\":@foundry-era-contracts/src/=lib/foundry-era-contracts/src/\",\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x0eb1245b5541ff0fbc0f2a23c746e2b4eb9c46e801a4847f15d7d96d1cecc576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b002e499336c8f6ec05230762cccd3b48d67a2ec547e2789cfb70132af0b430f\",\"dweb:/ipfs/QmfRGPNgBrfxmLt9PQUEjocVmC47Mx14Vie1tziTARRZfq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/foundry-devops/src/DevOpsTools.sol\":{\"keccak256\":\"0x6e310a8b06b2cb689b5e3c0deec45ef1ffc35d8accf79e4da2656cc5a3d10a36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c6337496be59bbd75e9fed8afc3822dda05162b6bb019820190956317860583\",\"dweb:/ipfs/Qmdr8twbe1Wr7DWGkZkrpKNVmSkwh9L5PSf7HKq7utYDWh\"]},\"lib/foundry-devops/src/StringUtils.sol\":{\"keccak256\":\"0xc21a2278d2872b8867aa123ee6c236f51a38a789e8aa80659655d7ccedef9341\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c88541569ee44ee344e1adf17ec2d2dfd528dfc6495cd6767fcc536bca8b0d0e\",\"dweb:/ipfs/QmaRZNzPB62ruBepsG6zbUabyKRM1pdkGAGG5iL7mTEjri\"]},\"lib/foundry-devops/src/ZkSyncChainChecker.sol\":{\"keccak256\":\"0xbcf7e7847171a8e028ccecbe9cd3a75f9d3b102c12806d86d13a57a66d204a6a\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://5c075822f6919ac2eaa770d7db6497447cacc0aa9c386bfd6f52ab71fd7d0081\",\"dweb:/ipfs/QmSryCcJrLfifu3SCiAQganu4YxTXJXs2JqpsfNymPp2qL\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\":{\"keccak256\":\"0x3ae81a443846c6d9bd387d6c6a5d7271a25095c83bb93817eefdaa22e13ca9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f98462a56f254dc0046038e92527e3b7ee5bf0e03f60e3459fbd400c14be01a7\",\"dweb:/ipfs/QmevANfRaMrqy8Jh33LxEs5vP2xBPQspxtij8bsonw3GHM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMinimal.s.sol\":{\"keccak256\":\"0x6a654e504981eb3c46acf108fcf192e366e048aa74068e65f595a347b6af6e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53054578ec495427958ebd7bdbaba57512ad3896aa5289a1e11536bb04dafef1\",\"dweb:/ipfs/QmR3vP4bKyidaGwSahhsXxxyxfqzGsTm2271DCExahF3Mj\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x5ad773662180a8e2ec48016a069152b652cedf807490f6527a4bd7edfb46a7b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://059806c77052aa99ac94b73642b1d7cb8eba5765c3a6710d5e1b78cc951d0c6b\",\"dweb:/ipfs/QmP4rBor7ZhpPGAw8ETXshmpfdLyvBaewehWbZTFoKBg8b\"]},\"script/SendPackedUserOp.s.sol\":{\"keccak256\":\"0x52b976f470baf5a8d13c32dc48291373e501f4133510eaba17857536612c7bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fac6ac7af4234796fe4098d9ab9d0668c5d8220c88e5a3e94686233ec6b809aa\",\"dweb:/ipfs/QmU4aSGUfSBLJTRKurnJ1PnqySnKPiM4nTEcDdRFtu8G8J\"]},\"src/ethereum/MinimalAccount.sol\":{\"keccak256\":\"0x676bc73721c5cae872e510c0d14449f7d06328dd6517171e29a1acd42499de53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8814eed9dddb92e0ce0bca43ae9845026465ddfb04b68a386cd531edee5512af\",\"dweb:/ipfs/QmawdmH5yBRqW4SmJWsF4rjt74BVHjBiLTe6U6mHLSMv5y\"]},\"test/ethereum/MinimalAccountTest.t.sol\":{\"keccak256\":\"0x9769418e4916ba3842f9d158e8e30d688cbc48ca2b62e31755ad334a6a32b619\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://781c5847d075952ee49824c5865f7030534d9b2c8efd87d8486084790ef27b1c\",\"dweb:/ipfs/QmYcC76sQVBEi1eXHja3YnMiFr2bFzMbLrKFDNkMUvuyCf\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 17:\"lib/forge-std/src/StdAssertions.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 21:\"lib/forge-std/src/StdInvariant.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 28:\"lib/forge-std/src/Test.sol\", 41:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 86:\"test/ethereum/MinimalAccountTest.t.sol\"\nobject \"MinimalAccountTest_52766\" {\n    code {\n        {\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let _2 := not(255)\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _2), /** @src 18:3166:3170  \"true\" */ 0x01))\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            sstore(/** @src 28:1038:1042  \"true\" */ 0x1f, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 28:1038:1042  \"true\" */ 0x1f), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _2), /** @src 18:3166:3170  \"true\" */ 0x01))\n            /// @src 41:196:199  \"324\"\n            let _3 := 0x20\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            sstore(/** @src 41:196:199  \"324\" */ _3, 0x0144)\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            sstore(/** @src 41:236:239  \"300\" */ 0x21, 0x012c)\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            sstore(/** @src 41:281:284  \"260\" */ 0x22, 0x0104)\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            let _4 := 64\n            let newFreePtr := add(_1, _4)\n            let _5 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _5), lt(newFreePtr, _1))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(_4, newFreePtr)\n            let _6 := 10\n            mstore(_1, 10)\n            mstore(add(_1, /** @src 41:196:199  \"324\" */ _3), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ \"randomUser\")\n            /// @src 19:20303:20325  \"abi.encodePacked(name)\"\n            let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_4)\n            let i := 0\n            for { }\n            lt(i, _6)\n            {\n                i := add(i, /** @src 41:196:199  \"324\" */ _3)\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            {\n                mstore(add(add(/** @src 19:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ i), /** @src 41:196:199  \"324\" */ _3), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(add(add(_1, i), /** @src 41:196:199  \"324\" */ _3)))\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            mstore(add(/** @src 19:20303:20325  \"abi.encodePacked(name)\" */ expr_mpos, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 42), 0)\n            /// @src 19:20303:20325  \"abi.encodePacked(name)\"\n            mstore(expr_mpos, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 10)\n            let newFreePtr_1 := add(expr_mpos, _4)\n            if or(gt(newFreePtr_1, _5), lt(newFreePtr_1, expr_mpos))\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            mstore(_4, newFreePtr_1)\n            /// @src 19:20293:20326  \"keccak256(abi.encodePacked(name))\"\n            let _7 := keccak256(/** @src 19:20303:20325  \"abi.encodePacked(name)\" */ add(expr_mpos, /** @src 41:196:199  \"324\" */ _3), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 19:20293:20326  \"keccak256(abi.encodePacked(name))\" */ expr_mpos))\n            /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n            mstore(newFreePtr_1, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(224, 0xffa18649))\n            mstore(/** @src 19:20344:20363  \"vm.addr(privateKey)\" */ add(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ expr_mpos, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ 68), /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _7)\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            let _8 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n            /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n            let _9 := staticcall(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _8, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ newFreePtr_1, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ newFreePtr_1, /** @src 41:196:199  \"324\" */ _3)\n            /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n            if iszero(_9)\n            {\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let pos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_4)\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                returndatacopy(pos, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                revert(pos, returndatasize())\n            }\n            /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n            let expr := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0\n            /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n            if _9\n            {\n                let _10 := /** @src 41:196:199  \"324\" */ _3\n                /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n                if gt(/** @src 41:196:199  \"324\" */ _3, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ returndatasize()) { _10 := returndatasize() }\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let newFreePtr_2 := add(add(expr_mpos, and(add(_10, /** @src 28:1038:1042  \"true\" */ 0x1f), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31))), _4)\n                if or(gt(newFreePtr_2, _5), lt(newFreePtr_2, newFreePtr_1))\n                {\n                    mstore(expr, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:20344:20363  \"vm.addr(privateKey)\" */ 4, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0x41)\n                    revert(expr, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                }\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(_4, newFreePtr_2)\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                if slt(sub(/** @src 19:20344:20363  \"vm.addr(privateKey)\" */ add(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ expr_mpos, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ _10), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ expr_mpos), /** @src 41:196:199  \"324\" */ _3)\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(expr, expr)\n                }\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let value := mload(newFreePtr_1)\n                if iszero(eq(value, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sub(shl(160, 1), 1))))\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                {\n                    revert(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ expr, expr)\n                }\n                /// @src 19:20344:20363  \"vm.addr(privateKey)\"\n                expr := value\n            }\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _8))\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                revert(0, 0)\n            }\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            let _11 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_4)\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            mstore(_11, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ shl(227, 0x18caf8e3))\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            let _12 := and(/** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sub(shl(160, 1), 1))\n            /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            mstore(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ add(_11, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ 4), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _12)\n            /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            mstore(add(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _4)\n            /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n            let length := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1)\n            mstore(add(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 19:20344:20363  \"vm.addr(privateKey)\" */ 68), /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length)\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            let i_1 := 0\n            for { }\n            lt(i_1, length)\n            {\n                i_1 := add(i_1, /** @src 41:196:199  \"324\" */ _3)\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            {\n                mstore(add(add(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ i_1), /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(add(add(_1, i_1), /** @src 41:196:199  \"324\" */ _3)))\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            mstore(add(add(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ length), /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0)\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            let _13 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _8, 0, /** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, add(sub(/** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(add(/** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length, /** @src 28:1038:1042  \"true\" */ 0x1f), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31))), /** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11), /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), /** @src 19:20373:20393  \"vm.label(addr, name)\" */ _11, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0)\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            if iszero(_13)\n            {\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                let pos_1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_4)\n                /// @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                returndatacopy(pos_1, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ returndatasize())\n                revert(pos_1, returndatasize())\n            }\n            /// @src 19:20373:20393  \"vm.label(addr, name)\"\n            if _13\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                if gt(_11, _5)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(/** @src 19:20344:20363  \"vm.addr(privateKey)\" */ 4, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0x41)\n                    revert(0, /** @src 19:291:350  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                }\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(_4, _11)\n            }\n            sstore(/** @src 86:955:977  \"makeAddr(\\\"randomUser\\\")\" */ 0x27, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 86:955:977  \"makeAddr(\\\"randomUser\\\")\" */ 0x27), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(sub(shl(160, 1), 1))), _12))\n            let _14 := mload(_4)\n            let _15 := datasize(\"MinimalAccountTest_52766_deployed\")\n            codecopy(_14, dataoffset(\"MinimalAccountTest_52766_deployed\"), _15)\n            return(_14, _15)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 17:\"lib/forge-std/src/StdAssertions.sol\", 21:\"lib/forge-std/src/StdInvariant.sol\", 28:\"lib/forge-std/src/Test.sol\", 30:\"lib/forge-std/src/console.sol\", 41:\"lib/foundry-devops/src/ZkSyncChainChecker.sol\", 75:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 76:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 86:\"test/ethereum/MinimalAccountTest.t.sol\"\n    object \"MinimalAccountTest_52766_deployed\" {\n        code {\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(64, 128)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x0852749b { external_fun_isZkSyncChain() }\n                    case 0x0a9254e4 { external_fun_setUp() }\n                    case 0x137f2e5a {\n                        external_fun_testRecoverSignedOp()\n                    }\n                    case 0x13f8218c {\n                        external_fun_testValidationOfUserOps()\n                    }\n                    case 0x1ed7831c { external_fun_excludeSenders() }\n                    case 0x1fd6142a {\n                        external_fun_testOwnerCanExecuteCommands()\n                    }\n                    case 0x2ade3880 {\n                        external_fun_targetInterfaces()\n                    }\n                    case 0x3e5e3c23 { external_fun_targetSenders() }\n                    case 0x3f7286f4 {\n                        external_fun_targetContracts()\n                    }\n                    case 0x45bb5aae {\n                        external_fun_isOnZkSyncChainId()\n                    }\n                    case 0x66d9a9a0 {\n                        external_fun_targetArtifactSelectors()\n                    }\n                    case 0x85226c81 {\n                        external_fun_targetArtifacts()\n                    }\n                    case 0x916a17c6 {\n                        external_fun_targetSelectors()\n                    }\n                    case 0x91ec0a22 {\n                        external_fun_testEntryPointCanExecuteCommands()\n                    }\n                    case 0x9dfa705f {\n                        external_fun_testNonOwnerCannotExecuteCommands()\n                    }\n                    case 0xb0464fdc {\n                        external_fun_excludeSelectors()\n                    }\n                    case 0xb5508aa9 {\n                        external_fun_excludeArtifacts()\n                    }\n                    case 0xba414fa6 { external_fun_failed() }\n                    case 0xd9a34b21 {\n                        external_fun_isOnZkSyncPrecompiles()\n                    }\n                    case 0xe20c9f71 {\n                        external_fun_excludeContracts()\n                    }\n                    case 0xfa7626d4 { external_fun_IS_TEST() }\n                }\n                revert(0, 0)\n            }\n            function abi_decode(headStart, dataEnd)\n            {\n                if slt(sub(dataEnd, headStart), 0) { revert(0, 0) }\n            }\n            function cleanup_bool(value) -> cleaned\n            {\n                cleaned := iszero(iszero(value))\n            }\n            function external_fun_isZkSyncChain()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isZkSyncChain()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_setUp()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:1021:1284  \"function setUp() public skipZkSync {...\"\n                modifier_skipZkSync_52264()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_testRecoverSignedOp()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:2576:3536  \"function testRecoverSignedOp() public skipZkSync {...\"\n                modifier_skipZkSync_52433()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_testValidationOfUserOps()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:3637:4678  \"function testValidationOfUserOps() public skipZkSync {...\"\n                modifier_skipZkSync_52532()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function array_storeLengthForEncoding_array_address_dyn(pos, length) -> updated_pos\n            {\n                mstore(pos, length)\n                updated_pos := add(pos, 0x20)\n            }\n            function cleanup_address(value) -> cleaned\n            {\n                cleaned := and(value, sub(shl(160, 1), 1))\n            }\n            function abi_encode_address_to_address(value, pos)\n            {\n                mstore(pos, and(value, sub(shl(160, 1), 1)))\n            }\n            function abi_encode_array_address_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                tail := pos\n            }\n            function external_fun_excludeSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3018:3034  \"_excludedSenders\" */ 0x16)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let srcPtr := 97789825912453899259273410636466998099043528421815129078110847000656284369545\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_testOwnerCanExecuteCommands()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:1423:2035  \"function testOwnerCanExecuteCommands() public skipZkSync {...\"\n                modifier_skipZkSync_52300()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_array_struct_FuzzInterface_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let _3 := 5\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                let i_1 := 0\n                for { } lt(i_1, length) { i_1 := add(i_1, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _4 := mload(srcPtr)\n                    let tail_3 := add(tail_2, _2)\n                    mstore(tail_2, and(mload(_4), sub(shl(160, 1), 1)))\n                    let memberValue0 := mload(add(_4, _1))\n                    mstore(add(tail_2, _1), _2)\n                    let pos_1 := tail_3\n                    let length_1 := mload(memberValue0)\n                    mstore(tail_3, length_1)\n                    let _5 := 96\n                    pos_1 := add(tail_2, _5)\n                    let tail_4 := add(add(tail_2, shl(_3, length_1)), _5)\n                    let srcPtr_1 := add(memberValue0, _1)\n                    let i_2 := i\n                    for { } lt(i_2, length_1) { i_2 := add(i_2, 1) }\n                    {\n                        mstore(pos_1, add(sub(tail_4, tail_2), not(95)))\n                        tail_4 := abi_encode_string(mload(srcPtr_1), tail_4)\n                        srcPtr_1 := add(srcPtr_1, _1)\n                        pos_1 := add(pos_1, _1)\n                    }\n                    tail_2 := tail_4\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetInterfaces()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3948:3967  \"_targetedInterfaces\" */ 0x1e)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 36516136433507714556481507284757523525550975291680945358964353894568634540880\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_12443(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_string__dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzInterface_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_targetSenders()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3794:3810  \"_targetedSenders\" */ 0x18)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let srcPtr := 80167465652159884487584418398737133515478493586045375474096367959472086682926\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_targetContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:3501:3519  \"_targetedContracts\" */ 0x17)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let srcPtr := 89622809563556123081897041840816014639138942293158154584485133346364573191189\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_isOnZkSyncChainId()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncChainId()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function abi_encode_bytes4(value, pos)\n            {\n                mstore(pos, and(value, shl(224, 0xffffffff)))\n            }\n            function abi_encode_array_bytes4_dyn(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                let srcPtr := add(value, 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), shl(224, 0xffffffff)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                end := pos\n            }\n            function abi_encode_array_struct_FuzzArtifactSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    let memberValue0 := mload(_3)\n                    mstore(tail_2, _2)\n                    let tail_3 := abi_encode_string(memberValue0, add(tail_2, _2))\n                    let memberValue0_1 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), sub(tail_3, tail_2))\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0_1, tail_3)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifactSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3346:3372  \"_targetedArtifactSelectors\" */ 0x1b)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 26616959624788145501257665028759500958019551560565664426117466910078421933505\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_12443(memPtr_1)\n                    mstore(memPtr_1, copy_array_from_storage_to_memory_string(spos))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzArtifactSelector_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_string_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, 32)\n                mstore(headStart, 32)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, 32)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    tail_2 := abi_encode_string(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3162:3180  \"_targetedArtifacts\" */ 0x1a)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 2481041784956016742021570618494952475758789857281704946240779902470294861374\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function abi_encode_array_struct_FuzzSelector_dyn(headStart, value0) -> tail\n            {\n                let _1 := 32\n                let tail_1 := add(headStart, _1)\n                mstore(headStart, _1)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                let _2 := 64\n                pos := add(headStart, 64)\n                let tail_2 := add(add(headStart, shl(5, length)), 64)\n                let srcPtr := add(value0, _1)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(63)))\n                    let _3 := mload(srcPtr)\n                    mstore(tail_2, and(mload(_3), sub(shl(160, 1), 1)))\n                    let memberValue0 := mload(add(_3, _1))\n                    mstore(add(tail_2, _1), _2)\n                    tail_2 := abi_encode_array_bytes4_dyn(memberValue0, add(tail_2, _2))\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n            }\n            function external_fun_targetSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:3653:3671  \"_targetedSelectors\" */ 0x1d)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 49422300655976383518971161772042036479724517635858811238160587340303074464591\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_12443(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_testEntryPointCanExecuteCommands()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:4684:5858  \"function testEntryPointCanExecuteCommands() public skipZkSync {...\"\n                modifier_skipZkSync()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_testNonOwnerCannotExecuteCommands()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                /// @src 86:2041:2570  \"function testNonOwnerCannotExecuteCommands() public skipZkSync {...\"\n                modifier_skipZkSync_52369()\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                return(0, 0)\n            }\n            function external_fun_excludeSelectors()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let _2 := 64\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _3 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:2876:2894  \"_excludedSelectors\" */ 0x1c)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 6454973039698199198119942482240540643982028891330163610098731264865829167633\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    let memPtr_1 := mload(_2)\n                    finalize_allocation_12443(memPtr_1)\n                    mstore(memPtr_1, and(sload(spos), sub(shl(160, 1), 1)))\n                    mstore(add(memPtr_1, _3), copy_array_from_storage_to_memory_array_bytes4_dyn(add(spos, 1)))\n                    mstore(mpos, memPtr_1)\n                    mpos := add(mpos, _3)\n                    spos := add(spos, 2)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_struct_FuzzSelector_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_excludeArtifacts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let length := sload(/** @src 21:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _1)\n                mstore(memPtr, length)\n                let mpos := memPtr\n                let _2 := 0x20\n                mpos := add(memPtr, 0x20)\n                mstore(0, /** @src 21:2575:2593  \"_excludedArtifacts\" */ 0x19)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let spos := 67072331549493647622825787457569556318728415786901242217649037894484240406165\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_string_dyn(memPos, memPtr), memPos))\n            }\n            function external_fun_failed()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_failed()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_isOnZkSyncPrecompiles()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let ret := fun_isOnZkSyncPrecompiles()\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(ret)))\n                return(memPos, 32)\n            }\n            function external_fun_excludeContracts()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let pos := mload(64)\n                let pos_1 := pos\n                let length := sload(/** @src 21:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(pos, length)\n                let _1 := 0x20\n                pos := add(pos, 0x20)\n                mstore(0, /** @src 21:2723:2741  \"_excludedContracts\" */ 0x15)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let srcPtr := 38878206584692966203415385907871375197469080758325516314230789535345649042549\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(pos_1, sub(pos, pos_1))\n                let memPos := mload(64)\n                return(memPos, sub(abi_encode_array_address_dyn(memPos, pos_1), memPos))\n            }\n            function external_fun_IS_TEST()\n            {\n                if callvalue() { revert(0, 0) }\n                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                let value := and(sload(/** @src 28:1016:1042  \"bool public IS_TEST = true\" */ 31), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0xff)\n                let memPos := mload(64)\n                mstore(memPos, iszero(iszero(value)))\n                return(memPos, 32)\n            }\n            /// @ast-id 43092 @src 41:1732:1909  \"function isZkSyncChain() public returns (bool isZkSync) {...\"\n            function fun_isZkSyncChain() -> var_isZkSync\n            {\n                /// @src 41:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                if /** @src 41:1802:1821  \"isOnZkSyncChainId()\" */ fun_isOnZkSyncChainId()\n                /// @src 41:1798:1863  \"if (isOnZkSyncChainId()) {...\"\n                {\n                    /// @src 41:1837:1852  \"return isZkSync\"\n                    var_isZkSync := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0\n                    /// @src 41:1837:1852  \"return isZkSync\"\n                    leave\n                }\n                /// @src 41:1872:1902  \"return isOnZkSyncPrecompiles()\"\n                var_isZkSync := /** @src 41:1879:1902  \"isOnZkSyncPrecompiles()\" */ fun_isOnZkSyncPrecompiles()\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function panic_error_0x41()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(0, 0x24)\n            }\n            function finalize_allocation_12443(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_12471(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff) { panic_error_0x41() }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation_12514(memPtr)\n            {\n                let newFreePtr := add(memPtr, 288)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n            }\n            function allocate_memory() -> memPtr\n            {\n                memPtr := mload(64)\n                finalize_allocation_12514(memPtr)\n            }\n            function copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                let newFreePtr := add(memPtr_1, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr_1, 38)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"Skipping test because we are on \")\n                mstore(add(memPtr_1, 64), \"zkSync\")\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync_52264()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _1 := 64\n                    /// @src 86:1096:1115  \"new DeployMinimal()\"\n                    let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1096:1115  \"new DeployMinimal()\"\n                    let _3 := datasize(\"DeployMinimal_51062\")\n                    let _4 := add(_2, _3)\n                    let _5 := 0xffffffffffffffff\n                    if or(gt(_4, _5), lt(_4, _2)) { panic_error_0x41() }\n                    datacopy(_2, dataoffset(\"DeployMinimal_51062\"), _3)\n                    let _6 := 0\n                    let expr_address := create(_6, _2, sub(_4, _2))\n                    if iszero(expr_address) { revert_forward() }\n                    /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                    let _7 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                    mstore(_7, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x7d7a1c8b))\n                    /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                    let _8 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 86:1158:1192  \"deployMinimal.deployMinimalAccount\" */ expr_address, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sub(shl(160, 1), 1)), /** @src 86:1096:1115  \"new DeployMinimal()\" */ _6, /** @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\" */ _7, 4, _7, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1)\n                    /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                    if iszero(_8) { revert_forward() }\n                    let expr_component_address := /** @src 86:1096:1115  \"new DeployMinimal()\" */ _6\n                    let expr_component_address_1 := _6\n                    /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                    if _8\n                    {\n                        let _9 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1\n                        /// @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\"\n                        if gt(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1, /** @src 86:1158:1194  \"deployMinimal.deployMinimalAccount()\" */ returndatasize()) { _9 := returndatasize() }\n                        finalize_allocation(_7, _9)\n                        let expr_component_address_2, expr_component_address_3 := abi_decode_contract_HelperConfigt_contract_MinimalAccount_fromMemory(_7, add(_7, _9))\n                        expr_component_address := expr_component_address_2\n                        expr_component_address_1 := expr_component_address_3\n                    }\n                    /// @src 86:1125:1194  \"(helperConfig, minimalAccount) = deployMinimal.deployMinimalAccount()\"\n                    update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12450(expr_component_address_1)\n                    update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount(expr_component_address)\n                    /// @src 86:1211:1226  \"new ERC20Mock()\"\n                    let _10 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1211:1226  \"new ERC20Mock()\"\n                    let _11 := datasize(\"ERC20Mock_47815\")\n                    let _12 := add(_10, _11)\n                    if or(gt(_12, /** @src 86:1096:1115  \"new DeployMinimal()\" */ _5), /** @src 86:1211:1226  \"new ERC20Mock()\" */ lt(_12, _10)) { panic_error_0x41() }\n                    datacopy(_10, dataoffset(\"ERC20Mock_47815\"), _11)\n                    let expr_address_1 := create(/** @src 86:1096:1115  \"new DeployMinimal()\" */ _6, /** @src 86:1211:1226  \"new ERC20Mock()\" */ _10, sub(_12, _10))\n                    if iszero(expr_address_1) { revert_forward() }\n                    /// @src 86:1204:1226  \"usdc = new ERC20Mock()\"\n                    update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12452(expr_address_1)\n                    /// @src 86:1255:1277  \"new SendPackedUserOp()\"\n                    let _13 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1255:1277  \"new SendPackedUserOp()\"\n                    let _14 := datasize(\"SendPackedUserOp_51640\")\n                    let _15 := add(_13, _14)\n                    if or(gt(_15, /** @src 86:1096:1115  \"new DeployMinimal()\" */ _5), /** @src 86:1255:1277  \"new SendPackedUserOp()\" */ lt(_15, _13)) { panic_error_0x41() }\n                    datacopy(_13, dataoffset(\"SendPackedUserOp_51640\"), _14)\n                    let expr_address_2 := create(/** @src 86:1096:1115  \"new DeployMinimal()\" */ _6, /** @src 86:1255:1277  \"new SendPackedUserOp()\" */ _13, sub(_15, _13))\n                    if iszero(expr_address_2) { revert_forward() }\n                    /// @src 86:1236:1277  \"sendPackedUserOp = new SendPackedUserOp()\"\n                    update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12453(expr_address_2)\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function revert_forward()\n            {\n                let pos := mload(64)\n                returndatacopy(pos, 0, returndatasize())\n                revert(pos, returndatasize())\n            }\n            function validator_revert_contract_HelperConfig(value)\n            {\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_contract_HelperConfigt_contract_MinimalAccount_fromMemory(headStart, dataEnd) -> value0, value1\n            {\n                if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n                let value := mload(headStart)\n                validator_revert_contract_HelperConfig(value)\n                value0 := value\n                let value_1 := mload(add(headStart, 32))\n                validator_revert_contract_HelperConfig(value_1)\n                value1 := value_1\n            }\n            function update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12450(value)\n            {\n                sstore(/** @src 86:1125:1194  \"(helperConfig, minimalAccount) = deployMinimal.deployMinimalAccount()\" */ 0x24, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 86:1125:1194  \"(helperConfig, minimalAccount) = deployMinimal.deployMinimalAccount()\" */ 0x24), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount(value)\n            {\n                sstore(/** @src 86:1125:1194  \"(helperConfig, minimalAccount) = deployMinimal.deployMinimalAccount()\" */ 0x23, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 86:1125:1194  \"(helperConfig, minimalAccount) = deployMinimal.deployMinimalAccount()\" */ 0x23), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12452(value)\n            {\n                sstore(/** @src 86:1204:1226  \"usdc = new ERC20Mock()\" */ 0x25, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 86:1204:1226  \"usdc = new ERC20Mock()\" */ 0x25), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            function update_storage_value_offsett_contract_MinimalAccount_to_contract_MinimalAccount_12453(value)\n            {\n                sstore(/** @src 86:1236:1277  \"sendPackedUserOp = new SendPackedUserOp()\" */ 0x26, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ or(and(sload(/** @src 86:1236:1277  \"sendPackedUserOp = new SendPackedUserOp()\" */ 0x26), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(160, 0xffffffffffffffffffffffff)), and(value, sub(shl(160, 1), 1))))\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync_52433()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:2663:2677  \"usdc.balanceOf\"\n                    let expr_address := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2663:2667  \"usdc\" */ 0x25)))\n                    /// @src 86:2678:2701  \"address(minimalAccount)\"\n                    let expr := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2686:2700  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _1 := 64\n                    /// @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x70a08231))\n                    /// @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _3 := 32\n                    let _4 := 4\n                    let _5 := staticcall(gas(), expr_address, _2, sub(abi_encode_address(add(_2, _4), expr), _2), _2, _3)\n                    if iszero(_5) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _5\n                    {\n                        let _6 := _3\n                        if gt(_3, returndatasize()) { _6 := returndatasize() }\n                        finalize_allocation(_2, _6)\n                        expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                    }\n                    /// @src 86:2654:2706  \"assertEq(usdc.balanceOf(address(minimalAccount)), 0)\"\n                    fun_assertEq_12458(expr_1)\n                    /// @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(add(expr_mpos, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3), /** @src 86:2832:2855  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                    /// @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let _7 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 86:2686:2700  \"minimalAccount\" */ 0x24), /** @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ expr), expr_mpos)\n                    let _8 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)\n                    /// @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(expr_mpos, add(_7, _8))\n                    finalize_allocation(expr_mpos, _7)\n                    /// @src 86:2942:3024  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let expr_mpos_1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:2942:3024  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    mstore(add(expr_mpos_1, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3), /** @src 86:2965:2996  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                    /// @src 86:2942:3024  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let _9 := sub(abi_encode_address_uint256_bytes(add(expr_mpos_1, /** @src 86:2686:2700  \"minimalAccount\" */ 0x24), /** @src 86:2942:3024  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_address, expr_mpos), expr_mpos_1)\n                    mstore(expr_mpos_1, add(_9, /** @src 86:2809:2889  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ _8))\n                    /// @src 86:2942:3024  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    finalize_allocation(expr_mpos_1, _9)\n                    /// @src 86:3076:3120  \"sendPackedUserOp.generateSignedUserOperation\"\n                    let expr_address_1 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:3076:3092  \"sendPackedUserOp\" */ 0x26)))\n                    /// @src 86:3151:3173  \"helperConfig.getConfig\"\n                    let expr_address_2 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:3151:3163  \"helperConfig\" */ 0x23)))\n                    /// @src 86:3151:3175  \"helperConfig.getConfig()\"\n                    let _10 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    let _11 := shl(226, 0x30fe4275)\n                    /// @src 86:3151:3175  \"helperConfig.getConfig()\"\n                    mstore(_10, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11)\n                    /// @src 86:3151:3175  \"helperConfig.getConfig()\"\n                    let _12 := 96\n                    let _13 := call(gas(), expr_address_2, /** @src -1:-1:-1 */ 0, /** @src 86:3151:3175  \"helperConfig.getConfig()\" */ _10, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:3151:3175  \"helperConfig.getConfig()\" */ _10, _12)\n                    if iszero(_13) { revert_forward() }\n                    let expr_mpos_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3151:3175  \"helperConfig.getConfig()\"\n                    if _13\n                    {\n                        let _14 := _12\n                        if gt(_12, returndatasize()) { _14 := returndatasize() }\n                        finalize_allocation(_10, _14)\n                        expr_mpos_2 := abi_decode_struct_NetworkConfig_fromMemory(_10, add(_10, _14))\n                    }\n                    /// @src 86:3177:3200  \"address(minimalAccount)\"\n                    let expr_2 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2686:2700  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _15 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    mstore(_15, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xdae0f8c7))\n                    /// @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _16 := staticcall(gas(), expr_address_1, _15, sub(abi_encode_bytes_struct_NetworkConfig_address(add(_15, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\" */ expr_mpos_1, expr_mpos_2, expr_2), _15), _15, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if iszero(_16) { revert_forward() }\n                    let expr_mpos_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if _16\n                    {\n                        let _17 := returndatasize()\n                        returndatacopy(_15, /** @src -1:-1:-1 */ 0, /** @src 86:3076:3210  \"sendPackedUserOp.generateSignedUserOperation(...\" */ _17)\n                        finalize_allocation(_15, _17)\n                        expr_mpos_3 := abi_decode_struct_PackedUserOperation_fromMemory(_15, add(_15, _17))\n                    }\n                    /// @src 86:3260:3282  \"helperConfig.getConfig\"\n                    let expr_address_3 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:3151:3163  \"helperConfig\" */ 0x23)))\n                    /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                    let _18 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                    mstore(_18, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11)\n                    /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                    let _19 := call(gas(), expr_address_3, /** @src -1:-1:-1 */ 0, /** @src 86:3260:3284  \"helperConfig.getConfig()\" */ _18, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:3260:3284  \"helperConfig.getConfig()\" */ _18, /** @src 86:3151:3175  \"helperConfig.getConfig()\" */ _12)\n                    /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                    if iszero(_19) { revert_forward() }\n                    let expr_mpos_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                    if _19\n                    {\n                        let _20 := /** @src 86:3151:3175  \"helperConfig.getConfig()\" */ _12\n                        /// @src 86:3260:3284  \"helperConfig.getConfig()\"\n                        if gt(/** @src 86:3151:3175  \"helperConfig.getConfig()\" */ _12, /** @src 86:3260:3284  \"helperConfig.getConfig()\" */ returndatasize()) { _20 := returndatasize() }\n                        finalize_allocation(_18, _20)\n                        expr_mpos_4 := abi_decode_struct_NetworkConfig_fromMemory(_18, add(_18, _20))\n                    }\n                    /// @src 86:3248:3310  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash\"\n                    let expr_address_4 := cleanup_address(/** @src 86:3248:3296  \"IEntryPoint(helperConfig.getConfig().entryPoint)\" */ cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(mload(/** @src 86:3260:3295  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_4))))\n                    /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    let _21 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    mstore(_21, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(226, 0x08b37793))\n                    /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    let _22 := staticcall(gas(), expr_address_4, _21, sub(abi_encode_struct_PackedUserOperation(add(_21, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\" */ expr_mpos_3), _21), _21, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3)\n                    /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    if iszero(_22) { revert_forward() }\n                    let expr_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    if _22\n                    {\n                        let _23 := /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3\n                        /// @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                        if gt(/** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3, /** @src 86:3248:3324  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\" */ returndatasize()) { _23 := returndatasize() }\n                        finalize_allocation(_21, _23)\n                        expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                    }\n                    /// @src 86:3387:3429  \"userOperationHash.toEthSignedMessageHash()\"\n                    let expr_4 := fun_toEthSignedMessageHash(expr_3)\n                    /// @src 86:3373:3454  \"ECDSA.recover(userOperationHash.toEthSignedMessageHash(), packedUserOp.signature)\"\n                    let expr_5 := fun_recover(expr_4, /** @src 86:3431:3453  \"packedUserOp.signature\" */ mload(add(expr_mpos_3, 256)))\n                    /// @src 86:3506:3526  \"minimalAccount.owner\"\n                    let expr_address_5 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2686:2700  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                    let _24 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                    mstore(_24, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x8da5cb5b))\n                    /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                    let _25 := staticcall(gas(), expr_address_5, _24, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:3506:3528  \"minimalAccount.owner()\" */ _24, /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3)\n                    /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                    if iszero(_25) { revert_forward() }\n                    let expr_6 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                    if _25\n                    {\n                        let _26 := /** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3\n                        /// @src 86:3506:3528  \"minimalAccount.owner()\"\n                        if gt(/** @src 86:2663:2702  \"usdc.balanceOf(address(minimalAccount))\" */ _3, /** @src 86:3506:3528  \"minimalAccount.owner()\" */ returndatasize()) { _26 := returndatasize() }\n                        finalize_allocation(_24, _26)\n                        expr_6 := abi_decode_tuple_address_fromMemory(_24, add(_24, _26))\n                    }\n                    fun_assertEq(expr_5, expr_6)\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function abi_decode_uint256_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                value0 := mload(headStart)\n            }\n            function abi_encode_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n            }\n            /// @src 86:1010:1014  \"1e18\"\n            function abi_encode_address_uint256(headStart, value0) -> tail\n            {\n                tail := add(headStart, 64)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(headStart, 32), 0x0de0b6b3a7640000)\n            }\n            function abi_encode_address_uint256_bytes(headStart, value0, value2) -> tail\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(headStart, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(headStart, 64), 96)\n                tail := abi_encode_string(value2, add(headStart, 96))\n            }\n            function abi_decode_address_fromMemory(offset) -> value\n            {\n                value := mload(offset)\n                validator_revert_contract_HelperConfig(value)\n            }\n            function abi_decode_struct_NetworkConfig_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, /** @src 86:1010:1014  \"1e18\" */ 96)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                /// @src 86:1010:1014  \"1e18\"\n                let value := mload(headStart)\n                validator_revert_contract_HelperConfig(value)\n                mstore(memPtr, value)\n                let value_1 := mload(add(headStart, 32))\n                validator_revert_contract_HelperConfig(value_1)\n                mstore(add(memPtr, 32), value_1)\n                let value_2 := mload(add(headStart, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 64))\n                /// @src 86:1010:1014  \"1e18\"\n                validator_revert_contract_HelperConfig(value_2)\n                mstore(add(memPtr, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 64), /** @src 86:1010:1014  \"1e18\" */ value_2)\n                value0 := memPtr\n            }\n            function abi_decode_bytes_fromMemory(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end))\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                let _1 := mload(offset)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, /** @src 86:1010:1014  \"1e18\" */ 0x1f), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)), /** @src 86:1010:1014  \"1e18\" */ 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n                array := memPtr\n            }\n            function abi_decode_struct_PackedUserOperation_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                let offset := mload(headStart)\n                let _1 := 0xffffffffffffffff\n                if gt(offset, _1)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                let _2 := add(headStart, offset)\n                if slt(sub(dataEnd, _2), 0x0120)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                let value := allocate_memory()\n                mstore(value, abi_decode_address_fromMemory(_2))\n                mstore(add(value, 32), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 86:1010:1014  \"1e18\" */ add(_2, 32)))\n                let offset_1 := mload(add(_2, 64))\n                if gt(offset_1, _1)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(value, 64), abi_decode_bytes_fromMemory(add(_2, offset_1), dataEnd))\n                let offset_2 := mload(add(_2, 96))\n                if gt(offset_2, _1)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(value, 96), abi_decode_bytes_fromMemory(add(_2, offset_2), dataEnd))\n                mstore(add(value, 128), mload(add(_2, 128)))\n                mstore(add(value, 160), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 86:1010:1014  \"1e18\" */ add(_2, 160)))\n                mstore(add(value, 192), mload(add(_2, 192)))\n                let offset_3 := mload(add(_2, 224))\n                if gt(offset_3, _1)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(value, 224), abi_decode_bytes_fromMemory(add(_2, offset_3), dataEnd))\n                let _3 := 256\n                let offset_4 := mload(add(_2, _3))\n                if gt(offset_4, _1)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(add(value, _3), abi_decode_bytes_fromMemory(add(_2, offset_4), dataEnd))\n                value0 := value\n            }\n            function abi_encode_bytes_struct_NetworkConfig_address(headStart, value0, value1, value2) -> tail\n            {\n                mstore(headStart, 160)\n                tail := abi_encode_string(value0, add(headStart, 160))\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := sub(shl(160, 1), 1)\n                mstore(/** @src 86:1010:1014  \"1e18\" */ add(headStart, 32), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 86:1010:1014  \"1e18\" */ mload(value1), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                mstore(/** @src 86:1010:1014  \"1e18\" */ add(headStart, 64), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 86:1010:1014  \"1e18\" */ mload(add(value1, 32)), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                mstore(/** @src 86:1010:1014  \"1e18\" */ add(headStart, 96), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 86:1010:1014  \"1e18\" */ mload(add(value1, 64)), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                mstore(/** @src 86:1010:1014  \"1e18\" */ add(headStart, 128), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(value2, _1))\n            }\n            /// @src 86:1010:1014  \"1e18\"\n            function read_from_memoryt_address(ptr) -> returnValue\n            {\n                returnValue := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 86:1010:1014  \"1e18\" */ mload(ptr), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sub(shl(160, 1), 1))\n            }\n            /// @src 86:1010:1014  \"1e18\"\n            function abi_encode_struct_PackedUserOperation_memory_ptr(value, pos) -> end\n            {\n                let _1 := 0x0120\n                abi_encode_address_to_address(mload(value), pos)\n                mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                let memberValue0 := mload(add(value, 0x40))\n                mstore(add(pos, 0x40), _1)\n                let tail := abi_encode_string(memberValue0, add(pos, _1))\n                let memberValue0_1 := mload(add(value, 0x60))\n                mstore(add(pos, 0x60), sub(tail, pos))\n                let tail_1 := abi_encode_string(memberValue0_1, tail)\n                mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                let memberValue0_2 := mload(add(value, 0xe0))\n                mstore(add(pos, 0xe0), sub(tail_1, pos))\n                let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n                let _2 := 0x0100\n                let memberValue0_3 := mload(add(value, _2))\n                mstore(add(pos, _2), sub(tail_2, pos))\n                end := abi_encode_string(memberValue0_3, tail_2)\n            }\n            function abi_encode_struct_PackedUserOperation(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                tail := abi_encode_struct_PackedUserOperation_memory_ptr(value0, add(headStart, 32))\n            }\n            function abi_decode_tuple_address_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 86:1010:1014  \"1e18\"\n                let value := mload(headStart)\n                validator_revert_contract_HelperConfig(value)\n                value0 := value\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync_52532()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:3728:3742  \"usdc.balanceOf\"\n                    let expr_address := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:3728:3732  \"usdc\" */ 0x25)))\n                    /// @src 86:3743:3766  \"address(minimalAccount)\"\n                    let expr := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:3751:3765  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _1 := 64\n                    /// @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x70a08231))\n                    /// @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _3 := 32\n                    let _4 := 4\n                    let _5 := staticcall(gas(), expr_address, _2, sub(abi_encode_address(add(_2, _4), expr), _2), _2, _3)\n                    if iszero(_5) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _5\n                    {\n                        let _6 := _3\n                        if gt(_3, returndatasize()) { _6 := returndatasize() }\n                        finalize_allocation(_2, _6)\n                        expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                    }\n                    /// @src 86:3719:3771  \"assertEq(usdc.balanceOf(address(minimalAccount)), 0)\"\n                    fun_assertEq_12458(expr_1)\n                    /// @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(add(expr_mpos, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3), /** @src 86:2832:2855  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                    /// @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let _7 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 86:3751:3765  \"minimalAccount\" */ 0x24), /** @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ expr), expr_mpos)\n                    let _8 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)\n                    /// @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(expr_mpos, add(_7, _8))\n                    finalize_allocation(expr_mpos, _7)\n                    /// @src 86:4007:4089  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let expr_mpos_1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4007:4089  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    mstore(add(expr_mpos_1, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3), /** @src 86:2965:2996  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                    /// @src 86:4007:4089  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let _9 := sub(abi_encode_address_uint256_bytes(add(expr_mpos_1, /** @src 86:3751:3765  \"minimalAccount\" */ 0x24), /** @src 86:4007:4089  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_address, expr_mpos), expr_mpos_1)\n                    mstore(expr_mpos_1, add(_9, /** @src 86:3874:3954  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ _8))\n                    /// @src 86:4007:4089  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    finalize_allocation(expr_mpos_1, _9)\n                    /// @src 86:4141:4185  \"sendPackedUserOp.generateSignedUserOperation\"\n                    let expr_address_1 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:4141:4157  \"sendPackedUserOp\" */ 0x26)))\n                    /// @src 86:4216:4238  \"helperConfig.getConfig\"\n                    let expr_address_2 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:4216:4228  \"helperConfig\" */ 0x23)))\n                    /// @src 86:4216:4240  \"helperConfig.getConfig()\"\n                    let _10 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    let _11 := shl(226, 0x30fe4275)\n                    /// @src 86:4216:4240  \"helperConfig.getConfig()\"\n                    mstore(_10, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11)\n                    /// @src 86:4216:4240  \"helperConfig.getConfig()\"\n                    let _12 := 96\n                    let _13 := call(gas(), expr_address_2, /** @src -1:-1:-1 */ 0, /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _10, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _10, _12)\n                    if iszero(_13) { revert_forward() }\n                    let expr_mpos_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4216:4240  \"helperConfig.getConfig()\"\n                    if _13\n                    {\n                        let _14 := _12\n                        if gt(_12, returndatasize()) { _14 := returndatasize() }\n                        finalize_allocation(_10, _14)\n                        expr_mpos_2 := abi_decode_struct_NetworkConfig_fromMemory(_10, add(_10, _14))\n                    }\n                    /// @src 86:4242:4265  \"address(minimalAccount)\"\n                    let expr_2 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:3751:3765  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _15 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    mstore(_15, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xdae0f8c7))\n                    /// @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _16 := staticcall(gas(), expr_address_1, _15, sub(abi_encode_bytes_struct_NetworkConfig_address(add(_15, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\" */ expr_mpos_1, expr_mpos_2, expr_2), _15), _15, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if iszero(_16) { revert_forward() }\n                    let expr_mpos_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if _16\n                    {\n                        let _17 := returndatasize()\n                        returndatacopy(_15, /** @src -1:-1:-1 */ 0, /** @src 86:4141:4275  \"sendPackedUserOp.generateSignedUserOperation(...\" */ _17)\n                        finalize_allocation(_15, _17)\n                        expr_mpos_3 := abi_decode_struct_PackedUserOperation_fromMemory(_15, add(_15, _17))\n                    }\n                    /// @src 86:4325:4347  \"helperConfig.getConfig\"\n                    let expr_address_3 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:4216:4228  \"helperConfig\" */ 0x23)))\n                    /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                    let _18 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                    mstore(_18, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11)\n                    /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                    let _19 := call(gas(), expr_address_3, /** @src -1:-1:-1 */ 0, /** @src 86:4325:4349  \"helperConfig.getConfig()\" */ _18, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:4325:4349  \"helperConfig.getConfig()\" */ _18, /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12)\n                    /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                    if iszero(_19) { revert_forward() }\n                    let expr_mpos_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                    if _19\n                    {\n                        let _20 := /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12\n                        /// @src 86:4325:4349  \"helperConfig.getConfig()\"\n                        if gt(/** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12, /** @src 86:4325:4349  \"helperConfig.getConfig()\" */ returndatasize()) { _20 := returndatasize() }\n                        finalize_allocation(_18, _20)\n                        expr_mpos_4 := abi_decode_struct_NetworkConfig_fromMemory(_18, add(_18, _20))\n                    }\n                    /// @src 86:4313:4375  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash\"\n                    let expr_address_4 := cleanup_address(/** @src 86:4313:4361  \"IEntryPoint(helperConfig.getConfig().entryPoint)\" */ cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(mload(/** @src 86:4325:4360  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_4))))\n                    /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    let _21 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    mstore(_21, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(226, 0x08b37793))\n                    /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    let _22 := staticcall(gas(), expr_address_4, _21, sub(abi_encode_struct_PackedUserOperation(add(_21, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\" */ expr_mpos_3), _21), _21, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3)\n                    /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    if iszero(_22) { revert_forward() }\n                    let expr_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                    if _22\n                    {\n                        let _23 := /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3\n                        /// @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\"\n                        if gt(/** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3, /** @src 86:4313:4389  \"IEntryPoint(helperConfig.getConfig().entryPoint).getUserOpHash(packedUserOp)\" */ returndatasize()) { _23 := returndatasize() }\n                        finalize_allocation(_21, _23)\n                        expr_3 := abi_decode_uint256_fromMemory(_21, add(_21, _23))\n                    }\n                    /// @src 86:4468:4490  \"helperConfig.getConfig\"\n                    let expr_address_5 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:4216:4228  \"helperConfig\" */ 0x23)))\n                    /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                    let _24 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                    mstore(_24, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11)\n                    /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                    let _25 := call(gas(), expr_address_5, /** @src -1:-1:-1 */ 0, /** @src 86:4468:4492  \"helperConfig.getConfig()\" */ _24, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:4468:4492  \"helperConfig.getConfig()\" */ _24, /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12)\n                    /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                    if iszero(_25) { revert_forward() }\n                    let expr_mpos_5 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                    if _25\n                    {\n                        let _26 := /** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12\n                        /// @src 86:4468:4492  \"helperConfig.getConfig()\"\n                        if gt(/** @src 86:4216:4240  \"helperConfig.getConfig()\" */ _12, /** @src 86:4468:4492  \"helperConfig.getConfig()\" */ returndatasize()) { _26 := returndatasize() }\n                        finalize_allocation(_24, _26)\n                        expr_mpos_5 := abi_decode_struct_NetworkConfig_fromMemory(_24, add(_24, _26))\n                    }\n                    /// @src 86:4468:4503  \"helperConfig.getConfig().entryPoint\"\n                    let _27 := /** @src 86:1010:1014  \"1e18\" */ cleanup_address(mload(/** @src 86:4468:4503  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_5))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _28 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _28))\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    let _29 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    mstore(_29, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    let _30 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _28, /** @src -1:-1:-1 */ 0, /** @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\" */ _29, sub(abi_encode_address(add(_29, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\" */ _27), _29), _29, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:4459:4504  \"vm.prank(helperConfig.getConfig().entryPoint)\"\n                    if iszero(_30) { revert_forward() }\n                    if _30\n                    {\n                        finalize_allocation_12471(_29)\n                        abi_decode(_29, _29)\n                    }\n                    /// @src 86:4539:4568  \"minimalAccount.validateUserOp\"\n                    let expr_address_6 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:3751:3765  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                    let _31 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                    mstore(_31, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(226, 0x06608bdf))\n                    /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                    let _32 := call(gas(), expr_address_6, /** @src -1:-1:-1 */ 0, /** @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\" */ _31, sub(abi_encode_struct_PackedUserOperation_bytes32_uint256(add(_31, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\" */ expr_mpos_3, expr_3), _31), _31, /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3)\n                    /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                    if iszero(_32) { revert_forward() }\n                    let expr_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                    if _32\n                    {\n                        let _33 := /** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3\n                        /// @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\"\n                        if gt(/** @src 86:3728:3767  \"usdc.balanceOf(address(minimalAccount))\" */ _3, /** @src 86:4539:4622  \"minimalAccount.validateUserOp(packedUserOp, userOperationHash, missingAccountFunds)\" */ returndatasize()) { _33 := returndatasize() }\n                        finalize_allocation(_31, _33)\n                        expr_4 := abi_decode_uint256_fromMemory(_31, add(_31, _33))\n                    }\n                    /// @src 86:4632:4659  \"assertEq(validationData, 0)\"\n                    fun_assertEq_12458(expr_4)\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_encode_struct_PackedUserOperation_bytes32_uint256(headStart, value0, value1) -> tail\n            {\n                mstore(headStart, 96)\n                tail := abi_encode_struct_PackedUserOperation_memory_ptr(value0, add(headStart, 96))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 32), /** @src 86:1010:1014  \"1e18\" */ value1)\n                mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(headStart, 64), /** @src 86:1010:1014  \"1e18\" */ 0x0de0b6b3a7640000)\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function array_dataslot_array_address_dyn_storage(ptr) -> data\n            {\n                mstore(0, ptr)\n                data := keccak256(0, 0x20)\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync_52300()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:1518:1532  \"usdc.balanceOf\"\n                    let expr_address := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:1518:1522  \"usdc\" */ 0x25)))\n                    /// @src 86:1533:1556  \"address(minimalAccount)\"\n                    let expr := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:1541:1555  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _1 := 64\n                    /// @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    let _3 := shl(224, 0x70a08231)\n                    /// @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _3)\n                    /// @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _4 := 32\n                    let _5 := staticcall(gas(), expr_address, _2, sub(abi_encode_address(add(_2, 4), expr), _2), _2, _4)\n                    if iszero(_5) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _5\n                    {\n                        let _6 := _4\n                        if gt(_4, returndatasize()) { _6 := returndatasize() }\n                        finalize_allocation(_2, _6)\n                        expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _6))\n                    }\n                    /// @src 86:1509:1561  \"assertEq(usdc.balanceOf(address(minimalAccount)), 0)\"\n                    fun_assertEq_12458(expr_1)\n                    /// @src 86:1664:1744  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1664:1744  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(add(expr_mpos, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:2832:2855  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                    /// @src 86:1664:1744  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let _7 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 86:1541:1555  \"minimalAccount\" */ 0x24), /** @src 86:1664:1744  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ expr), expr_mpos)\n                    mstore(expr_mpos, add(_7, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)))\n                    /// @src 86:1664:1744  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    finalize_allocation(expr_mpos, _7)\n                    /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                    let _8 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                    mstore(_8, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x8da5cb5b))\n                    /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                    let _9 := staticcall(gas(), expr, _8, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ 4, /** @src 86:1778:1800  \"minimalAccount.owner()\" */ _8, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4)\n                    /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                    if iszero(_9) { revert_forward() }\n                    let expr_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                    if _9\n                    {\n                        let _10 := /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4\n                        /// @src 86:1778:1800  \"minimalAccount.owner()\"\n                        if gt(/** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:1778:1800  \"minimalAccount.owner()\" */ returndatasize()) { _10 := returndatasize() }\n                        finalize_allocation(_8, _10)\n                        expr_2 := abi_decode_tuple_address_fromMemory(_8, add(_8, _10))\n                    }\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _11 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11))\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    let _12 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    mstore(_12, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    let _13 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _11, /** @src -1:-1:-1 */ 0, /** @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\" */ _12, sub(abi_encode_address(add(_12, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ 4), /** @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\" */ expr_2), _12), _12, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:1769:1801  \"vm.prank(minimalAccount.owner())\"\n                    if iszero(_13) { revert_forward() }\n                    if _13\n                    {\n                        finalize_allocation_12471(_12)\n                        abi_decode(_12, _12)\n                    }\n                    /// @src 86:1811:1833  \"minimalAccount.execute\"\n                    let expr_address_1 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:1541:1555  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\"\n                    if iszero(extcodesize(expr_address_1))\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\"\n                    let _14 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\"\n                    mstore(_14, /** @src 86:2965:2996  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                    /// @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\"\n                    let _15 := call(gas(), expr_address_1, /** @src -1:-1:-1 */ 0, /** @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\" */ _14, sub(abi_encode_address_uint256_bytes(add(_14, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ 4), /** @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\" */ expr_address, expr_mpos), _14), _14, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:1811:1860  \"minimalAccount.execute(dest, value, functionData)\"\n                    if iszero(_15) { revert_forward() }\n                    if _15\n                    {\n                        finalize_allocation_12471(_14)\n                        abi_decode(_14, _14)\n                    }\n                    /// @src 86:1980:1994  \"usdc.balanceOf\"\n                    let expr_address_2 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:1518:1522  \"usdc\" */ 0x25)))\n                    /// @src 86:1995:2018  \"address(minimalAccount)\"\n                    let expr_3 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:1541:1555  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _16 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_16, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _3)\n                    /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _17 := staticcall(gas(), expr_address_2, _16, sub(abi_encode_address(add(_16, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ 4), /** @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\" */ expr_3), _16), _16, /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4)\n                    /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                    if iszero(_17) { revert_forward() }\n                    let expr_4 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _17\n                    {\n                        let _18 := /** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4\n                        /// @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\"\n                        if gt(/** @src 86:1518:1557  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:1980:2019  \"usdc.balanceOf(address(minimalAccount))\" */ returndatasize()) { _18 := returndatasize() }\n                        finalize_allocation(_16, _18)\n                        expr_4 := abi_decode_uint256_fromMemory(_16, add(_16, _18))\n                    }\n                    /// @src 86:2021:2027  \"AMOUNT\"\n                    fun_assertEq_12485(expr_4)\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function array_allocation_size_array_struct_FuzzInterface_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n                size := add(shl(5, length), 0x20)\n            }\n            function copy_array_from_storage_to_memory_string(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let ret := /** @src -1:-1:-1 */ 0\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let slotValue := sload(slot)\n                let length := /** @src -1:-1:-1 */ ret\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := 1\n                length := shr(1, slotValue)\n                let outOfPlaceEncoding := and(slotValue, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                let _2 := 32\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(/** @src -1:-1:-1 */ ret, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(/** @src -1:-1:-1 */ ret, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0x24)\n                }\n                let pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                switch outOfPlaceEncoding\n                case 0 {\n                    mstore(pos, and(slotValue, not(255)))\n                    ret := add(pos, shl(5, iszero(iszero(length))))\n                }\n                case 1 {\n                    let dataPos := array_dataslot_array_address_dyn_storage(slot)\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    for { } lt(i, length) { i := add(i, _2) }\n                    {\n                        mstore(add(pos, i), sload(dataPos))\n                        dataPos := add(dataPos, _1)\n                    }\n                    ret := add(pos, i)\n                }\n                finalize_allocation(memPtr, sub(ret, memPtr))\n            }\n            function copy_array_from_storage_to_memory_array_string__dyn(slot) -> memPtr\n            {\n                let length := sload(slot)\n                let _1 := array_allocation_size_array_struct_FuzzInterface_dyn(length)\n                let memPtr_1 := mload(64)\n                finalize_allocation(memPtr_1, _1)\n                mstore(memPtr_1, length)\n                memPtr := memPtr_1\n                let mpos := memPtr_1\n                let _2 := 0x20\n                mpos := add(memPtr_1, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ slot)\n                let spos := keccak256(/** @src -1:-1:-1 */ 0, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(mpos, copy_array_from_storage_to_memory_string(spos))\n                    mpos := add(mpos, _2)\n                    spos := add(spos, 1)\n                }\n            }\n            /// @ast-id 42980 @src 41:291:623  \"function isOnZkSyncChainId() public view returns (bool) {...\"\n            function fun_isOnZkSyncChainId() -> var\n            {\n                /// @src 41:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                let expr := /** @src 41:480:517  \"block.chainid == zkSyncMainnetChainId\" */ eq(/** @src 41:480:493  \"block.chainid\" */ chainid(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sload(/** @src 41:497:517  \"zkSyncMainnetChainId\" */ 0x20))\n                /// @src 41:480:558  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId\"\n                if iszero(expr)\n                {\n                    expr := /** @src 41:521:558  \"block.chainid == zkSyncSepoliaChainId\" */ eq(/** @src 41:480:493  \"block.chainid\" */ chainid(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sload(/** @src 41:538:558  \"zkSyncSepoliaChainId\" */ 0x21))\n                }\n                /// @src 41:480:616  \"block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                let expr_1 := expr\n                if iszero(expr)\n                {\n                    expr_1 := /** @src 41:574:616  \"block.chainid == zkSyncInMemoryNodeChainId\" */ eq(/** @src 41:480:493  \"block.chainid\" */ chainid(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sload(/** @src 41:591:616  \"zkSyncInMemoryNodeChainId\" */ 0x22))\n                }\n                /// @src 41:473:616  \"return block.chainid == zkSyncMainnetChainId || block.chainid == zkSyncSepoliaChainId...\"\n                var := expr_1\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function copy_array_from_storage_to_memory_array_bytes4_dyn(slot) -> memPtr\n            {\n                let _1 := 64\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                pos := array_storeLengthForEncoding_array_address_dyn(memPtr, length)\n                let srcPtr := array_dataslot_array_address_dyn_storage(slot)\n                let itemCounter := /** @src -1:-1:-1 */ 0\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                for { }\n                lt(add(itemCounter, 7), length)\n                {\n                    itemCounter := add(itemCounter, 8)\n                }\n                {\n                    let data := sload(srcPtr)\n                    let _2 := 224\n                    abi_encode_bytes4(shl(_2, data), pos)\n                    let _3 := 0x20\n                    let _4 := shl(224, 0xffffffff)\n                    let _5 := 192\n                    abi_encode_bytes4(and(shl(_5, data), _4), add(pos, _3))\n                    let _6 := 160\n                    abi_encode_bytes4(and(shl(_6, data), _4), add(pos, _1))\n                    let _7 := 96\n                    let _8 := 128\n                    abi_encode_bytes4(and(shl(_8, data), _4), add(pos, _7))\n                    abi_encode_bytes4(and(shl(_7, data), _4), add(pos, _8))\n                    abi_encode_bytes4(and(shl(_1, data), _4), add(pos, _6))\n                    abi_encode_bytes4(and(shl(_3, data), _4), add(pos, _5))\n                    abi_encode_bytes4(and(data, _4), add(pos, _2))\n                    pos := add(pos, 256)\n                    srcPtr := add(srcPtr, 1)\n                }\n                let data_1 := sload(srcPtr)\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(shl(224, data_1), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(192, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(160, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(128, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(96, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(64, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(shl(0x20, data_1), shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                    itemCounter := add(itemCounter, 1)\n                }\n                if lt(itemCounter, length)\n                {\n                    abi_encode_bytes4(and(data_1, shl(224, 0xffffffff)), pos)\n                    pos := add(pos, 0x20)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:4784:4798  \"usdc.balanceOf\"\n                    let expr_address := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:4784:4788  \"usdc\" */ 0x25)))\n                    /// @src 86:4799:4822  \"address(minimalAccount)\"\n                    let expr := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:4807:4821  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _1 := 64\n                    /// @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    let _3 := shl(224, 0x70a08231)\n                    /// @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _3)\n                    /// @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _4 := 32\n                    let _5 := 4\n                    let _6 := staticcall(gas(), expr_address, _2, sub(abi_encode_address(add(_2, _5), expr), _2), _2, _4)\n                    if iszero(_6) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _6\n                    {\n                        let _7 := _4\n                        if gt(_4, returndatasize()) { _7 := returndatasize() }\n                        finalize_allocation(_2, _7)\n                        expr_1 := abi_decode_uint256_fromMemory(_2, add(_2, _7))\n                    }\n                    /// @src 86:4775:4827  \"assertEq(usdc.balanceOf(address(minimalAccount)), 0)\"\n                    fun_assertEq_12458(expr_1)\n                    /// @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(add(expr_mpos, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:2832:2855  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                    /// @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let _8 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 86:4807:4821  \"minimalAccount\" */ 0x24), /** @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ expr), expr_mpos)\n                    let _9 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)\n                    /// @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(expr_mpos, add(_8, _9))\n                    finalize_allocation(expr_mpos, _8)\n                    /// @src 86:5063:5145  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let expr_mpos_1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5063:5145  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    mstore(add(expr_mpos_1, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _4), /** @src 86:2965:2996  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                    /// @src 86:5063:5145  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    let _10 := sub(abi_encode_address_uint256_bytes(add(expr_mpos_1, /** @src 86:4807:4821  \"minimalAccount\" */ 0x24), /** @src 86:5063:5145  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_address, expr_mpos), expr_mpos_1)\n                    mstore(expr_mpos_1, add(_10, /** @src 86:4930:5010  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ _9))\n                    /// @src 86:5063:5145  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                    finalize_allocation(expr_mpos_1, _10)\n                    /// @src 86:5197:5241  \"sendPackedUserOp.generateSignedUserOperation\"\n                    let expr_address_1 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:5197:5213  \"sendPackedUserOp\" */ 0x26)))\n                    /// @src 86:5272:5294  \"helperConfig.getConfig\"\n                    let expr_address_2 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:5272:5284  \"helperConfig\" */ 0x23)))\n                    /// @src 86:5272:5296  \"helperConfig.getConfig()\"\n                    let _11 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    let _12 := shl(226, 0x30fe4275)\n                    /// @src 86:5272:5296  \"helperConfig.getConfig()\"\n                    mstore(_11, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _12)\n                    /// @src 86:5272:5296  \"helperConfig.getConfig()\"\n                    let _13 := 96\n                    let _14 := call(gas(), expr_address_2, /** @src -1:-1:-1 */ 0, /** @src 86:5272:5296  \"helperConfig.getConfig()\" */ _11, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5, /** @src 86:5272:5296  \"helperConfig.getConfig()\" */ _11, _13)\n                    if iszero(_14) { revert_forward() }\n                    let expr_mpos_2 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:5272:5296  \"helperConfig.getConfig()\"\n                    if _14\n                    {\n                        let _15 := _13\n                        if gt(_13, returndatasize()) { _15 := returndatasize() }\n                        finalize_allocation(_11, _15)\n                        expr_mpos_2 := abi_decode_struct_NetworkConfig_fromMemory(_11, add(_11, _15))\n                    }\n                    /// @src 86:5298:5321  \"address(minimalAccount)\"\n                    let expr_2 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:4807:4821  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _16 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    mstore(_16, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xdae0f8c7))\n                    /// @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    let _17 := staticcall(gas(), expr_address_1, _16, sub(abi_encode_bytes_struct_NetworkConfig_address(add(_16, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5), /** @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\" */ expr_mpos_1, expr_mpos_2, expr_2), _16), _16, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if iszero(_17) { revert_forward() }\n                    let expr_mpos_3 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\"\n                    if _17\n                    {\n                        let _18 := returndatasize()\n                        returndatacopy(_16, /** @src -1:-1:-1 */ 0, /** @src 86:5197:5331  \"sendPackedUserOp.generateSignedUserOperation(...\" */ _18)\n                        finalize_allocation(_16, _18)\n                        expr_mpos_3 := abi_decode_struct_PackedUserOperation_fromMemory(_16, add(_16, _18))\n                    }\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _19 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _19))\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    let _20 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    mstore(_20, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xc88a5e6d))\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    let _21 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _19, /** @src -1:-1:-1 */ 0, /** @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\" */ _20, sub(abi_encode_address_uint256(add(_20, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5), /** @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\" */ expr_2), _20), _20, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:5459:5497  \"vm.deal(address(minimalAccount), 1e18)\"\n                    if iszero(_21) { revert_forward() }\n                    if _21\n                    {\n                        finalize_allocation_12471(_20)\n                        abi_decode(_20, _20)\n                    }\n                    /// @src 86:5566:5594  \"new PackedUserOperation[](1)\"\n                    let expr_mpos_4 := allocate_and_zero_memory_array_array_struct_PackedUserOperation_dyn()\n                    /// @src 86:5604:5625  \"ops[0] = packedUserOp\"\n                    mstore(memory_array_index_access_struct_PackedUserOperation_dyn(expr_mpos_4), expr_mpos_3)\n                    pop(memory_array_index_access_struct_PackedUserOperation_dyn(expr_mpos_4))\n                    /// @src 86:5660:5670  \"randomuser\"\n                    let _22 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:5660:5670  \"randomuser\" */ 0x27))\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _19))\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    let _23 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    mstore(_23, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    let _24 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _19, /** @src -1:-1:-1 */ 0, /** @src 86:5651:5671  \"vm.prank(randomuser)\" */ _23, sub(abi_encode_address(add(_23, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5), /** @src 86:5651:5671  \"vm.prank(randomuser)\" */ _22), _23), _23, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:5651:5671  \"vm.prank(randomuser)\"\n                    if iszero(_24) { revert_forward() }\n                    if _24\n                    {\n                        finalize_allocation_12471(_23)\n                        abi_decode(_23, _23)\n                    }\n                    /// @src 86:5693:5715  \"helperConfig.getConfig\"\n                    let expr_address_3 := cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(sload(/** @src 86:5272:5284  \"helperConfig\" */ 0x23)))\n                    /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                    let _25 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                    mstore(_25, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _12)\n                    /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                    let _26 := call(gas(), expr_address_3, /** @src -1:-1:-1 */ 0, /** @src 86:5693:5717  \"helperConfig.getConfig()\" */ _25, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5, /** @src 86:5693:5717  \"helperConfig.getConfig()\" */ _25, /** @src 86:5272:5296  \"helperConfig.getConfig()\" */ _13)\n                    /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                    if iszero(_26) { revert_forward() }\n                    let expr_mpos_5 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                    if _26\n                    {\n                        let _27 := /** @src 86:5272:5296  \"helperConfig.getConfig()\" */ _13\n                        /// @src 86:5693:5717  \"helperConfig.getConfig()\"\n                        if gt(/** @src 86:5272:5296  \"helperConfig.getConfig()\" */ _13, /** @src 86:5693:5717  \"helperConfig.getConfig()\" */ returndatasize()) { _27 := returndatasize() }\n                        finalize_allocation(_25, _27)\n                        expr_mpos_5 := abi_decode_struct_NetworkConfig_fromMemory(_25, add(_25, _27))\n                    }\n                    /// @src 86:5681:5739  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps\"\n                    let expr_address_4 := cleanup_address(/** @src 86:5681:5729  \"IEntryPoint(helperConfig.getConfig().entryPoint)\" */ cleanup_address(/** @src 86:1010:1014  \"1e18\" */ cleanup_address(mload(/** @src 86:5693:5728  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_5))))\n                    /// @src 86:5745:5764  \"payable(randomuser)\"\n                    let expr_3 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:5660:5670  \"randomuser\" */ 0x27)))\n                    /// @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\"\n                    if iszero(extcodesize(expr_address_4))\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\"\n                    let _28 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\"\n                    mstore(_28, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x765e827f))\n                    /// @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\"\n                    let _29 := call(gas(), expr_address_4, /** @src -1:-1:-1 */ 0, /** @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\" */ _28, sub(abi_encode_array_struct_PackedUserOperation_dyn_address_payable(add(_28, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5), /** @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\" */ expr_mpos_4, expr_3), _28), _28, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:5681:5765  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(randomuser))\"\n                    if iszero(_29) { revert_forward() }\n                    if _29\n                    {\n                        finalize_allocation_12471(_28)\n                        abi_decode(_28, _28)\n                    }\n                    /// @src 86:5803:5817  \"usdc.balanceOf\"\n                    let expr_address_5 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:4784:4788  \"usdc\" */ 0x25)))\n                    /// @src 86:5818:5841  \"address(minimalAccount)\"\n                    let expr_4 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:4807:4821  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _30 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(_1)\n                    /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_30, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _3)\n                    /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _31 := staticcall(gas(), expr_address_5, _30, sub(abi_encode_address(add(_30, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _5), /** @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\" */ expr_4), _30), _30, /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _4)\n                    /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                    if iszero(_31) { revert_forward() }\n                    let expr_5 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _31\n                    {\n                        let _32 := /** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _4\n                        /// @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\"\n                        if gt(/** @src 86:4784:4823  \"usdc.balanceOf(address(minimalAccount))\" */ _4, /** @src 86:5803:5842  \"usdc.balanceOf(address(minimalAccount))\" */ returndatasize()) { _32 := returndatasize() }\n                        finalize_allocation(_30, _32)\n                        expr_5 := abi_decode_uint256_fromMemory(_30, add(_30, _32))\n                    }\n                    /// @src 86:5844:5850  \"AMOUNT\"\n                    fun_assertEq_12485(expr_5)\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function allocate_and_zero_memory_array_array_struct_PackedUserOperation_dyn() -> memPtr\n            {\n                let _1 := 64\n                let memPtr_1 := mload(64)\n                finalize_allocation_12443(memPtr_1)\n                mstore(memPtr_1, /** @src 86:5592:5593  \"1\" */ 0x01)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                memPtr := memPtr_1\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                for { } true { i := add(i, 32) }\n                {\n                    let _2 := 32\n                    if iszero(lt(i, _2)) { break }\n                    let memPtr_2 := mload(_1)\n                    finalize_allocation_12514(memPtr_2)\n                    mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _3 := 96\n                    mstore(add(memPtr_2, _1), _3)\n                    mstore(add(memPtr_2, _3), _3)\n                    mstore(add(memPtr_2, 128), /** @src -1:-1:-1 */ 0)\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_2, 160), /** @src -1:-1:-1 */ 0)\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_2, 192), /** @src -1:-1:-1 */ 0)\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    mstore(add(memPtr_2, 224), _3)\n                    mstore(add(memPtr_2, 256), _3)\n                    mstore(add(add(memPtr_1, i), _2), memPtr_2)\n                }\n            }\n            function panic_error_0x32()\n            {\n                mstore(0, shl(224, 0x4e487b71))\n                mstore(4, 0x32)\n                revert(0, 0x24)\n            }\n            function memory_array_index_access_struct_PackedUserOperation_dyn(baseRef) -> addr\n            {\n                if iszero(mload(baseRef)) { panic_error_0x32() }\n                addr := add(baseRef, 32)\n            }\n            function abi_encode_array_struct_PackedUserOperation_dyn_address_payable(headStart, value0, value1) -> tail\n            {\n                let tail_1 := add(headStart, 64)\n                mstore(headStart, 64)\n                let pos := tail_1\n                let length := mload(value0)\n                mstore(tail_1, length)\n                pos := add(headStart, 96)\n                let tail_2 := add(add(headStart, shl(5, length)), 96)\n                let _1 := 0x20\n                let srcPtr := add(value0, 0x20)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, add(sub(tail_2, headStart), not(95)))\n                    tail_2 := abi_encode_struct_PackedUserOperation_memory_ptr(mload(srcPtr), tail_2)\n                    srcPtr := add(srcPtr, _1)\n                    pos := add(pos, _1)\n                }\n                tail := tail_2\n                mstore(add(headStart, 0x20), and(value1, sub(shl(160, 1), 1)))\n            }\n            /// @ast-id 43108 @src 41:1915:2105  \"modifier skipZkSync() {...\"\n            function modifier_skipZkSync_52369()\n            {\n                /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                switch /** @src 41:1951:1966  \"isZkSyncChain()\" */ fun_isZkSyncChain()\n                case /** @src 41:1947:2099  \"if (isZkSyncChain()) {...\" */ 0 {\n                    /// @src 86:2142:2156  \"usdc.balanceOf\"\n                    let expr_address := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2142:2146  \"usdc\" */ 0x25)))\n                    /// @src 86:2157:2180  \"address(minimalAccount)\"\n                    let expr := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2165:2179  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\"\n                    mstore(_1, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0x70a08231))\n                    /// @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\"\n                    let _2 := staticcall(gas(), expr_address, _1, sub(abi_encode_address(add(_1, 4), expr), _1), _1, 32)\n                    if iszero(_2) { revert_forward() }\n                    let expr_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\"\n                    if _2\n                    {\n                        let _3 := 32\n                        if gt(32, returndatasize()) { _3 := returndatasize() }\n                        finalize_allocation(_1, _3)\n                        expr_1 := abi_decode_uint256_fromMemory(_1, add(_1, _3))\n                    }\n                    /// @src 86:2133:2185  \"assertEq(usdc.balanceOf(address(minimalAccount)), 0)\"\n                    fun_assertEq_12458(expr_1)\n                    /// @src 86:2288:2368  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let expr_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 86:2288:2368  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    mstore(add(expr_mpos, /** @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\" */ 32), /** @src 86:2832:2855  \"ERC20Mock.mint.selector\" */ shl(224, 0x40c10f19))\n                    /// @src 86:2288:2368  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    let _4 := sub(abi_encode_address_uint256(add(expr_mpos, /** @src 86:2165:2179  \"minimalAccount\" */ 0x24), /** @src 86:2288:2368  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\" */ expr), expr_mpos)\n                    mstore(expr_mpos, add(_4, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)))\n                    /// @src 86:2288:2368  \"abi.encodeWithSelector(ERC20Mock.mint.selector, address(minimalAccount), AMOUNT)\"\n                    finalize_allocation(expr_mpos, _4)\n                    /// @src 86:2402:2412  \"randomuser\"\n                    let _5 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2402:2412  \"randomuser\" */ 0x27))\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    let _6 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _6))\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    let _7 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    mstore(_7, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(224, 0xca669fa7))\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    let _8 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _6, /** @src -1:-1:-1 */ 0, /** @src 86:2393:2413  \"vm.prank(randomuser)\" */ _7, sub(abi_encode_address(add(_7, /** @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\" */ 4), /** @src 86:2393:2413  \"vm.prank(randomuser)\" */ _5), _7), _7, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:2393:2413  \"vm.prank(randomuser)\"\n                    if iszero(_8) { revert_forward() }\n                    if _8\n                    {\n                        finalize_allocation_12471(_7)\n                        abi_decode(_7, _7)\n                    }\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _6))\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    let _9 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    mstore(_9, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(229, 0x0618f587))\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    let _10 := call(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _6, /** @src -1:-1:-1 */ 0, /** @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\" */ _9, sub(abi_encode_tuple_bytes4(add(_9, /** @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\" */ 4)), /** @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\" */ _9), _9, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:2423:2504  \"vm.expectRevert(MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector)\"\n                    if iszero(_10) { revert_forward() }\n                    if _10\n                    {\n                        finalize_allocation_12471(_9)\n                        abi_decode(_9, _9)\n                    }\n                    /// @src 86:2514:2536  \"minimalAccount.execute\"\n                    let expr_address_1 := cleanup_address(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ cleanup_address(sload(/** @src 86:2165:2179  \"minimalAccount\" */ 0x24)))\n                    /// @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\"\n                    if iszero(extcodesize(expr_address_1))\n                    {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\"\n                    let _11 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\"\n                    mstore(_11, /** @src 86:2965:2996  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                    /// @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\"\n                    let _12 := call(gas(), expr_address_1, /** @src -1:-1:-1 */ 0, /** @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\" */ _11, sub(abi_encode_address_uint256_bytes(add(_11, /** @src 86:2142:2181  \"usdc.balanceOf(address(minimalAccount))\" */ 4), /** @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\" */ expr_address, expr_mpos), _11), _11, /** @src -1:-1:-1 */ 0)\n                    /// @src 86:2514:2563  \"minimalAccount.execute(dest, value, functionData)\"\n                    if iszero(_12) { revert_forward() }\n                    if _12\n                    {\n                        finalize_allocation_12471(_11)\n                        abi_decode(_11, _11)\n                    }\n                }\n                default /// @src 41:1947:2099  \"if (isZkSyncChain()) {...\"\n                {\n                    /// @src 41:1982:2036  \"console2.log(\\\"Skipping test because we are on zkSync\\\")\"\n                    fun_log(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ copy_literal_to_memory_7c88cd5a8b6b6bc5883b8ab0ce95ac5a53a6562683e0aa7ec271bd18579897cf())\n                    /// @src 41:2050:2057  \"return;\"\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function abi_encode_tuple_bytes4(headStart) -> tail\n            {\n                tail := add(headStart, 32)\n                mstore(headStart, /** @src 86:2439:2503  \"MinimalAccount.MinimalAccount__NotFromEntryPointOrOwner.selector\" */ shl(227, 0x0a1c585d))\n            }\n            /// @ast-id 3987 @src 17:1243:1447  \"function failed() public view returns (bool) {...\"\n            function fun_failed() -> var\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let value := and(sload(/** @src 17:1302:1309  \"_failed\" */ 0x08), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0xff)\n                /// @src 17:1298:1441  \"if (_failed) {...\"\n                switch /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ value\n                case /** @src 17:1298:1441  \"if (_failed) {...\" */ 0 {\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    mstore(_1, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(228, 0x0667f9d7))\n                    let _2 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                    mstore(/** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ add(_1, 4), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _2)\n                    /// @src 86:1010:1014  \"1e18\"\n                    mstore(/** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), shl(210, 0x19985a5b1959))\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    let _3 := staticcall(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _2, /** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, /** @src 17:192:251  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68, /** @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\" */ _1, 32)\n                    if iszero(_3) { revert_forward() }\n                    let expr := /** @src -1:-1:-1 */ 0\n                    /// @src 17:1377:1416  \"vm.load(address(vm), bytes32(\\\"failed\\\"))\"\n                    if _3\n                    {\n                        let _4 := 32\n                        if gt(32, returndatasize()) { _4 := returndatasize() }\n                        finalize_allocation(_1, _4)\n                        expr := abi_decode_uint256_fromMemory(_1, add(_1, _4))\n                    }\n                    /// @src 17:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    var := /** @src 17:1377:1430  \"vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\" */ iszero(iszero(expr))\n                    /// @src 17:1370:1430  \"return vm.load(address(vm), bytes32(\\\"failed\\\")) != bytes32(0)\"\n                    leave\n                }\n                default /// @src 17:1298:1441  \"if (_failed) {...\"\n                {\n                    /// @src 17:1325:1339  \"return _failed\"\n                    var := value\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function memory_array_index_access_address(baseRef, index) -> addr\n            {\n                if iszero(lt(index, 0x04)) { panic_error_0x32() }\n                addr := add(baseRef, shl(5, index))\n            }\n            /// @ast-id 43077 @src 41:629:1726  \"function isOnZkSyncPrecompiles() public returns (bool isZkSync) {...\"\n            function fun_isOnZkSyncPrecompiles() -> var_isZkSync\n            {\n                /// @src 41:678:691  \"bool isZkSync\"\n                var_isZkSync := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0\n                /// @src 41:678:691  \"bool isZkSync\"\n                let var_isZkSync_1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 3)\n                let _1 := 4\n                mstore(/** @src 41:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 32), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 4)\n                mstore(/** @src 41:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 64), 5)\n                mstore(/** @src 41:1313:1350  \"[ripemd, identity, modexp, ecPairing]\" */ add(memPtr, 96), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 8)\n                /// @src 41:1366:1379  \"uint256 i = 0\"\n                let var_i := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 0\n                /// @src 41:1361:1695  \"for (uint256 i = 0; i < targets.length; i++) {...\"\n                for { }\n                /** @src 41:1381:1399  \"i < targets.length\" */ lt(var_i, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1)\n                /// @src 41:1366:1379  \"uint256 i = 0\"\n                {\n                    /// @src 41:1401:1404  \"i++\"\n                    var_i := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ add(/** @src 41:1401:1404  \"i++\" */ var_i, /** @src 41:1084:1085  \"1\" */ 0x01)\n                }\n                /// @src 41:1401:1404  \"i++\"\n                {\n                    /// @src 41:1084:1085  \"1\"\n                    let _2 := 0x01\n                    /// @src 41:1590:1685  \"if (!success) {...\"\n                    if /** @src 41:1594:1602  \"!success\" */ cleanup_bool(iszero(/** @src 41:1487:1577  \"assembly {...\" */ call(gas(), /** @src 41:1463:1473  \"targets[i]\" */ read_from_memoryt_address(memory_array_index_access_address(memPtr, var_i)), /** @src 41:1084:1085  \"1\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ var_isZkSync_1, var_isZkSync_1, var_isZkSync_1, var_isZkSync_1)))\n                    /// @src 41:1590:1685  \"if (!success) {...\"\n                    {\n                        /// @src 41:1655:1670  \"return isZkSync\"\n                        var_isZkSync := /** @src 41:1084:1085  \"1\" */ _2\n                        /// @src 41:1655:1670  \"return isZkSync\"\n                        leave\n                    }\n                }\n                /// @src 41:1704:1719  \"return isZkSync\"\n                var_isZkSync := var_isZkSync\n            }\n            /// @ast-id 20328 @src 30:6114:6235  \"function log(string memory p0) internal pure {...\"\n            function fun_log(var_p0_mpos)\n            {\n                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let expr_20324_mpos := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                let _1 := add(expr_20324_mpos, 0x20)\n                mstore(_1, shl(226, 0x104c13eb))\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_20324_mpos, 36), 0x20)\n                let _2 := sub(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ abi_encode_string(var_p0_mpos, add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_20324_mpos, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 68)), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_20324_mpos)\n                mstore(expr_20324_mpos, add(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ not(31)))\n                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                finalize_allocation(expr_20324_mpos, _2)\n                /// @src 30:762:921  \"assembly {...\"\n                pop(staticcall(gas(), /** @src 30:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 30:762:921  \"assembly {...\" */ _1, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 30:645:659  \"payload.length\" */ expr_20324_mpos), /** @src -1:-1:-1 */ 0, 0))\n            }\n            /// @ast-id 4117 @src 17:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_12458(var_left)\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(226, 0x260a5b15))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:1010:1014  \"1e18\" */ var_left)\n                mstore(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ add(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 36), /** @src -1:-1:-1 */ 0)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 68, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src -1:-1:-1 */ 0)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_12471(_2) }\n            }\n            /// @ast-id 4117 @src 17:2270:2380  \"function assertEq(uint256 left, uint256 right) internal pure virtual {...\"\n            function fun_assertEq_12485(var_left)\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(226, 0x260a5b15))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:1010:1014  \"1e18\" */ var_left)\n                mstore(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ add(/** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 36), /** @src 86:1010:1014  \"1e18\" */ 0x0de0b6b3a7640000)\n                /// @src 17:2349:2373  \"vm.assertEq(left, right)\"\n                let _3 := staticcall(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 68, /** @src 17:2349:2373  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_3) { revert_forward() }\n                if _3 { finalize_allocation_12471(_2) }\n            }\n            /// @ast-id 49730 @src 76:1222:1682  \"function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {...\"\n            function fun_toEthSignedMessageHash(var_messageHash) -> var_digest\n            {\n                /// @src 76:1367:1676  \"assembly {...\"\n                mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\")\n                mstore(0x1c, var_messageHash)\n                var_digest := keccak256(0x00, 0x3c)\n            }\n            /// @ast-id 49471 @src 75:3702:3957  \"function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {...\"\n            function fun_recover(var_hash, var_signature_49446_mpos) -> var\n            {\n                /// @src 75:3859:3886  \"tryRecover(hash, signature)\"\n                let expr_component, expr_49461_component, expr_component_1 := fun_tryRecover(var_hash, var_signature_49446_mpos)\n                /// @src 75:3915:3923  \"errorArg\"\n                fun_throwError(expr_49461_component, expr_component_1)\n                /// @src 75:3934:3950  \"return recovered\"\n                var := expr_component\n            }\n            /// @ast-id 4261 @src 17:3454:3564  \"function assertEq(address left, address right) internal pure virtual {...\"\n            function fun_assertEq(var_left, var_right)\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                let _1 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                /// @src 17:3533:3557  \"vm.assertEq(left, right)\"\n                if iszero(extcodesize(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1))\n                /// @src 17:3533:3557  \"vm.assertEq(left, right)\"\n                {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    revert(0, 0)\n                }\n                /// @src 17:3533:3557  \"vm.assertEq(left, right)\"\n                let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 17:3533:3557  \"vm.assertEq(left, right)\"\n                mstore(_2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ shl(225, 0x28a9b0fb))\n                let _3 := sub(shl(160, 1), 1)\n                mstore(/** @src 17:3533:3557  \"vm.assertEq(left, right)\" */ add(_2, 4), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(var_left, _3))\n                mstore(add(/** @src 17:3533:3557  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 36), and(var_right, _3))\n                /// @src 17:3533:3557  \"vm.assertEq(left, right)\"\n                let _4 := staticcall(gas(), /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ _1, /** @src 17:3533:3557  \"vm.assertEq(left, right)\" */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 68, /** @src 17:3533:3557  \"vm.assertEq(left, right)\" */ _2, 0)\n                if iszero(_4) { revert_forward() }\n                if _4 { finalize_allocation_12471(_2) }\n            }\n            /// @ast-id 49441 @src 75:2129:2895  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {...\"\n            function fun_tryRecover(var_hash, var_signature_mpos) -> var_, var, var_1\n            {\n                /// @src 75:2256:2272  \"signature.length\"\n                let expr := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(/** @src 75:2256:2272  \"signature.length\" */ var_signature_mpos)\n                /// @src 75:2252:2889  \"if (signature.length == 65) {...\"\n                switch /** @src 75:2256:2278  \"signature.length == 65\" */ eq(expr, /** @src 75:2276:2278  \"65\" */ 0x41)\n                case /** @src 75:2252:2889  \"if (signature.length == 65) {...\" */ 0 {\n                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                    var_ := /** @src 75:2811:2812  \"0\" */ 0x00\n                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                    var := /** @src 75:2815:2850  \"RecoverError.InvalidSignatureLength\" */ 2\n                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                    var_1 := expr\n                    leave\n                }\n                default /// @src 75:2252:2889  \"if (signature.length == 65) {...\"\n                {\n                    /// @src 75:2539:2719  \"assembly {...\"\n                    let var_r := mload(add(var_signature_mpos, 0x20))\n                    /// @src 75:2739:2764  \"tryRecover(hash, v, r, s)\"\n                    let expr_49422_component, expr_component, expr_49422_component_1 := fun_tryRecover_49629(var_hash, /** @src 75:2539:2719  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 75:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x60))), /** @src 75:2739:2764  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 75:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x40)))\n                    /// @src 75:2732:2764  \"return tryRecover(hash, v, r, s)\"\n                    var_ := expr_49422_component\n                    var := expr_component\n                    var_1 := expr_49422_component_1\n                    leave\n                }\n            }\n            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n            function validator_assert_enum_RecoverError(value)\n            {\n                if iszero(lt(value, 4))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_bytes32(headStart, value0) -> tail\n            {\n                tail := add(headStart, 32)\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(headStart, value0)\n            }\n            /// @ast-id 49714 @src 75:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n            function fun_throwError(var_error, var_errorArg)\n            {\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                validator_assert_enum_RecoverError(var_error)\n                /// @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                switch /** @src 75:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                case /** @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                    /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                    validator_assert_enum_RecoverError(var_error)\n                    /// @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    switch /** @src 75:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 75:7387:7416  \"RecoverError.InvalidSignature\" */ 1)\n                    case /** @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                        /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                        validator_assert_enum_RecoverError(var_error)\n                        /// @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        switch /** @src 75:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 75:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                        case /** @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                            /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                            validator_assert_enum_RecoverError(var_error)\n                            /// @src 75:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            if /** @src 75:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 75:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                            /// @src 75:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                            {\n                                /// @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                let _1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                                /// @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                mstore(_1, shl(226, 0x35e2f383))\n                                revert(_1, sub(abi_encode_bytes32(add(_1, 4), var_errorArg), _1))\n                            }\n                        }\n                        default /// @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                        {\n                            /// @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            let _2 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                            /// @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                            mstore(_2, shl(224, 0xfce698f7))\n                            revert(_2, sub(abi_encode_bytes32(add(_2, 4), var_errorArg), _2))\n                        }\n                    }\n                    default /// @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                    {\n                        /// @src 75:7439:7462  \"ECDSAInvalidSignature()\"\n                        let _3 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                        /// @src 75:7439:7462  \"ECDSAInvalidSignature()\"\n                        mstore(_3, shl(224, 0xf645eedf))\n                        revert(_3, 4)\n                    }\n                }\n                default /// @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                {\n                    /// @src 75:7327:7334  \"return;\"\n                    leave\n                }\n            }\n            /// @ast-id 49629 @src 75:5140:6670  \"function tryRecover(...\"\n            function fun_tryRecover_49629(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n            {\n                /// @src 75:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                if /** @src 75:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 75:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                /// @src 75:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                {\n                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var := /** @src 75:6297:6298  \"0\" */ 0x00\n                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_1 := /** @src 75:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                    var_2 := var_s\n                    leave\n                }\n                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                let _1 := /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ mload(64)\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(_1, var_hash)\n                /// @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\"\n                mstore(add(_1, 32), and(var_v, 0xff))\n                /// @src 86:1010:1014  \"1e18\"\n                mstore(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ add(_1, 64), /** @src 86:1010:1014  \"1e18\" */ var_r)\n                mstore(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ add(_1, 96), /** @src 86:1010:1014  \"1e18\" */ var_s)\n                /// @src -1:-1:-1\n                let _2 := 0\n                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                mstore(/** @src -1:-1:-1 */ _2, _2)\n                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                if iszero(staticcall(gas(), 1, _1, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ 32))\n                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                { revert_forward() }\n                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                /// @src 75:6491:6604  \"if (signer == address(0)) {...\"\n                if /** @src 75:6495:6515  \"signer == address(0)\" */ iszero(/** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ and(/** @src 75:6495:6515  \"signer == address(0)\" */ _3, /** @src 86:705:5860  \"contract MinimalAccountTest is Test, ZkSyncChainChecker {...\" */ sub(shl(160, 1), 1)))\n                /// @src 75:6491:6604  \"if (signer == address(0)) {...\"\n                {\n                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var := /** @src -1:-1:-1 */ _2\n                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_1 := /** @src 75:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    var_2 := /** @src -1:-1:-1 */ _2\n                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                    leave\n                }\n                /// @src 75:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var := _3\n                var_1 := /** @src -1:-1:-1 */ _2\n                /// @src 75:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                var_2 := /** @src -1:-1:-1 */ _2\n            }\n        }\n        /// @use-src 64:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 67:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 68:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n        object \"ERC20Mock_47815\" {\n            code {\n                {\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _1 := memoryguard(0x80)\n                    if callvalue() { revert(0, 0) }\n                    let _2 := 64\n                    let newFreePtr := add(_1, _2)\n                    let _3 := sub(shl(64, 1), 1)\n                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr)\n                    mstore(_1, 9)\n                    let _4 := 32\n                    mstore(add(_1, _4), \"ERC20Mock\")\n                    let memPtr := mload(_2)\n                    let newFreePtr_1 := add(memPtr, _2)\n                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    mstore(_2, newFreePtr_1)\n                    let _5 := 4\n                    mstore(memPtr, _5)\n                    mstore(add(memPtr, _4), \"E20M\")\n                    let newLen := mload(_1)\n                    if gt(newLen, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    /// @src 66:1962:1975  \"_name = name_\"\n                    let _6 := 0x03\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _7 := sload(/** @src 66:1962:1975  \"_name = name_\" */ _6)\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let length := /** @src -1:-1:-1 */ 0\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let _8 := 1\n                    length := shr(_8, _7)\n                    let outOfPlaceEncoding := and(_7, _8)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    let _9 := 31\n                    if gt(length, _9)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let deleteStart := add(data, shr(5, add(newLen, _9)))\n                        if lt(newLen, _4) { deleteStart := data }\n                        let _10 := add(data, shr(5, add(length, _9)))\n                        let start := deleteStart\n                        for { } lt(start, _10) { start := add(start, _8) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ 0\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    srcOffset := _4\n                    switch gt(newLen, _9)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let i := /** @src -1:-1:-1 */ 0\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                        {\n                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                            dstPtr := add(dstPtr, _8)\n                            srcOffset := add(srcOffset, _4)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(_1, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ add(shl(_8, newLen), _8))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ 0\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        if newLen\n                        {\n                            value := mload(add(_1, srcOffset))\n                        }\n                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), not(0)))), shl(_8, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr)\n                    if gt(newLen_1, _3)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    let _11 := sload(_5)\n                    let length_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    length_1 := shr(_8, _11)\n                    let outOfPlaceEncoding_1 := and(_11, _8)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                        mstore(_5, 0x22)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                    }\n                    if gt(length_1, _9)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _9)))\n                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                        let _12 := add(data_1, shr(5, add(length_1, _9)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _12) { start_1 := add(start_1, _8) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                        }\n                    }\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                    srcOffset_1 := _4\n                    switch gt(newLen_1, _9)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let i_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _8)\n                            srcOffset_1 := add(srcOffset_1, _4)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                        }\n                        sstore(_5, add(shl(_8, newLen_1), _8))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr, srcOffset_1))\n                        }\n                        sstore(_5, or(and(value_1, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), not(0)))), shl(_8, newLen_1)))\n                    }\n                    let _13 := mload(_2)\n                    let _14 := datasize(\"ERC20Mock_47815_deployed\")\n                    codecopy(_13, dataoffset(\"ERC20Mock_47815_deployed\"), _14)\n                    return(_13, _14)\n                }\n            }\n            /// @use-src 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n            object \"ERC20Mock_47815_deployed\" {\n                code {\n                    {\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let ret := _4\n                                let slotValue := sload(/** @src 66:2151:2156  \"_name\" */ 0x03)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let length := _4\n                                let _5 := 1\n                                length := shr(1, slotValue)\n                                let outOfPlaceEncoding := and(slotValue, 1)\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _6 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 66:2151:2156  \"_name\" */ 0x03)\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _6) }\n                                    {\n                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                        dataPos := add(dataPos, _5)\n                                    }\n                                    ret := add(add(_1, i), _6)\n                                }\n                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_3706()\n                                let _7 := calldataload(36)\n                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    mstore(_8, shl(224, 0xe602df05))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                    revert(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                let _9 := and(/** @src 66:10159:10180  \"spender == address(0)\" */ value0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _9)\n                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                {\n                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    let _10 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    mstore(_10, shl(225, 0x4a1406b1))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                    revert(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(0x20, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _11 := keccak256(_4, _2)\n                                mstore(_4, _9)\n                                mstore(0x20, _11)\n                                sstore(keccak256(_4, _2), _7)\n                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                let _12 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_12, _7)\n                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                log3(_12, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos := mload(_2)\n                                mstore(memPos, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(memPos, 0x20)\n                            }\n                            case 0x18160ddd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _13 := sload(/** @src 66:3222:3234  \"_totalSupply\" */ 0x02)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, _13)\n                                return(memPos_1, 32)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_3706()\n                                let value1 := abi_decode_address()\n                                let value := calldataload(68)\n                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                mstore(_4, _14)\n                                mstore(32, 1)\n                                let _15 := keccak256(_4, _2)\n                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(32, _15)\n                                let _16 := sload(keccak256(_4, _2))\n                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                if /** @src 66:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 66:10848:10865  \"type(uint256).max\" */ not(0)))\n                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                {\n                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                    if /** @src 66:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                    {\n                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        let _17 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                    }\n                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                    if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _14)\n                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                    {\n                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        let _18 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        mstore(_18, shl(224, 0xe602df05))\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                        revert(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                    }\n                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                    if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                    {\n                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        let _19 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        mstore(_19, shl(225, 0x4a1406b1))\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                        revert(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                    }\n                                    mstore(_4, _14)\n                                    mstore(32, 1)\n                                    let _20 := keccak256(_4, _2)\n                                    mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(32, _20)\n                                    sstore(keccak256(_4, _2), sub(/** @src 66:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                }\n                                /// @src 66:5249:5254  \"value\"\n                                fun_transfer(value0_1, value1, value)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 1)\n                                return(memPos_2, 32)\n                            }\n                            case 0x313ce567 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, /** @src 66:3075:3077  \"18\" */ 0x12)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(memPos_3, 32)\n                            }\n                            case 0x40c10f19 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_3706()\n                                let value_1 := calldataload(36)\n                                let _21 := and(/** @src 66:7791:7812  \"account == address(0)\" */ value0_2, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                if /** @src 66:7791:7812  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _21)\n                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    let _22 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    mstore(_22, shl(224, 0xec442f05))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                    revert(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                let _23 := sload(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let sum := add(_23, value_1)\n                                if gt(_23, sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, 36)\n                                }\n                                sstore(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sum)\n                                mstore(_4, _21)\n                                mstore(0x20, _4)\n                                let dataSlot := keccak256(_4, _2)\n                                sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_1))\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                let _24 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_24, value_1)\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_24, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                return(_4, _4)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                mstore(_4, and(abi_decode_address_3706(), sub(shl(160, 1), 1)))\n                                mstore(32, _4)\n                                let _25 := sload(keccak256(_4, _2))\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _25)\n                                return(memPos_4, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr := mload(_2)\n                                let ret_1 := _4\n                                let slotValue_1 := sload(_3)\n                                let length_1 := _4\n                                let _26 := 1\n                                length_1 := shr(1, slotValue_1)\n                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                if iszero(outOfPlaceEncoding_1)\n                                {\n                                    length_1 := and(length_1, 0x7f)\n                                }\n                                let _27 := 32\n                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr, length_1)\n                                switch outOfPlaceEncoding_1\n                                case 0 {\n                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                }\n                                case 1 {\n                                    mstore(_4, _3)\n                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                    let i_1 := _4\n                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                    {\n                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                        dataPos_1 := add(dataPos_1, _26)\n                                    }\n                                    ret_1 := add(add(memPtr, i_1), _27)\n                                }\n                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr_1)\n                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                            }\n                            case 0x9dc29fac {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_3706()\n                                let value_2 := calldataload(36)\n                                let _28 := and(/** @src 66:8317:8338  \"account == address(0)\" */ value0_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                if /** @src 66:8317:8338  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _28)\n                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                {\n                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    let _29 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    mstore(_29, shl(225, 0x4b637e8f))\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    mstore(/** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                    revert(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                }\n                                mstore(_4, _28)\n                                mstore(0x20, _4)\n                                let _30 := sload(keccak256(_4, _2))\n                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_30, value_2)\n                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                {\n                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    let _31 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                    mstore(_31, shl(226, 0x391434e3))\n                                    revert(_31, sub(abi_encode_address_uint256_uint256(add(_31, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ value0_3, _30, value_2), _31))\n                                }\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                mstore(_4, _28)\n                                mstore(0x20, _4)\n                                sstore(keccak256(_4, _2), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _30, value_2))\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                sstore(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(sload(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_2))\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                let _32 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                mstore(_32, value_2)\n                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                log3(_32, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _28, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                return(_4, _4)\n                            }\n                            case 0xa9059cbb {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_3706()\n                                /// @src 66:3754:3759  \"value\"\n                                fun_transfer(/** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:3754:3759  \"value\" */ value0_4, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ calldataload(36))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, 1)\n                                return(memPos_5, 32)\n                            }\n                            case 0xdd62ed3e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_5 := abi_decode_address_3706()\n                                let value1_1 := abi_decode_address()\n                                let _33 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_5, _33))\n                                mstore(32, /** @src 66:3952:3963  \"_allowances\" */ 0x01)\n                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                let _34 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _33))\n                                mstore(32, _34)\n                                let _35 := sload(keccak256(_4, _2))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, _35)\n                                return(memPos_6, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function abi_encode_string(headStart, value0) -> tail\n                    {\n                        let _1 := 32\n                        mstore(headStart, 32)\n                        let length := mload(value0)\n                        mstore(add(headStart, 32), length)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, _1) }\n                        {\n                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                        }\n                        mstore(add(add(headStart, length), 64), 0)\n                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                    }\n                    function abi_decode_address_3706() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                    {\n                        tail := add(headStart, 96)\n                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                        mstore(add(headStart, 32), value1)\n                        mstore(add(headStart, 64), value2)\n                    }\n                    /// @ast-id 48060 @src 66:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                    function fun_transfer(var_from, var_to, var_value)\n                    {\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 66:5739:5757  \"from == address(0)\" */ var_from, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                        if /** @src 66:5739:5757  \"from == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                        {\n                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            let _3 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            mstore(_3, /** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            mstore(/** @src 66:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                            revert(_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                        }\n                        let _4 := and(/** @src 66:5834:5850  \"to == address(0)\" */ var_to, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                        if /** @src 66:5834:5850  \"to == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            let _5 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            mstore(_5, /** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                            mstore(/** @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                            revert(_5, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                        }\n                        /// @src 66:6356:6896  \"if (from == address(0)) {...\"\n                        let _6 := 0\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        let _7 := sload(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40))\n                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                        if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                        {\n                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                            mstore(_8, shl(226, 0x391434e3))\n                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                        }\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        sstore(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                        let dataSlot := keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40)\n                        sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ var_value))\n                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                        let _9 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                        mstore(_9, var_value)\n                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                        log3(_9, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 81:\"script/DeployMinimal.s.sol\"\n        object \"DeployMinimal_51062\" {\n            code {\n                {\n                    /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ not(16711935)), 65537))\n                    let _2 := datasize(\"DeployMinimal_51062_deployed\")\n                    codecopy(_1, dataoffset(\"DeployMinimal_51062_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 81:\"script/DeployMinimal.s.sol\"\n            object \"DeployMinimal_51062_deployed\" {\n                code {\n                    {\n                        /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                        mstore(64, memoryguard(0x80))\n                        if iszero(lt(calldatasize(), 4))\n                        {\n                            let _1 := 0\n                            switch shr(224, calldataload(_1))\n                            case 0x7d7a1c8b {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let ret, ret_1 := fun_deployMinimalAccount()\n                                let memPos := mload(64)\n                                let _2 := sub(shl(160, 1), 1)\n                                mstore(memPos, and(ret, _2))\n                                mstore(add(memPos, 32), and(ret_1, _2))\n                                return(memPos, 64)\n                            }\n                            case 0xc0406226 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                /// @src 81:294:316  \"deployMinimalAccount()\"\n                                let expr_component_address, expr_component_address_1 := fun_deployMinimalAccount()\n                                /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                                return(_1, _1)\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(_1, _1) }\n                                if slt(add(calldatasize(), not(3)), _1) { revert(_1, _1) }\n                                let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0xff)\n                                let memPos_1 := mload(64)\n                                mstore(memPos_1, iszero(iszero(value)))\n                                return(memPos_1, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function abi_decode_address_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    /// @ast-id 51061 @src 81:329:803  \"function deployMinimalAccount() public returns (HelperConfig, MinimalAccount) {...\"\n                    function fun_deployMinimalAccount() -> var__address, var_address\n                    {\n                        /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                        let _1 := 64\n                        /// @src 81:445:463  \"new HelperConfig()\"\n                        let _2 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:445:463  \"new HelperConfig()\"\n                        let _3 := datasize(\"HelperConfig_51339\")\n                        let _4 := add(_2, _3)\n                        let _5 := 0xffffffffffffffff\n                        if or(gt(_4, _5), lt(_4, _2))\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        /// @src 81:445:463  \"new HelperConfig()\"\n                        datacopy(_2, dataoffset(\"HelperConfig_51339\"), _3)\n                        let _6 := 0\n                        let expr_address := create(_6, _2, sub(_4, _2))\n                        if iszero(expr_address)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        let _7 := sub(shl(160, 1), 1)\n                        /// @src 81:516:540  \"helperConfig.getConfig()\"\n                        let _8 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:516:540  \"helperConfig.getConfig()\"\n                        mstore(_8, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(226, 0x30fe4275))\n                        /// @src 81:516:540  \"helperConfig.getConfig()\"\n                        let _9 := 4\n                        let _10 := call(gas(), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ and(/** @src 81:516:538  \"helperConfig.getConfig\" */ expr_address, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _7), /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:516:540  \"helperConfig.getConfig()\" */ _8, _9, _8, 96)\n                        if iszero(_10)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos_1 := mload(_1)\n                            returndatacopy(pos_1, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 81:516:540  \"helperConfig.getConfig()\"\n                        let expr_mpos := /** @src 81:445:463  \"new HelperConfig()\" */ _6\n                        /// @src 81:516:540  \"helperConfig.getConfig()\"\n                        if _10\n                        {\n                            let _11 := 96\n                            if gt(96, returndatasize()) { _11 := returndatasize() }\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let newFreePtr := add(_8, and(add(_11, 31), not(31)))\n                            if or(gt(newFreePtr, /** @src 81:445:463  \"new HelperConfig()\" */ _5), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ lt(newFreePtr, _8))\n                            {\n                                mstore(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 81:516:540  \"helperConfig.getConfig()\" */ _9, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0x41)\n                                revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0x24)\n                            }\n                            if slt(sub(/** @src 81:516:540  \"helperConfig.getConfig()\" */ add(_8, _11), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _8), /** @src 81:516:540  \"helperConfig.getConfig()\" */ 96)\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            {\n                                revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                            }\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let newFreePtr_1 := add(newFreePtr, /** @src 81:516:540  \"helperConfig.getConfig()\" */ 96)\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            if or(gt(newFreePtr_1, /** @src 81:445:463  \"new HelperConfig()\" */ _5), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ lt(newFreePtr_1, newFreePtr))\n                            {\n                                mstore(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 81:516:540  \"helperConfig.getConfig()\" */ _9, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0x41)\n                                revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0x24)\n                            }\n                            mstore(_1, newFreePtr_1)\n                            mstore(newFreePtr, abi_decode_address_fromMemory(_8))\n                            mstore(add(newFreePtr, 32), abi_decode_address_fromMemory(add(_8, 32)))\n                            mstore(add(newFreePtr, _1), abi_decode_address_fromMemory(add(_8, _1)))\n                            /// @src 81:516:540  \"helperConfig.getConfig()\"\n                            expr_mpos := newFreePtr\n                        }\n                        /// @src 81:569:583  \"config.account\"\n                        let _12 := add(expr_mpos, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _1)\n                        let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 81:569:583  \"config.account\" */ _12), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _7)\n                        let _13 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        if iszero(extcodesize(/** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _13))\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                        }\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        let _14 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        mstore(_14, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(224, 0x7fec2a8d))\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 81:551:584  \"vm.startBroadcast(config.account)\" */ add(_14, /** @src 81:516:540  \"helperConfig.getConfig()\" */ _9), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ cleaned)\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        let _15 := call(gas(), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _13, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:551:584  \"vm.startBroadcast(config.account)\" */ _14, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 81:551:584  \"vm.startBroadcast(config.account)\" */ _14, /** @src 81:445:463  \"new HelperConfig()\" */ _6)\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        if iszero(_15)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos_2 := mload(_1)\n                            returndatacopy(pos_2, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 81:551:584  \"vm.startBroadcast(config.account)\"\n                        if _15\n                        {\n                            finalize_allocation(_14)\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            _6 := /** @src 81:445:463  \"new HelperConfig()\" */ _6\n                        }\n                        /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                        let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 81:645:662  \"config.entryPoint\" */ expr_mpos), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _7)\n                        /// @src 81:626:663  \"new MinimalAccount(config.entryPoint)\"\n                        let _16 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:626:663  \"new MinimalAccount(config.entryPoint)\"\n                        let _17 := datasize(\"MinimalAccount_51868\")\n                        let _18 := add(_16, _17)\n                        if or(gt(_18, /** @src 81:445:463  \"new HelperConfig()\" */ _5), /** @src 81:626:663  \"new MinimalAccount(config.entryPoint)\" */ lt(_18, _16))\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            mstore(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 81:516:540  \"helperConfig.getConfig()\" */ _9, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ 0x41)\n                            revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                        }\n                        /// @src 81:626:663  \"new MinimalAccount(config.entryPoint)\"\n                        datacopy(_16, dataoffset(\"MinimalAccount_51868\"), _17)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(_18, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ cleaned_1)\n                        /// @src 81:626:663  \"new MinimalAccount(config.entryPoint)\"\n                        let expr_51042_address := create(/** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:626:663  \"new MinimalAccount(config.entryPoint)\" */ _16, add(sub(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _18, /** @src 81:626:663  \"new MinimalAccount(config.entryPoint)\" */ _16), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 32))\n                        /// @src 81:626:663  \"new MinimalAccount(config.entryPoint)\"\n                        if iszero(expr_51042_address)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos_3 := mload(_1)\n                            returndatacopy(pos_3, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        let _19 := and(/** @src 81:673:705  \"minimalAccount.transferOwnership\" */ expr_51042_address, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _7)\n                        let cleaned_2 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 81:706:720  \"config.account\" */ _12), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _7)\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        if iszero(extcodesize(_19))\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                        }\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        let _20 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        mstore(_20, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(224, 0xf2fde38b))\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(/** @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\" */ add(_20, /** @src 81:516:540  \"helperConfig.getConfig()\" */ _9), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ cleaned_2)\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        let _21 := call(gas(), _19, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\" */ _20, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 36, /** @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\" */ _20, /** @src 81:445:463  \"new HelperConfig()\" */ _6)\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        if iszero(_21)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos_4 := mload(_1)\n                            returndatacopy(pos_4, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 81:673:721  \"minimalAccount.transferOwnership(config.account)\"\n                        if _21\n                        {\n                            finalize_allocation(_20)\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            if _6\n                            {\n                                revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                            }\n                        }\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _13))\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                        }\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        let _22 := /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ mload(_1)\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        mstore(_22, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ shl(225, 0x3b756e9b))\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        let _23 := call(gas(), /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ _13, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:731:749  \"vm.stopBroadcast()\" */ _22, /** @src 81:516:540  \"helperConfig.getConfig()\" */ _9, /** @src 81:731:749  \"vm.stopBroadcast()\" */ _22, /** @src 81:445:463  \"new HelperConfig()\" */ _6)\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        if iszero(_23)\n                        {\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            let pos_5 := mload(_1)\n                            returndatacopy(pos_5, /** @src 81:445:463  \"new HelperConfig()\" */ _6, /** @src 81:223:805  \"contract DeployMinimal is Script {...\" */ returndatasize())\n                            revert(pos_5, returndatasize())\n                        }\n                        /// @src 81:731:749  \"vm.stopBroadcast()\"\n                        if _23\n                        {\n                            finalize_allocation(_22)\n                            /// @src 81:223:805  \"contract DeployMinimal is Script {...\"\n                            if _6\n                            {\n                                revert(/** @src 81:445:463  \"new HelperConfig()\" */ _6, _6)\n                            }\n                        }\n                        /// @src 81:759:796  \"return (helperConfig, minimalAccount)\"\n                        var__address := expr_address\n                        var_address := expr_51042_address\n                    }\n                }\n                /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 82:\"script/HelperConfig.s.sol\"\n                object \"HelperConfig_51339\" {\n                    code {\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _1 := 64\n                            mstore(_1, memoryguard(0x80))\n                            if callvalue() { revert(0, 0) }\n                            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ not(16711935)), 65537))\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"\n                            let _2 := 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let _3 := 32\n                            let _4 := add(expr_mpos, _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_4, /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let _5 := add(expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            let _6 := 0xc17326c11e8d54a342d4673cb784ca8d9099e760\n                            mstore(_5, _6)\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _7 := 0\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1086:1094  \"11155111\" */ 0xaa36a7)\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let _8 := sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let _9 := and(mload(expr_mpos), _8)\n                            let _10 := not(sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1))\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot, or(and(sload(dataSlot), _10), _9))\n                            let memberSlot := add(dataSlot, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot, or(and(sload(memberSlot), _10), and(mload(_4), _8)))\n                            let memberSlot_1 := add(dataSlot, 2)\n                            sstore(memberSlot_1, or(and(sload(memberSlot_1), _10), and(mload(_5), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let expr_mpos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let _11 := add(expr_mpos_1, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_11, /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let _12 := add(expr_mpos_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_12, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_1 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_1, or(and(sload(dataSlot_1), _10), and(mload(expr_mpos_1), _8)))\n                            let memberSlot_2 := add(dataSlot_1, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_2, or(and(sload(memberSlot_2), _10), and(mload(_11), _8)))\n                            let memberSlot_3 := add(dataSlot_1, 2)\n                            sstore(memberSlot_3, or(and(sload(memberSlot_3), _10), and(mload(_12), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let expr_mpos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7)\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let _13 := add(expr_mpos_2, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_13, /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let _14 := add(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_14, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1433:1436  \"324\" */ 0x0144)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_2 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_2, or(and(sload(dataSlot_2), _10), and(mload(expr_mpos_2), _8)))\n                            let memberSlot_4 := add(dataSlot_2, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_4, or(and(sload(memberSlot_4), _10), and(mload(_13), _8)))\n                            let memberSlot_5 := add(dataSlot_2, 2)\n                            sstore(memberSlot_5, or(and(sload(memberSlot_5), _10), and(mload(_14), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let expr_mpos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_3, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let _15 := add(expr_mpos_3, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_15, /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let _16 := add(expr_mpos_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_16, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1378:1384  \"421614\" */ 0x066eee)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_3 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_3, or(and(sload(dataSlot_3), _10), and(mload(expr_mpos_3), _8)))\n                            let memberSlot_6 := add(dataSlot_3, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_6, or(and(sload(memberSlot_6), _10), and(mload(_15), _8)))\n                            let memberSlot_7 := add(dataSlot_3, 2)\n                            sstore(memberSlot_7, or(and(sload(memberSlot_7), _10), and(mload(_16), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _17 := mload(_1)\n                            let _18 := datasize(\"HelperConfig_51339_deployed\")\n                            codecopy(_17, dataoffset(\"HelperConfig_51339_deployed\"), _18)\n                            return(_17, _18)\n                        }\n                        function allocate_memory() -> memPtr\n                        {\n                            memPtr := mload(64)\n                            let newFreePtr := add(memPtr, 96)\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                        {\n                            memPtr := allocate_memory()\n                            mstore(memPtr, 0)\n                            mstore(add(memPtr, 32), 0)\n                            mstore(add(memPtr, 64), 0)\n                        }\n                    }\n                    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 30:\"lib/forge-std/src/console.sol\", 82:\"script/HelperConfig.s.sol\"\n                    object \"HelperConfig_51339_deployed\" {\n                        code {\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _1 := 64\n                                mstore(_1, memoryguard(0x80))\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    let _2 := 0\n                                    switch shr(224, calldataload(_2))\n                                    case 0x12900da8 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let ret := fun_getOrCreateAnvilEthConfig()\n                                        let memPos := mload(_1)\n                                        return(memPos, sub(abi_encode_struct_NetworkConfig(memPos, ret), memPos))\n                                    }\n                                    case 0x209c25eb {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                        let ret_1 := fun_getConfigByChainId(calldataload(4))\n                                        let memPos_1 := mload(_1)\n                                        return(memPos_1, sub(abi_encode_struct_NetworkConfig(memPos_1, ret_1), memPos_1))\n                                    }\n                                    case 0x72f953bb {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr := mload(_1)\n                                        finalize_allocation(memPtr)\n                                        mstore(memPtr, /** @src 82:3767:3809  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, 32), /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_2 := mload(_1)\n                                        return(memPos_2, sub(abi_encode_struct_NetworkConfig(memPos_2, memPtr), memPos_2))\n                                    }\n                                    case 0x7b99b603 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                        mstore(_2, calldataload(4))\n                                        mstore(32, /** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ 16)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let dataSlot := keccak256(_2, _1)\n                                        let _3 := sub(shl(160, 1), 1)\n                                        let cleaned := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ dataSlot), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                        let cleaned_1 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1)), _3)\n                                        let cleaned_2 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                        let memPos_3 := mload(_1)\n                                        return(memPos_3, sub(abi_encode_address_address_address(memPos_3, cleaned, cleaned_1, cleaned_2), memPos_3))\n                                    }\n                                    case 0x7cd4a433 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_1 := mload(_1)\n                                        finalize_allocation(memPtr_1)\n                                        mstore(memPtr_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, 32), /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_4 := mload(_1)\n                                        return(memPos_4, sub(abi_encode_struct_NetworkConfig(memPos_4, memPtr_1), memPos_4))\n                                    }\n                                    case 0xa1bb9417 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_2 := mload(_1)\n                                        finalize_allocation(memPtr_2)\n                                        mstore(memPtr_2, _2)\n                                        mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, 32), /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_5 := mload(_1)\n                                        return(memPos_5, sub(abi_encode_struct_NetworkConfig(memPos_5, memPtr_2), memPos_5))\n                                    }\n                                    case 0xa60f7516 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let _4 := sub(shl(160, 1), 1)\n                                        let cleaned_3 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 13), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let cleaned_4 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 14), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let cleaned_5 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 15), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let memPos_6 := mload(_1)\n                                        return(memPos_6, sub(abi_encode_address_address_address(memPos_6, cleaned_3, cleaned_4, cleaned_5), memPos_6))\n                                    }\n                                    case 0xba3ec354 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_3 := mload(_1)\n                                        finalize_allocation(memPtr_3)\n                                        mstore(memPtr_3, _2)\n                                        mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, 32), /** @src 82:4132:4174  \"0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E\" */ 0x5a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_7 := mload(_1)\n                                        return(memPos_7, sub(abi_encode_struct_NetworkConfig(memPos_7, memPtr_3), memPos_7))\n                                    }\n                                    case 0xc28975d1 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_4 := mload(_1)\n                                        finalize_allocation(memPtr_4)\n                                        mstore(memPtr_4, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, 32), /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_8 := mload(_1)\n                                        return(memPos_8, sub(abi_encode_struct_NetworkConfig(memPos_8, memPtr_4), memPos_8))\n                                    }\n                                    case 0xc3f909d4 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        /// @src 82:2299:2339  \"return getConfigByChainId(block.chainid)\"\n                                        let var_mpos := /** @src 82:2306:2339  \"getConfigByChainId(block.chainid)\" */ fun_getConfigByChainId(/** @src 82:2325:2338  \"block.chainid\" */ chainid())\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_9 := mload(_1)\n                                        return(memPos_9, sub(abi_encode_struct_NetworkConfig(memPos_9, var_mpos), memPos_9))\n                                    }\n                                    case 0xf8ccbf47 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0xff)\n                                        let memPos_10 := mload(_1)\n                                        mstore(memPos_10, iszero(iszero(value)))\n                                        return(memPos_10, 32)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_struct_NetworkConfig(headStart, value0) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(headStart, and(mload(value0), _1))\n                                mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n                                mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n                            }\n                            function abi_encode_address_address_address(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(headStart, and(value0, _1))\n                                mstore(add(headStart, 32), and(value1, _1))\n                                mstore(add(headStart, 64), and(value2, _1))\n                            }\n                            function finalize_allocation(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 96)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_2854(memPtr)\n                            {\n                                if gt(memPtr, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, memPtr)\n                            }\n                            function finalize_allocation_4414(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 64)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                            {\n                                let memPtr_1 := mload(64)\n                                finalize_allocation(memPtr_1)\n                                memPtr := memPtr_1\n                                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                            }\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            function read_from_storage_reference_type_struct_NetworkConfig() -> value\n                            {\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr)\n                                value := memPtr\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(memPtr, and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                                mstore(add(memPtr, 32), and(sload(14), _1))\n                                mstore(add(memPtr, 64), and(sload(15), _1))\n                            }\n                            /// @ast-id 51338 @src 82:4580:5237  \"function getOrCreateAnvilEthConfig() public returns (NetworkConfig memory) {...\"\n                            function fun_getOrCreateAnvilEthConfig() -> var_mpos\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let _1 := sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let cleaned := /** @src -1:-1:-1 */ 0\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _2 := sub(shl(160, 1), 1)\n                                /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                                if /** @src 82:4669:4709  \"localNetworkConfig.account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(_1, _2)))\n                                /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                                {\n                                    /// @src 82:4725:4750  \"return localNetworkConfig\"\n                                    var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                                    /// @src 82:4725:4750  \"return localNetworkConfig\"\n                                    leave\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _3 := 64\n                                let memPtr := mload(_3)\n                                finalize_allocation_4414(memPtr)\n                                mstore(memPtr, 18)\n                                mstore(add(memPtr, 32), \"Deploying mocks...\")\n                                /// @src 82:4795:4829  \"console2.log(\\\"Deploying mocks...\\\")\"\n                                fun_log(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ memPtr)\n                                let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    revert(/** @src -1:-1:-1 */ cleaned, cleaned)\n                                }\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                let _5 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                mstore(_5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7fec2a8d))\n                                let _6 := 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ add(_5, 4), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                let _7 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src -1:-1:-1 */ cleaned, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src -1:-1:-1 */ cleaned)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if iszero(_7)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if _7\n                                {\n                                    finalize_allocation_2854(_5)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    cleaned := /** @src -1:-1:-1 */ cleaned\n                                }\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                let _8 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                let _9 := datasize(\"EntryPoint_2097\")\n                                let _10 := add(_8, _9)\n                                let _11 := 0xffffffffffffffff\n                                if or(gt(_10, _11), lt(_10, _8))\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                                }\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                datacopy(_8, dataoffset(\"EntryPoint_2097\"), _9)\n                                let expr_51300_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4913:4929  \"new EntryPoint()\" */ _8, sub(_10, _8))\n                                if iszero(expr_51300_address)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_1, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                let _12 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                let _13 := datasize(\"ERC20Mock_47815\")\n                                let _14 := add(_12, _13)\n                                if or(gt(_14, /** @src 82:4913:4929  \"new EntryPoint()\" */ _11), /** @src 82:4961:4976  \"new ERC20Mock()\" */ lt(_14, _12))\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                                }\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                datacopy(_12, dataoffset(\"ERC20Mock_47815\"), _13)\n                                let expr_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4961:4976  \"new ERC20Mock()\" */ _12, sub(_14, _12))\n                                if iszero(expr_address)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_2, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                let _15 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                mstore(_15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(225, 0x3b756e9b))\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                let _16 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4707:4708  \"0\" */ cleaned)\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if iszero(_16)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_3, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if _16\n                                {\n                                    finalize_allocation_2854(_15)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    if cleaned\n                                    {\n                                        revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                                    }\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPtr_1 := mload(_3)\n                                finalize_allocation_4414(memPtr_1)\n                                mstore(memPtr_1, /** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                mstore(add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ \"Mocks deployed!\")\n                                /// @src 82:5014:5045  \"console2.log(\\\"Mocks deployed!\\\")\"\n                                fun_log(/** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ memPtr_1)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _17 := and(/** @src 82:5116:5135  \"address(entryPoint)\" */ expr_51300_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                                let _18 := and(/** @src 82:5143:5161  \"address(erc20Mock)\" */ expr_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                                let memPtr_2 := mload(_3)\n                                finalize_allocation(memPtr_2)\n                                mstore(memPtr_2, _17)\n                                mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), _18)\n                                mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                                let _19 := shl(160, 0xffffffffffffffffffffffff)\n                                sstore(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _17))\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                sstore(14, or(and(sload(14), _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _18))\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                sstore(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), _6))\n                                /// @src 82:5205:5230  \"return localNetworkConfig\"\n                                var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                            }\n                            /// @ast-id 51194 @src 82:2352:2721  \"function getConfigByChainId(uint256 chainId) public returns (NetworkConfig memory) {...\"\n                            function fun_getConfigByChainId(var_chainId) -> var_51164_mpos\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                                switch /** @src 82:2449:2474  \"chainId == LOCAL_CHAIN_ID\" */ eq(var_chainId, /** @src 82:1186:1191  \"31337\" */ 0x7a69)\n                                case /** @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\" */ 0 {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                                    mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    let _1 := sub(shl(160, 1), 1)\n                                    /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                                    switch /** @src 82:2545:2590  \"networkConfigs[chainId].account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(sload(/** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ add(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40), /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)))\n                                    case /** @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\" */ 0 {\n                                        /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                        let _2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(0x40)\n                                        /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                        mstore(_2, shl(225, 0x64780a77))\n                                        revert(_2, 4)\n                                    }\n                                    default /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                                    {\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                                        mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let _3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40)\n                                        let memPtr := mload(0x40)\n                                        finalize_allocation(memPtr)\n                                        mstore(memPtr, and(sload(_3), _1))\n                                        mstore(add(memPtr, 0x20), and(sload(add(_3, 1)), _1))\n                                        mstore(add(memPtr, 0x40), and(sload(add(_3, /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                                        /// @src 82:2606:2636  \"return networkConfigs[chainId]\"\n                                        var_51164_mpos := memPtr\n                                        leave\n                                    }\n                                }\n                                default /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                                {\n                                    /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                                    var_51164_mpos := /** @src 82:2497:2524  \"getOrCreateAnvilEthConfig()\" */ fun_getOrCreateAnvilEthConfig()\n                                    /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 20328 @src 30:6114:6235  \"function log(string memory p0) internal pure {...\"\n                            function fun_log(var_p0_mpos)\n                            {\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(64)\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let _1 := 0x20\n                                let _2 := add(expr_mpos, 0x20)\n                                mstore(_2, shl(226, 0x104c13eb))\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos, 36), 0x20)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let length := mload(var_p0_mpos)\n                                mstore(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68), length)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                {\n                                    mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ i), 100), mload(add(add(var_p0_mpos, i), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)))\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ length), 100), /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _3 := not(31)\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let _4 := sub(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(add(length, 31), _3)), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos)\n                                mstore(expr_mpos, add(_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68))\n                                let newFreePtr := add(expr_mpos, and(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 131), _3))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36)\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(64, newFreePtr)\n                                /// @src 30:762:921  \"assembly {...\"\n                                pop(staticcall(gas(), /** @src 30:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 30:762:921  \"assembly {...\" */ _2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(/** @src 30:645:659  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ 0, 0))\n                            }\n                        }\n                        /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 9:\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\", 10:\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\", 12:\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 78:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\"\n                        object \"EntryPoint_2097\" {\n                            code {\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _1 := memoryguard(0xa0)\n                                    mstore(64, _1)\n                                    if callvalue() { revert(0, 0) }\n                                    /// @src 73:1713:1714  \"1\"\n                                    sstore(/** @src 73:1917:1938  \"_status = NOT_ENTERED\" */ 0x02, /** @src 73:1713:1714  \"1\" */ 0x01)\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    let _2 := datasize(\"SenderCreator_2414\")\n                                    let _3 := add(_1, _2)\n                                    if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                    }\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    datacopy(_1, dataoffset(\"SenderCreator_2414\"), _2)\n                                    let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 0:986:1005  \"new SenderCreator()\" */ _1, sub(_3, _1))\n                                    if iszero(expr_address)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let pos := mload(64)\n                                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    mstore(128, expr_address)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _4 := mload(64)\n                                    let _5 := datasize(\"EntryPoint_2097_deployed\")\n                                    codecopy(_4, dataoffset(\"EntryPoint_2097_deployed\"), _5)\n                                    setimmutable(_4, \"35\", mload(/** @src 0:986:1005  \"new SenderCreator()\" */ 128))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    return(_4, _5)\n                                }\n                            }\n                            /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 5:\"lib/account-abstraction/contracts/core/UserOperationLib.sol\", 14:\"lib/account-abstraction/contracts/utils/Exec.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\"\n                            object \"EntryPoint_2097_deployed\" {\n                                code {\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(64, memoryguard(0x80))\n                                        if iszero(lt(calldatasize(), 4))\n                                        {\n                                            switch shr(224, calldataload(0))\n                                            case 0x0042dc53 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 512) { revert(0, 0) }\n                                                let offset := calldataload(4)\n                                                let _1 := 0xffffffffffffffff\n                                                if gt(offset, _1) { revert(0, 0) }\n                                                if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                                let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                                                let _2 := add(calldatasize(), not(35))\n                                                if slt(_2, 0x01c0) { revert(0, 0) }\n                                                let memPtr := mload(64)\n                                                finalize_allocation_26259(memPtr)\n                                                if slt(_2, 0x0140) { revert(0, 0) }\n                                                let memPtr_1 := mload(64)\n                                                finalize_allocation_26260(memPtr_1)\n                                                let value := calldataload(36)\n                                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                                mstore(memPtr_1, value)\n                                                let _3 := 0x20\n                                                mstore(add(memPtr_1, _3), calldataload(68))\n                                                mstore(add(memPtr_1, 64), calldataload(100))\n                                                mstore(add(memPtr_1, 96), calldataload(132))\n                                                mstore(add(memPtr_1, 128), calldataload(164))\n                                                mstore(add(memPtr_1, 0xa0), calldataload(196))\n                                                mstore(add(memPtr_1, 192), calldataload(228))\n                                                let value_1 := calldataload(260)\n                                                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                                mstore(add(memPtr_1, 224), value_1)\n                                                mstore(add(memPtr_1, 256), calldataload(292))\n                                                mstore(add(memPtr_1, 288), calldataload(324))\n                                                mstore(memPtr, memPtr_1)\n                                                mstore(add(memPtr, _3), calldataload(356))\n                                                mstore(add(memPtr, 64), calldataload(388))\n                                                mstore(add(memPtr, 96), calldataload(420))\n                                                mstore(add(memPtr, 128), calldataload(452))\n                                                let offset_1 := calldataload(484)\n                                                if gt(offset_1, _1) { revert(0, 0) }\n                                                let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                                                /// @src 0:11732:11741  \"gasleft()\"\n                                                let expr := gas()\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(/** @src 0:11759:11786  \"msg.sender == address(this)\" */ eq(/** @src 0:11759:11769  \"msg.sender\" */ caller(), /** @src 0:11781:11785  \"this\" */ address()))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_2 := mload(64)\n                                                    mstore(memPtr_2, shl(229, 4594637))\n                                                    mstore(add(memPtr_2, 4), _3)\n                                                    mstore(add(memPtr_2, 36), 23)\n                                                    mstore(add(memPtr_2, 68), \"AA92 internal call only\")\n                                                    revert(memPtr_2, 100)\n                                                }\n                                                /// @src 0:11854:11868  \"opInfo.mUserOp\"\n                                                let _mpos := mload(memPtr)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _4 := mload(/** @src 0:11902:11922  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                                let r := shr(6, mul(/** @src 0:12058:12067  \"gasleft()\" */ gas(), /** @src 0:12070:12072  \"63\" */ 0x3f))\n                                                /// @src 0:12037:12368  \"if (...\"\n                                                if /** @src 0:12058:12195  \"gasleft() * 63 / 64 <...\" */ lt(r, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(add(_4, mload(/** @src 0:12127:12158  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))), /** @src 0:1297:1302  \"10000\" */ 0x2710))\n                                                /// @src 0:12037:12368  \"if (...\"\n                                                {\n                                                    /// @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                                    revert(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, _3)\n                                                }\n                                                /// @src 0:12388:12450  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                                                let var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:12464:12479  \"callData.length\"\n                                                let expr_1 := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12464:12479  \"callData.length\" */ array)\n                                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                                if /** @src 0:12464:12483  \"callData.length > 0\" */ iszero(iszero(expr_1))\n                                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12524:12538  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                                    if /** @src 0:12584:12592  \"!success\" */ iszero(/** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ call(_4, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ add(array, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0))\n                                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                                    {\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$len := returndatasize()\n                                                        /// @src 0:1543:1547  \"2048\"\n                                                        let _5 := 0x0800\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _5)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        {\n                                                            usr$len := /** @src 0:1543:1547  \"2048\" */ _5\n                                                        }\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$ptr := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(usr$ptr, usr$len)\n                                                        returndatacopy(add(usr$ptr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                        if /** @src 0:12697:12714  \"result.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12697:12710  \"result.length\" */ usr$ptr)))\n                                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                        {\n                                                            /// @src 0:1543:1547  \"2048\"\n                                                            let _6 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12837:12851  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                            let _7 := mload(/** @src 0:12877:12890  \"mUserOp.nonce\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                            let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            mstore(_8, _7)\n                                                            /// @src 0:1543:1547  \"2048\"\n                                                            mstore(add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 64)\n                                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                            log3(_8, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)), /** @src 0:12743:12944  \"UserOperationRevertReason(...\" */ _8), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _6, cleaned_1)\n                                                        }\n                                                        /// @src 0:12980:13019  \"mode = IPaymaster.PostOpMode.opReverted\"\n                                                        var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1\n                                                    }\n                                                }\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let diff := sub(expr, /** @src 0:13107:13116  \"gasleft()\" */ gas())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _9 := add(diff, mload(add(memPtr, 128)))\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _10 := abi_decode_available_length_bytes(/** @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\" */ value2, value3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldatasize())\n                                                /// @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\"\n                                                let var_actualGas := _9\n                                                let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26799:26808  \"gasleft()\"\n                                                let expr_2 := gas()\n                                                /// @src 0:26842:26863  \"address refundAddress\"\n                                                let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26842:26863  \"address refundAddress\"\n                                                let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                                let _mpos_1 := mload(memPtr)\n                                                /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                                let expr_3 := fun_getUserOpGasPrice(_mpos_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                                /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                                case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                    /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                                    var_refundAddress := cleaned_2\n                                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                    if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _10)))\n                                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                    {\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if iszero(lt(var_mode, 3))\n                                                        {\n                                                            mstore(0, shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(0, 36)\n                                                        }\n                                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                        if /** @src 0:27313:27357  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 0:27321:27357  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            let _11 := mload(/** @src 0:27452:27483  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            if iszero(extcodesize(cleaned_2))\n                                                            {\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                revert(0, 0)\n                                                            }\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            let _12 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            mstore(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x7c627b21))\n                                                            mstore(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ add(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_mode)\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 128)\n                                                            let tail := abi_encode_bytes(_10, add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132))\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), mul(/** @src 0:27267:27287  \"actualGas * gasPrice\" */ _9, expr_3))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), expr_3)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            let trySuccessCondition := call(_11, cleaned_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, sub(tail, _12), _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            if trySuccessCondition\n                                                            {\n                                                                finalize_allocation_26283(_12)\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                var_refundAddress_1 := 0\n                                                            }\n                                                            /// @src 0:27385:27831  \"try IPaymaster(paymaster).postOp{...\"\n                                                            switch iszero(trySuccessCondition)\n                                                            case 0 { }\n                                                            default {\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                let usr$len_1 := returndatasize()\n                                                                /// @src 0:1543:1547  \"2048\"\n                                                                let _13 := 0x0800\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                {\n                                                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _13\n                                                                }\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                let usr$ptr_1 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                mstore(usr$ptr_1, usr$len_1)\n                                                                returndatacopy(add(usr$ptr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                mstore(_14, shl(226, 0x2b5e552f))\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                mstore(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ add(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _3)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                revert(_14, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14))\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                {\n                                                    /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                                    var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                }\n                                                /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                                var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(_9, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _15 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                                let sum := add(_15, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0)))\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let diff_1 := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(add(memPtr, 128)))\n                                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff_1)\n                                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                {\n                                                    /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff_1), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                                }\n                                                /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                                var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _16 := mload(add(memPtr, 64))\n                                                /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_16, var_actualGasCost)\n                                                case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                    /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                                    pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _16, var_actualGasCost)))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if iszero(lt(var_mode, 3))\n                                                    {\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                        mstore(4, 0x21)\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                    }\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _17 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                    /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                                    let _mpos_2 := mload(memPtr)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos_2), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                                    let _18 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                                    let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    mstore(_19, _18)\n                                                    mstore(add(_19, _3), /** @src 0:29364:29405  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(add(_19, 64), var_actualGasCost)\n                                                    mstore(add(_19, 96), var_actualGas)\n                                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                                    log4(_19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _17, cleaned_3, cleaned_4)\n                                                }\n                                                default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if iszero(lt(var_mode, 3))\n                                                    {\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                        mstore(4, 0x21)\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                    }\n                                                    /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                    switch /** @src 0:28761:28805  \"mode == IPaymaster.PostOpMode.postOpReverted\" */ eq(var_mode, /** @src 0:28769:28805  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                                                    case /** @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                                                        /// @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                                    }\n                                                    default /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                    {\n                                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                        var_actualGasCost := _16\n                                                        /// @src 0:28892:28898  \"opInfo\"\n                                                        fun_emitPrefundTooLow(memPtr)\n                                                        /// @src 0:28974:28983  \"actualGas\"\n                                                        fun_emitUserOperationEvent(memPtr, _16, var_actualGas)\n                                                    }\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos := mload(64)\n                                                mstore(memPos, var_actualGasCost)\n                                                return(memPos, _3)\n                                            }\n                                            case 0x01ffc9a7 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value_2 := calldataload(4)\n                                                let _20 := and(value_2, shl(224, 0xffffffff))\n                                                if iszero(eq(value_2, _20)) { revert(0, 0) }\n                                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_4 := /** @src 0:1860:1974  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId)\" */ eq(_20, /** @src 0:1876:1973  \"type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId\" */ shl(225, 0x307e35b7))\n                                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                if iszero(expr_4)\n                                                {\n                                                    expr_4 := /** @src 0:1990:2034  \"interfaceId == type(IEntryPoint).interfaceId\" */ eq(_20, /** @src 0:1876:1905  \"type(IEntryPoint).interfaceId\" */ shl(227, 0x122a0e9b))\n                                                }\n                                                /// @src 0:1860:2096  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_5 := expr_4\n                                                if iszero(expr_4)\n                                                {\n                                                    expr_5 := /** @src 0:2050:2096  \"interfaceId == type(IStakeManager).interfaceId\" */ eq(_20, /** @src 0:1908:1939  \"type(IStakeManager).interfaceId\" */ shl(224, 0xcf28ef97))\n                                                }\n                                                /// @src 0:1860:2158  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_6 := expr_5\n                                                if iszero(expr_5)\n                                                {\n                                                    expr_6 := /** @src 0:2112:2158  \"interfaceId == type(INonceManager).interfaceId\" */ eq(_20, /** @src 0:1942:1973  \"type(INonceManager).interfaceId\" */ shl(224, 0x3e84f021))\n                                                }\n                                                /// @src 0:1860:2210  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_7 := expr_6\n                                                if iszero(expr_6)\n                                                {\n                                                    expr_7 := /** @src 77:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_20, /** @src 77:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos_1 := mload(64)\n                                                mstore(memPos_1, iszero(iszero(expr_7)))\n                                                return(memPos_1, 32)\n                                            }\n                                            case 0x0396cb60 {\n                                                let _21 := 32\n                                                if slt(add(calldatasize(), not(3)), _21) { revert(0, 0) }\n                                                let value_3 := calldataload(4)\n                                                let _22 := 0xffffffff\n                                                let _23 := and(value_3, _22)\n                                                if iszero(eq(value_3, _23)) { revert(0, 0) }\n                                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_21, 0)\n                                                let dataSlot := keccak256(0, 64)\n                                                if /** @src 4:2457:2476  \"unstakeDelaySec > 0\" */ iszero(_23)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_3 := mload(64)\n                                                    mstore(memPtr_3, shl(229, 4594637))\n                                                    mstore(add(memPtr_3, 4), _21)\n                                                    mstore(add(memPtr_3, 36), 26)\n                                                    mstore(add(memPtr_3, 68), \"must specify unstake delay\")\n                                                    revert(memPtr_3, 100)\n                                                }\n                                                let _24 := sload(/** @src 4:2557:2577  \"info.unstakeDelaySec\" */ add(dataSlot, 1))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:2538:2577  \"unstakeDelaySec >= info.unstakeDelaySec\" */ lt(_23, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(120, _24), _22))\n                                                {\n                                                    let memPtr_4 := mload(64)\n                                                    mstore(memPtr_4, shl(229, 4594637))\n                                                    mstore(add(memPtr_4, 4), _21)\n                                                    mstore(add(memPtr_4, 36), 28)\n                                                    mstore(add(memPtr_4, 68), \"cannot decrease unstake time\")\n                                                    revert(memPtr_4, 100)\n                                                }\n                                                let _25 := 0xffffffffffffffffffffffffffff\n                                                /// @src 4:2657:2679  \"info.stake + msg.value\"\n                                                let expr_8 := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(8, _24), _25), /** @src 4:2670:2679  \"msg.value\" */ callvalue())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:2697:2706  \"stake > 0\" */ iszero(expr_8)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_5 := mload(64)\n                                                    mstore(memPtr_5, shl(229, 4594637))\n                                                    mstore(add(memPtr_5, 4), _21)\n                                                    mstore(add(memPtr_5, 36), 18)\n                                                    mstore(add(memPtr_5, 68), \"no stake specified\")\n                                                    revert(memPtr_5, 100)\n                                                }\n                                                if /** @src 4:2747:2773  \"stake <= type(uint112).max\" */ gt(expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25)\n                                                {\n                                                    let memPtr_6 := mload(64)\n                                                    mstore(memPtr_6, shl(229, 4594637))\n                                                    mstore(add(memPtr_6, 4), _21)\n                                                    mstore(add(memPtr_6, 36), 14)\n                                                    mstore(add(memPtr_6, 68), \"stake overflow\")\n                                                    revert(memPtr_6, 100)\n                                                }\n                                                let _26 := sload(/** @src 4:2850:2862  \"info.deposit\" */ dataSlot)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPtr_7 := mload(64)\n                                                finalize_allocation_26259(memPtr_7)\n                                                mstore(memPtr_7, _26)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _27 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21)\n                                                mstore(_27, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _28 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                mstore(_28, and(/** @src 4:2894:2908  \"uint112(stake)\" */ expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25))\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _29 := add(memPtr_7, 96)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_29, _23)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _30 := add(memPtr_7, 128)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_30, 0)\n                                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_21, 0)\n                                                let dataSlot_1 := keccak256(0, 64)\n                                                sstore(dataSlot_1, mload(memPtr_7))\n                                                let memberSlot := add(dataSlot_1, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _31 := iszero(iszero(mload(_27)))\n                                                let _32 := sload(memberSlot)\n                                                let _33 := and(shl(8, mload(_28)), 0xffffffffffffffffffffffffffff00)\n                                                sstore(memberSlot, or(or(_33, or(and(_32, shl(152, 0xffffffffffffffffffffffffff)), and(_31, 255))), and(shl(120, mload(_29)), shl(120, 0xffffffff))))\n                                                update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(_30), 0xffffffffffff))\n                                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                                let _34 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                mstore(_34, expr_8)\n                                                mstore(add(_34, _21), _23)\n                                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                                log2(_34, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\" */ 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0x0bd28e3b {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value_4 := calldataload(4)\n                                                let _35 := and(value_4, sub(shl(192, 1), 1))\n                                                if iszero(eq(value_4, _35)) { revert(0, 0) }\n                                                mstore(0, /** @src 2:913:923  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(32, /** @src 2:893:912  \"nonceSequenceNumber\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _36 := keccak256(0, 64)\n                                                mstore(0, _35)\n                                                mstore(32, _36)\n                                                let dataSlot_2 := keccak256(0, 64)\n                                                sstore(dataSlot_2, /** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot_2)))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0x1b2e01b8 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0 := abi_decode_address()\n                                                let value1 := abi_decode_uint192()\n                                                mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                                mstore(32, /** @src 2:279:353  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _37 := keccak256(0, 64)\n                                                mstore(0, and(value1, sub(shl(192, 1), 1)))\n                                                mstore(32, _37)\n                                                let _38 := sload(keccak256(0, 64))\n                                                let memPos_2 := mload(64)\n                                                mstore(memPos_2, _38)\n                                                return(memPos_2, 32)\n                                            }\n                                            case 0x205c2878 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_1 := abi_decode_address()\n                                                let value_5 := calldataload(36)\n                                                mstore(0, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(32, 0)\n                                                let dataSlot_3 := keccak256(0, 64)\n                                                let _39 := sload(/** @src 4:4852:4864  \"info.deposit\" */ dataSlot_3)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:4834:4864  \"withdrawAmount <= info.deposit\" */ gt(value_5, _39)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_8 := mload(64)\n                                                    mstore(memPtr_8, shl(229, 4594637))\n                                                    mstore(add(memPtr_8, 4), 32)\n                                                    mstore(add(memPtr_8, 36), 25)\n                                                    mstore(add(memPtr_8, 68), \"Withdraw amount too large\")\n                                                    revert(memPtr_8, 100)\n                                                }\n                                                sstore(dataSlot_3, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _39, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ value_5))\n                                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                                let _40 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                                log2(_40, sub(abi_encode_address_payable_uint256(_40, value0_1, value_5), _40), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                                let expr_component := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:5045:5065  \"withdrawAddress.call\" */ value0_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                                pop(extract_returndata())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(expr_component)\n                                                {\n                                                    let memPtr_9 := mload(64)\n                                                    mstore(memPtr_9, shl(229, 4594637))\n                                                    mstore(add(memPtr_9, 4), 32)\n                                                    mstore(add(memPtr_9, 36), 18)\n                                                    mstore(add(memPtr_9, 68), \"failed to withdraw\")\n                                                    revert(memPtr_9, 100)\n                                                }\n                                                return(0, 0)\n                                            }\n                                            case 0x22cdde4c {\n                                                if callvalue() { revert(0, 0) }\n                                                let _41 := not(3)\n                                                if slt(add(calldatasize(), _41), 32) { revert(0, 0) }\n                                                let offset_2 := calldataload(4)\n                                                if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                                if slt(add(sub(calldatasize(), offset_2), _41), 288) { revert(0, 0) }\n                                                let ret := fun_getUserOpHash(add(4, offset_2))\n                                                let memPos_3 := mload(64)\n                                                mstore(memPos_3, ret)\n                                                return(memPos_3, 32)\n                                            }\n                                            case 0x35567e1a {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_2 := abi_decode_address()\n                                                let value1_1 := abi_decode_uint192()\n                                                mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                                                mstore(32, /** @src 2:507:526  \"nonceSequenceNumber\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _42 := keccak256(0, 64)\n                                                mstore(0, and(value1_1, sub(shl(192, 1), 1)))\n                                                mstore(32, _42)\n                                                let _43 := sload(keccak256(0, 64))\n                                                let memPos_4 := mload(64)\n                                                mstore(memPos_4, /** @src 2:507:562  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_43, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shl(64, /** @src 2:543:555  \"uint256(key)\" */ value1_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(0xffffffffffffffff))))\n                                                return(memPos_4, 32)\n                                            }\n                                            case 0x5287ce12 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value0_3 := abi_decode_address()\n                                                let memPtr_10 := mload(64)\n                                                finalize_allocation_26259(memPtr_10)\n                                                mstore(memPtr_10, 0)\n                                                mstore(add(memPtr_10, 32), 0)\n                                                mstore(add(memPtr_10, 64), 0)\n                                                mstore(add(memPtr_10, 96), 0)\n                                                mstore(add(memPtr_10, 128), 0)\n                                                mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let dataSlot_4 := keccak256(0, 64)\n                                                let memPtr_11 := mload(64)\n                                                finalize_allocation_26259(memPtr_11)\n                                                let _44 := sload(dataSlot_4)\n                                                mstore(memPtr_11, _44)\n                                                let _45 := sload(add(dataSlot_4, 1))\n                                                let _46 := add(memPtr_11, 32)\n                                                mstore(_46, iszero(iszero(and(_45, 0xff))))\n                                                let _47 := 0xffffffffffffffffffffffffffff\n                                                let _48 := add(memPtr_11, 64)\n                                                mstore(_48, and(shr(8, _45), _47))\n                                                let _49 := 0xffffffff\n                                                let _50 := add(memPtr_11, 96)\n                                                mstore(_50, and(shr(120, _45), _49))\n                                                let _51 := 0xffffffffffff\n                                                let _52 := add(memPtr_11, 128)\n                                                mstore(_52, and(shr(152, _45), _51))\n                                                let memPos_5 := mload(64)\n                                                mstore(memPos_5, _44)\n                                                mstore(add(memPos_5, 32), iszero(iszero(mload(_46))))\n                                                mstore(add(memPos_5, 64), and(mload(_48), _47))\n                                                mstore(add(memPos_5, 96), and(mload(_50), _49))\n                                                mstore(add(memPos_5, 128), and(mload(_52), _51))\n                                                return(memPos_5, 160)\n                                            }\n                                            case 0x70a08231 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let _53 := sload(keccak256(0, 64))\n                                                let memPos_6 := mload(64)\n                                                mstore(memPos_6, _53)\n                                                return(memPos_6, 32)\n                                            }\n                                            case 0x765e827f {\n                                                if callvalue() { revert(0, 0) }\n                                                let param, param_1, param_2 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                                /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                                fun_nonReentrantBefore()\n                                                /// @src 0:6980:7004  \"new UserOpInfo[](opslen)\"\n                                                let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                                let var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7039:7520  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                for { }\n                                                /** @src 0:7059:7069  \"i < opslen\" */ lt(var_i, param_1)\n                                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:7071:7074  \"i++\"\n                                                    var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7071:7074  \"i++\" */ var_i, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                }\n                                                /// @src 0:7071:7074  \"i++\"\n                                                {\n                                                    /// @src 0:7260:7298  \"_validatePrepayment(i, ops[i], opInfo)\"\n                                                    let expr_component_1, expr_component_2 := fun_validatePrepayment(var_i, /** @src 0:7283:7289  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 0:7121:7131  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                                                    /// @src 0:21736:21792  \"_getValidationData(...\"\n                                                    let expr_component_3, expr_component_4 := fun_getValidationData(expr_component_1)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _54 := sub(shl(160, 1), 1)\n                                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                    if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                    {\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        let _55 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        mstore(_55, shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        revert(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                                    if expr_component_4\n                                                    {\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        let _56 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        mstore(_56, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        revert(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:22320:22385  \"_getValidationData(...\"\n                                                    let expr_component_5, expr_component_6 := fun_getValidationData(expr_component_2)\n                                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                    if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                    {\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        let _57 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        mstore(_57, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        revert(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                                    if expr_component_6\n                                                    {\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        let _58 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        mstore(_58, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        revert(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                    }\n                                                }\n                                                /// @src 0:7534:7555  \"uint256 collected = 0\"\n                                                let var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7574:7591  \"BeforeExecution()\"\n                                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:7574:7591  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                                let var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7606:7726  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                for { }\n                                                /** @src 0:7626:7636  \"i < opslen\" */ lt(var_i_1, param_1)\n                                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:7638:7641  \"i++\"\n                                                    var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7638:7641  \"i++\" */ var_i_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                }\n                                                /// @src 0:7638:7641  \"i++\"\n                                                {\n                                                    /// @src 0:7692:7698  \"ops[i]\"\n                                                    let expr_offset := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                                                    /// @src 0:7661:7711  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                                                    var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_collected, /** @src 0:7674:7711  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 0:7700:7710  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                                                }\n                                                /// @src 0:7765:7774  \"collected\"\n                                                fun_compensate(param_2, var_collected)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                return(0, 0)\n                                            }\n                                            case 0x850aaf62 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_4 := abi_decode_address()\n                                                let offset_3 := calldataload(36)\n                                                if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                                                let value1_2, value2_1 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let _59 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                calldatacopy(_59, value1_2, value2_1)\n                                                let _60 := add(_59, value2_1)\n                                                mstore(_60, 0)\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let expr_component_7 := delegatecall(gas(), value0_4, _59, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _60, /** @src 0:31052:31077  \"target.delegatecall(data)\" */ _59), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0)\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let expr_component_mpos := extract_returndata()\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                let _61 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                mstore(_61, shl(226, 0x26504155))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ add(_61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), iszero(iszero(expr_component_7)))\n                                                mstore(add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                revert(_61, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(expr_component_mpos, add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)), /** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61))\n                                            }\n                                            case /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x9b249f69 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let offset_4 := calldataload(4)\n                                                if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                                                let value0_5, value1_3 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                                                let _62 := sub(shl(160, 1), 1)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let _63 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                mstore(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                                mstore(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ add(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 32)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let _64 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _62), 0, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(value0_5, value1_3, add(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63), _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                if iszero(_64)\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let pos := mload(64)\n                                                    returndatacopy(pos, 0, returndatasize())\n                                                    revert(pos, returndatasize())\n                                                }\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let expr_9 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                if _64\n                                                {\n                                                    let _65 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32\n                                                    /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                    if gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ returndatasize()) { _65 := returndatasize() }\n                                                    finalize_allocation(_63, _65)\n                                                    expr_9 := abi_decode_address_fromMemory(_63, add(_63, _65))\n                                                }\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                let _66 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                mstore(_66, shl(225, 0x3653dc03))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16922:16949  \"SenderAddressResult(sender)\" */ add(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), and(expr_9, _62))\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                revert(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            case 0xb760faf9 {\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                fun_depositTo(abi_decode_address())\n                                                return(0, 0)\n                                            }\n                                            case 0xbb9fe6bf {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                                mstore(0, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(0x20, 0)\n                                                /// @src 4:3277:3297  \"info.unstakeDelaySec\"\n                                                let _67 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3277:3297  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _68 := sload(/** @src 4:3277:3297  \"info.unstakeDelaySec\" */ _67)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let value_6 := and(shr(120, _68), 0xffffffff)\n                                                if /** @src 4:3277:3302  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_6)\n                                                {\n                                                    let memPtr_12 := mload(64)\n                                                    mstore(memPtr_12, shl(229, 4594637))\n                                                    mstore(add(memPtr_12, 4), 0x20)\n                                                    mstore(add(memPtr_12, 36), 10)\n                                                    mstore(add(memPtr_12, 68), \"not staked\")\n                                                    revert(memPtr_12, 100)\n                                                }\n                                                if iszero(and(_68, 0xff))\n                                                {\n                                                    let memPtr_13 := mload(64)\n                                                    mstore(memPtr_13, shl(229, 4594637))\n                                                    mstore(add(memPtr_13, 4), 0x20)\n                                                    mstore(add(memPtr_13, 36), 17)\n                                                    mstore(add(memPtr_13, 68), \"already unstaking\")\n                                                    revert(memPtr_13, 100)\n                                                }\n                                                let _69 := 0xffffffffffff\n                                                let sum_1 := add(and(/** @src 4:3407:3422  \"block.timestamp\" */ timestamp(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _69), value_6)\n                                                if gt(sum_1, _69)\n                                                {\n                                                    mstore(0, shl(224, 0x4e487b71))\n                                                    mstore(4, 0x11)\n                                                    revert(0, 0x24)\n                                                }\n                                                /// @src 4:3456:3488  \"info.withdrawTime = withdrawTime\"\n                                                update_storage_value_offsett_uint48_to_uint48(_67, sum_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(_67, and(sload(_67), not(255)))\n                                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                                let _70 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                mstore(_70, and(sum_1, _69))\n                                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                                log2(_70, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20, /** @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\" */ 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0xc23a5cea {\n                                                if callvalue() { revert(0, 0) }\n                                                let _71 := 32\n                                                if slt(add(calldatasize(), not(3)), _71) { revert(0, 0) }\n                                                let value0_6 := abi_decode_address()\n                                                mstore(0, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_71, 0)\n                                                /// @src 4:3934:3944  \"info.stake\"\n                                                let _72 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3934:3944  \"info.stake\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _73 := sload(/** @src 4:3934:3944  \"info.stake\" */ _72)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let value_7 := and(shr(8, _73), 0xffffffffffffffffffffffffffff)\n                                                if /** @src 4:3962:3971  \"stake > 0\" */ iszero(value_7)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_14 := mload(64)\n                                                    mstore(memPtr_14, shl(229, 4594637))\n                                                    mstore(add(memPtr_14, 4), _71)\n                                                    mstore(add(memPtr_14, 36), 20)\n                                                    mstore(add(memPtr_14, 68), \"No stake to withdraw\")\n                                                    revert(memPtr_14, 100)\n                                                }\n                                                let value_8 := and(shr(152, _73), 0xffffffffffff)\n                                                if /** @src 4:4014:4035  \"info.withdrawTime > 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8)\n                                                {\n                                                    let memPtr_15 := mload(64)\n                                                    mstore(memPtr_15, shl(229, 4594637))\n                                                    mstore(add(memPtr_15, 4), _71)\n                                                    mstore(add(memPtr_15, 36), 29)\n                                                    mstore(add(memPtr_15, 68), \"must call unlockStake() first\")\n                                                    revert(memPtr_15, 100)\n                                                }\n                                                if /** @src 4:4100:4136  \"info.withdrawTime <= block.timestamp\" */ gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8, /** @src 4:4121:4136  \"block.timestamp\" */ timestamp())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_16 := mload(64)\n                                                    mstore(memPtr_16, shl(229, 4594637))\n                                                    mstore(add(memPtr_16, 4), _71)\n                                                    mstore(add(memPtr_16, 36), 27)\n                                                    mstore(add(memPtr_16, 68), \"Stake withdrawal is not due\")\n                                                    revert(memPtr_16, 100)\n                                                }\n                                                sstore(_72, and(_73, not(sub(shl(200, 1), 256))))\n                                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                                let _74 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                                log2(_74, sub(abi_encode_address_payable_uint256(_74, value0_6, value_7), _74), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                                let expr_component_8 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:4371:4391  \"withdrawAddress.call\" */ value0_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ value_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                                pop(extract_returndata())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(expr_component_8)\n                                                {\n                                                    let memPtr_17 := mload(64)\n                                                    mstore(memPtr_17, shl(229, 4594637))\n                                                    mstore(add(memPtr_17, 4), _71)\n                                                    mstore(add(memPtr_17, 36), 24)\n                                                    mstore(add(memPtr_17, 68), \"failed to withdraw stake\")\n                                                    revert(memPtr_17, 100)\n                                                }\n                                                return(0, 0)\n                                            }\n                                            case 0xdbed18e0 {\n                                                if callvalue() { revert(0, 0) }\n                                                let param_3, param_4, param_5 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                                /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                                fun_nonReentrantBefore()\n                                                /// @src 0:8042:8062  \"uint256 totalOps = 0\"\n                                                let var_totalOps := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                                let var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8072:8839  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                                                for { }\n                                                /** @src 0:8092:8103  \"i < opasLen\" */ lt(var_i_2, param_4)\n                                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:8105:8108  \"i++\"\n                                                    var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8105:8108  \"i++\" */ var_i_2, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:8105:8108  \"i++\"\n                                                {\n                                                    /// @src 0:8160:8179  \"opsPerAggregator[i]\"\n                                                    let expr_offset_1 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_i_2)\n                                                    /// @src 0:8230:8241  \"opa.userOps\"\n                                                    let expr_offset_2, expr_length := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_1, expr_offset_1)\n                                                    /// @src 0:8280:8294  \"opa.aggregator\"\n                                                    let _75 := 32\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _76 := and(/** @src 0:8280:8294  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_1, _75)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    /// @src 0:8429:8430  \"1\"\n                                                    let _77 := 0x01\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if /** @src 0:8398:8431  \"address(aggregator) != address(1)\" */ eq(_76, /** @src 0:8429:8430  \"1\" */ _77)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    {\n                                                        let memPtr_18 := mload(64)\n                                                        mstore(memPtr_18, shl(229, 4594637))\n                                                        mstore(add(memPtr_18, 4), /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(add(memPtr_18, 36), 23)\n                                                        mstore(add(memPtr_18, 68), \"AA96 invalid aggregator\")\n                                                        revert(memPtr_18, 100)\n                                                    }\n                                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                                    if /** @src 0:8507:8540  \"address(aggregator) != address(0)\" */ iszero(iszero(_76))\n                                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                                    {\n                                                        /// @src 0:8660:8673  \"opa.signature\"\n                                                        let expr_offset_3, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset_1, add(expr_offset_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64))\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        if iszero(extcodesize(_76))\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            revert(0, 0)\n                                                        }\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        let _78 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        mstore(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x2dd81133))\n                                                        let tail_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)\n                                                        mstore(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ add(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 64)\n                                                        let pos_1 := tail_1\n                                                        mstore(tail_1, expr_length)\n                                                        let _79 := 100\n                                                        pos_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _79)\n                                                        let tail_2 := add(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(5, expr_length)), _79)\n                                                        let srcPtr := expr_offset_2\n                                                        let i := 0\n                                                        for { }\n                                                        lt(i, expr_length)\n                                                        {\n                                                            i := add(i, /** @src 0:8429:8430  \"1\" */ _77)\n                                                        }\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        {\n                                                            mstore(pos_1, add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(99)))\n                                                            let rel_offset_of_tail := calldataload(srcPtr)\n                                                            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_2), not(286)))) { revert(0, 0) }\n                                                            tail_2 := abi_encode_struct_PackedUserOperation_calldata(add(rel_offset_of_tail, expr_offset_2), tail_2)\n                                                            srcPtr := add(srcPtr, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            pos_1 := add(pos_1, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                        }\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(3)))\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        let trySuccessCondition_1 := staticcall(gas(), _76, _78, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_3, expr_length_1, tail_2), /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        if trySuccessCondition_1\n                                                        {\n                                                            finalize_allocation_26283(_78)\n                                                        }\n                                                        /// @src 0:8621:8778  \"try aggregator.validateSignatures(ops, opa.signature) {} catch {...\"\n                                                        switch iszero(trySuccessCondition_1)\n                                                        case 0 { }\n                                                        default {\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            let _80 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            mstore(_80, shl(228, 0x086a9f75))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\" */ add(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _76)\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            revert(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                        }\n                                                    }\n                                                    /// @src 0:8806:8828  \"totalOps += ops.length\"\n                                                    var_totalOps := checked_add_uint256(var_totalOps, /** @src 0:8818:8828  \"ops.length\" */ expr_length)\n                                                }\n                                                /// @src 0:8879:8905  \"new UserOpInfo[](totalOps)\"\n                                                let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                                                /// @src 0:8916:8935  \"uint256 opIndex = 0\"\n                                                let var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                                let var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8945:9776  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                                for { }\n                                                /** @src 0:8965:8976  \"a < opasLen\" */ lt(var_a, param_4)\n                                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                                {\n                                                    /// @src 0:8978:8981  \"a++\"\n                                                    var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8978:8981  \"a++\" */ var_a, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:8978:8981  \"a++\"\n                                                {\n                                                    /// @src 0:9033:9052  \"opsPerAggregator[a]\"\n                                                    let expr_offset_4 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a)\n                                                    /// @src 0:9103:9114  \"opa.userOps\"\n                                                    let expr_offset_5, expr_length_2 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_4, expr_offset_4)\n                                                    /// @src 0:9153:9167  \"opa.aggregator\"\n                                                    let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_4, /** @src 0:8280:8294  \"opa.aggregator\" */ 32))\n                                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                                    let var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    let _81 := sub(shl(160, 1), 1)\n                                                    let _82 := and(/** @src 0:9687:9706  \"address(aggregator)\" */ expr_address, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)\n                                                    /// @src 0:9223:9766  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                    for { }\n                                                    /** @src 0:9243:9253  \"i < opslen\" */ lt(var_i_3, expr_length_2)\n                                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                                    {\n                                                        /// @src 0:9255:9258  \"i++\"\n                                                        var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9255:9258  \"i++\" */ var_i_3, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                    }\n                                                    /// @src 0:9255:9258  \"i++\"\n                                                    {\n                                                        /// @src 0:9457:9501  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                                                        let expr_component_9, expr_component_10 := fun_validatePrepayment(var_opIndex, /** @src 0:9486:9492  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_5, expr_length_2, var_i_3), /** @src 0:9305:9321  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex)))\n                                                        /// @src 0:21736:21792  \"_getValidationData(...\"\n                                                        let expr_component_11, expr_component_12 := fun_getValidationData(expr_component_9)\n                                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                        if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _82, and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_11, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                        {\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            let _83 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            mstore(_83, shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            revert(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                                        if expr_component_12\n                                                        {\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            let _84 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            mstore(_84, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            revert(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:22320:22385  \"_getValidationData(...\"\n                                                        let expr_component_13, expr_component_14 := fun_getValidationData(expr_component_10)\n                                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                        if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                        {\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            let _85 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            mstore(_85, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            revert(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                                        if expr_component_14\n                                                        {\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            let _86 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            mstore(_86, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            revert(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                        }\n                                                        /// @src 0:9742:9751  \"opIndex++\"\n                                                        var_opIndex := increment_uint256(var_opIndex)\n                                                    }\n                                                }\n                                                /// @src 0:9791:9808  \"BeforeExecution()\"\n                                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9791:9808  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                                /// @src 0:9850:9861  \"opIndex = 0\"\n                                                var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9819:9840  \"uint256 collected = 0\"\n                                                let var_collected_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                                let var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9871:10335  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                                for { }\n                                                /** @src 0:9891:9902  \"a < opasLen\" */ lt(var_a_1, param_4)\n                                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                                {\n                                                    /// @src 0:9904:9907  \"a++\"\n                                                    var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9904:9907  \"a++\" */ var_a_1, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:9904:9907  \"a++\"\n                                                {\n                                                    /// @src 0:9959:9978  \"opsPerAggregator[a]\"\n                                                    let expr_offset_6 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a_1)\n                                                    /// @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                                                    log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:10032:10046  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_6, /** @src 0:8280:8294  \"opa.aggregator\" */ 32)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                                    /// @src 0:10099:10110  \"opa.userOps\"\n                                                    let expr_offset_7, expr_length_3 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_6, expr_offset_6)\n                                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                                    let var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    /// @src 0:10166:10325  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                    for { }\n                                                    /** @src 0:10186:10196  \"i < opslen\" */ lt(var_i_4, expr_length_3)\n                                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                                    {\n                                                        /// @src 0:10198:10201  \"i++\"\n                                                        var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:10198:10201  \"i++\" */ var_i_4, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                    }\n                                                    /// @src 0:10198:10201  \"i++\"\n                                                    {\n                                                        /// @src 0:10258:10264  \"ops[i]\"\n                                                        let expr_offset_8 := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_7, expr_length_3, var_i_4)\n                                                        /// @src 0:10221:10283  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                                                        var_collected_1 := checked_add_uint256(var_collected_1, /** @src 0:10234:10283  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_8, /** @src 0:10266:10282  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex))))\n                                                        /// @src 0:10301:10310  \"opIndex++\"\n                                                        var_opIndex := increment_uint256(var_opIndex)\n                                                    }\n                                                }\n                                                /// @src 0:10349:10387  \"SignatureAggregatorChanged(address(0))\"\n                                                log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                /// @src 0:10423:10432  \"collected\"\n                                                fun_compensate(param_5, var_collected_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0xfc7e286d {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let dataSlot_5 := keccak256(0, 64)\n                                                let _87 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ dataSlot_5)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _88 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot_5, 1))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos_7 := mload(64)\n                                                mstore(memPos_7, _87)\n                                                mstore(add(memPos_7, 32), iszero(iszero(and(_88, 0xff))))\n                                                mstore(add(memPos_7, 64), and(shr(8, _88), 0xffffffffffffffffffffffffffff))\n                                                mstore(add(memPos_7, 96), and(shr(120, _88), 0xffffffff))\n                                                mstore(add(memPos_7, 128), and(shr(152, _88), 0xffffffffffff))\n                                                return(memPos_7, 160)\n                                            }\n                                        }\n                                        if iszero(calldatasize())\n                                        {\n                                            /// @src 4:1326:1336  \"msg.sender\"\n                                            fun_depositTo(caller())\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            stop()\n                                        }\n                                        revert(0, 0)\n                                    }\n                                    function finalize_allocation_26259(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 0xa0)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation_26260(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 0x0140)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation_26283(memPtr)\n                                    {\n                                        if gt(memPtr, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, memPtr)\n                                    }\n                                    function finalize_allocation_26350(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 96)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation(memPtr, size)\n                                    {\n                                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function array_allocation_size_bytes(length) -> size\n                                    {\n                                        if gt(length, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        size := add(and(add(length, 31), not(31)), 0x20)\n                                    }\n                                    function abi_decode_available_length_bytes(src, length, end) -> array\n                                    {\n                                        let _1 := array_allocation_size_bytes(length)\n                                        let memPtr := mload(64)\n                                        finalize_allocation(memPtr, _1)\n                                        array := memPtr\n                                        mstore(memPtr, length)\n                                        if gt(add(src, length), end)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        calldatacopy(add(memPtr, 0x20), src, length)\n                                        mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_decode_address() -> value\n                                    {\n                                        value := calldataload(4)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                                    {\n                                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                        length := calldataload(offset)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        arrayPos := add(offset, 0x20)\n                                        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                                    }\n                                    function abi_decode_uint192() -> value\n                                    {\n                                        value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n                                    {\n                                        if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                                        let offset := calldataload(4)\n                                        let _1 := 0xffffffffffffffff\n                                        if gt(offset, _1) { revert(0, 0) }\n                                        if iszero(slt(add(offset, 35), dataEnd))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let length := calldataload(add(4, offset))\n                                        if gt(length, _1)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value0 := add(offset, 36)\n                                        value1 := length\n                                        let value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value2 := value\n                                    }\n                                    /// @src 0:1543:1547  \"2048\"\n                                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                                    {\n                                        let i := 0\n                                        for { } lt(i, length) { i := add(i, 32) }\n                                        {\n                                            mstore(add(dst, i), mload(add(src, i)))\n                                        }\n                                        mstore(add(dst, length), 0)\n                                    }\n                                    function abi_encode_bytes(value, pos) -> end\n                                    {\n                                        let length := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:1543:1547  \"2048\" */ value)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(pos, length)\n                                        /// @src 0:1543:1547  \"2048\"\n                                        copy_memory_to_memory_with_cleanup(add(value, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20), add(pos, 0x20), /** @src 0:1543:1547  \"2048\" */ length)\n                                        end := add(add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ pos, and(add(/** @src 0:1543:1547  \"2048\" */ length, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 31), not(31))), 0x20)\n                                    }\n                                    function checked_add_uint256(x, y) -> sum\n                                    {\n                                        sum := add(x, y)\n                                        if gt(x, sum)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                    }\n                                    function update_storage_value_offsett_uint48_to_uint48(slot, value)\n                                    {\n                                        let _1 := sload(slot)\n                                        sstore(slot, or(and(_1, not(shl(152, 0xffffffffffff))), and(shl(152, value), shl(152, 0xffffffffffff))))\n                                    }\n                                    function increment_uint256(value) -> ret\n                                    {\n                                        if eq(value, not(0))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                        ret := add(value, 1)\n                                    }\n                                    function checked_sub_uint256(x, y) -> diff\n                                    {\n                                        diff := sub(x, y)\n                                        if gt(diff, x)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                    }\n                                    function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n                                    {\n                                        tail := add(headStart, 64)\n                                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(add(headStart, 32), value1)\n                                    }\n                                    function extract_returndata() -> data\n                                    {\n                                        switch returndatasize()\n                                        case 0 { data := 96 }\n                                        default {\n                                            let _1 := returndatasize()\n                                            let _2 := array_allocation_size_bytes(_1)\n                                            let memPtr := mload(64)\n                                            finalize_allocation(memPtr, _2)\n                                            mstore(memPtr, _1)\n                                            data := memPtr\n                                            returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                        }\n                                    }\n                                    /// @ast-id 968 @src 0:13258:13464  \"function getUserOpHash(...\"\n                                    function fun_getUserOpHash(var_userOp_947_offset) -> var\n                                    {\n                                        /// @src 5:1998:2013  \"userOp.initCode\"\n                                        let _1 := 64\n                                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, _1))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem, expr_offset, expr_length)\n                                        let var_ret := keccak256(usr$mem, expr_length)\n                                        /// @src 5:2062:2077  \"userOp.callData\"\n                                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 96))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem_1 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem_1, expr_offset_1, expr_length_1)\n                                        let var_ret_1 := keccak256(usr$mem_1, expr_length_1)\n                                        /// @src 5:2300:2323  \"userOp.paymasterAndData\"\n                                        let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 224))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem_2 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem_2, expr_offset_2, expr_length_2)\n                                        let var_ret_2 := keccak256(usr$mem_2, expr_length_2)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        let expr_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        let _2 := add(expr_mpos, /** @src 5:1938:1950  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_2, and(/** @src 5:823:884  \"assembly {...\" */ calldataload(/** @src 5:1895:1912  \"getSender(userOp)\" */ var_userOp_947_offset), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:1998:2013  \"userOp.initCode\" */ _1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:1938:1950  \"userOp.nonce\" */ add(var_userOp_947_offset, 32)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2062:2077  \"userOp.callData\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret)\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2115:2138  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret_1)\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2177:2202  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2115:2138  \"userOp.accountGasLimits\" */ add(var_userOp_947_offset, 128)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2230:2244  \"userOp.gasFees\" */ 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2177:2202  \"userOp.preVerificationGas\" */ add(var_userOp_947_offset, 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2300:2323  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2230:2244  \"userOp.gasFees\" */ add(var_userOp_947_offset, 192)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := 256\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), var_ret_2)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        mstore(expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                        let newFreePtr := add(expr_mpos, 288)\n                                        let _4 := 0xffffffffffffffff\n                                        if or(gt(newFreePtr, _4), lt(newFreePtr, expr_mpos))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr)\n                                        /// @src 5:4955:4987  \"return keccak256(encode(userOp))\"\n                                        let var_1 := /** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ expr_mpos))\n                                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                        let _5 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ expr_mpos, /** @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ 320)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_5, var_1)\n                                        mstore(add(expr_mpos, 352), /** @src 0:13435:13439  \"this\" */ address())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(expr_mpos, 384), /** @src 0:13442:13455  \"block.chainid\" */ chainid())\n                                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                        mstore(newFreePtr, /** @src 5:2062:2077  \"userOp.callData\" */ 96)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let newFreePtr_1 := add(expr_mpos, 416)\n                                        if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, newFreePtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr_1)\n                                        /// @src 0:13372:13457  \"return...\"\n                                        var := /** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ newFreePtr))\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n                                    {\n                                        if gt(length, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        size := add(shl(5, length), 0x20)\n                                    }\n                                    function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n                                    {\n                                        let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                                        let _2 := 64\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation(memPtr_1, _1)\n                                        mstore(memPtr_1, length)\n                                        memPtr := memPtr_1\n                                        let _3 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        for { } lt(i, _3) { i := add(i, 32) }\n                                        {\n                                            let memPtr_2 := mload(_2)\n                                            finalize_allocation_26259(memPtr_2)\n                                            let memPtr_3 := mload(_2)\n                                            finalize_allocation_26260(memPtr_3)\n                                            mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _4 := 32\n                                            mstore(add(memPtr_3, _4), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, _2), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _5 := 96\n                                            mstore(add(memPtr_3, _5), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _6 := 128\n                                            mstore(add(memPtr_3, _6), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 160), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 192), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 224), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 256), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 288), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(memPtr_2, memPtr_3)\n                                            mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _5), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _6), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                                        }\n                                    }\n                                    function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n                                    {\n                                        if iszero(lt(index, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ baseRef)))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        addr := add(add(baseRef, shl(5, index)), 32)\n                                    }\n                                    function calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n                                    {\n                                        if iszero(lt(index, length))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(286))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        addr := add(base_ref, rel_offset_of_tail)\n                                    }\n                                    function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                                    {\n                                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                                        let value := mload(headStart)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value0 := value\n                                    }\n                                    function abi_encode_bytes_calldata(start, length, pos) -> end\n                                    {\n                                        mstore(pos, length)\n                                        calldatacopy(add(pos, 0x20), start, length)\n                                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                                    }\n                                    /// @ast-id 2547 @src 4:1935:2114  \"function depositTo(address account) public virtual payable {...\"\n                                    function fun_depositTo(var_account)\n                                    {\n                                        /// @src 4:2025:2062  \"_incrementDeposit(account, msg.value)\"\n                                        let expr := fun_incrementDeposit(var_account, /** @src 4:2052:2061  \"msg.value\" */ callvalue())\n                                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                        let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_1, expr)\n                                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                        log2(_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ var_account, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                    }\n                                    function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n                                    {\n                                        if iszero(lt(index, length))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        addr := add(base_ref, rel_offset_of_tail)\n                                    }\n                                    function access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                                        length := calldataload(addr_1)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        addr := add(addr_1, 0x20)\n                                        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                                    }\n                                    function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n                                    {\n                                        let value := calldataload(ptr)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        returnValue := value\n                                    }\n                                    function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                                        length := calldataload(addr_1)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        addr := add(addr_1, 0x20)\n                                        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                                    }\n                                    function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let value_1 := add(rel_offset_of_tail, base_ref)\n                                        length := calldataload(value_1)\n                                        value := add(value_1, 0x20)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n                                    }\n                                    function abi_encode_struct_PackedUserOperation_calldata(value, pos) -> end\n                                    {\n                                        let _1 := 0x0120\n                                        let value_1 := calldataload(value)\n                                        let _2 := and(value_1, sub(shl(160, 1), 1))\n                                        if iszero(eq(value_1, _2))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(pos, _2)\n                                        mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                                        let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                                        mstore(add(pos, 0x40), _1)\n                                        let tail := abi_encode_bytes_calldata(memberValue0, memberValue1, add(pos, _1))\n                                        let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                                        mstore(add(pos, 0x60), sub(tail, pos))\n                                        let tail_1 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail)\n                                        mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                                        mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                                        mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                                        let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, 0xe0))\n                                        mstore(add(pos, 0xe0), sub(tail_1, pos))\n                                        let tail_2 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_1)\n                                        let _3 := 0x0100\n                                        let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _3))\n                                        mstore(add(pos, _3), sub(tail_2, pos))\n                                        end := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_2)\n                                    }\n                                    /// @ast-id 49092 @src 73:2431:2738  \"function _nonReentrantBefore() private {...\"\n                                    function fun_nonReentrantBefore()\n                                    {\n                                        /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                        if /** @src 73:2558:2576  \"_status == ENTERED\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 73:2558:2565  \"_status\" */ 0x02), 0x02)\n                                        /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                        {\n                                            /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                            let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                            mstore(_1, shl(224, 0x3ee5aeb5))\n                                            revert(_1, 4)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 73:2558:2565  \"_status\" */ 0x02, 0x02)\n                                    }\n                                    /// @ast-id 1795 @src 0:23805:25958  \"function _validatePrepayment(...\"\n                                    function fun_validatePrepayment(var_opIndex, var_userOp_1628_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n                                    {\n                                        /// @src 0:24005:24036  \"uint256 paymasterValidationData\"\n                                        var_paymasterValidationData := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:24069:24078  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:24118:24135  \"outOpInfo.mUserOp\"\n                                        let _431_mpos := mload(var_outOpInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value := calldataload(var_userOp_1628_offset)\n                                        let _1 := and(value, sub(shl(160, 1), 1))\n                                        if iszero(eq(value, _1)) { revert(0, 0) }\n                                        mstore(_431_mpos, _1)\n                                        mstore(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13851:13863  \"userOp.nonce\" */ add(var_userOp_1628_offset, 32)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := calldataload(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ add(var_userOp_1628_offset, 128))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := 0xffffffffffffffffffffffffffffffff\n                                        mstore(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                        mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _2))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _4 := calldataload(/** @src 0:14139:14153  \"userOp.gasFees\" */ add(var_userOp_1628_offset, /** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ 192))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                        mstore(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _4))\n                                        /// @src 0:14198:14221  \"userOp.paymasterAndData\"\n                                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, 224))\n                                        /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                        switch /** @src 0:14235:14262  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_length))\n                                        case /** @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14632:14649  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            mstore(/** @src 0:14676:14713  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            mstore(/** @src 0:14731:14762  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        }\n                                        default /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                        {\n                                            /// @src 5:490:492  \"52\"\n                                            if /** @src 0:14303:14368  \"paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET\" */ lt(expr_length, /** @src 5:490:492  \"52\" */ 0x34)\n                                            {\n                                                let memPtr := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 5:490:492  \"52\"\n                                                mstore(memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(229, 4594637))\n                                                /// @src 5:490:492  \"52\"\n                                                mstore(add(memPtr, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 5:490:492  \"52\" */ add(memPtr, 36), 29)\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 5:490:492  \"52\" */ memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 5:490:492  \"52\" */ \"AA93 invalid paymasterAndData\")\n                                                revert(memPtr, 100)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(0x14, expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 5:434:436  \"36\" */ 0x24, /** @src 5:372:374  \"20\" */ expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 5:490:492  \"52\" */ 0x34, /** @src 5:372:374  \"20\" */ expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            mstore(/** @src 0:14504:14535  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, /** @src 5:434:436  \"36\" */ 0x24))))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14465:14502  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, 0x14))))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14446:14463  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 5:4451:4511  \"bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])\" */ expr_offset)))\n                                        }\n                                        /// @src 0:24214:24235  \"getUserOpHash(userOp)\"\n                                        let _5 := fun_getUserOpHash(var_userOp_1628_offset)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5)\n                                        let _6 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                        /// @src 0:24491:24552  \"mUserOp.preVerificationGas |...\"\n                                        let expr_1 := or(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)), /** @src 0:24491:24552  \"mUserOp.preVerificationGas |...\" */ _6)\n                                        /// @src 0:24491:24587  \"mUserOp.preVerificationGas |...\"\n                                        let expr_2 := or(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                        /// @src 0:24491:24639  \"mUserOp.preVerificationGas |...\"\n                                        let expr_3 := or(expr_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                        /// @src 0:24491:24685  \"mUserOp.preVerificationGas |...\"\n                                        let expr_4 := or(expr_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                        /// @src 0:24491:24720  \"mUserOp.preVerificationGas |...\"\n                                        let expr_5 := or(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 0:24781:24814  \"maxGasValues <= type(uint120).max\" */ gt(/** @src 0:24491:24763  \"mUserOp.preVerificationGas |...\" */ or(expr_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288))), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffffffffffffffffff)\n                                        {\n                                            let memPtr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(memPtr_1, shl(229, 4594637))\n                                            mstore(add(memPtr_1, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_1, 36), 24)\n                                            mstore(add(memPtr_1, 68), \"AA94 gas values overflow\")\n                                            revert(memPtr_1, 100)\n                                        }\n                                        let _7 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum := add(_7, mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_1 := add(sum, mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_2 := add(sum_1, mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_3 := add(sum_2, mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let product := mul(sum_3, mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                        /// @src 0:24935:25098  \"_validateAccountPrepayment(...\"\n                                        let var_validationData_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:17742:17756  \"opInfo.mUserOp\"\n                                        let _mpos := mload(var_outOpInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17787:17801  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 0:17854:17865  \"op.initCode\"\n                                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                        if /** @src 0:15810:15830  \"initCode.length != 0\" */ iszero(iszero(expr_length_1))\n                                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                        {\n                                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                            if /** @src 0:15902:15925  \"sender.code.length != 0\" */ iszero(iszero(/** @src 0:15902:15920  \"sender.code.length\" */ extcodesize(cleaned)))\n                                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                            {\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                mstore(_8, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ add(_8, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 31)\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA10 sender already constructed\")\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                revert(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            let _9 := mload(/** @src 0:16085:16120  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 0:16085:16099  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let _10 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            mstore(_10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                            mstore(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ add(_10, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let _11 := call(_9, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10), _10, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            if iszero(_11)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let pos := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                returndatacopy(pos, 0, returndatasize())\n                                                revert(pos, returndatasize())\n                                            }\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let expr_6 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            if _11\n                                            {\n                                                let _12 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                                /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                                if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ returndatasize()) { _12 := returndatasize() }\n                                                finalize_allocation(_10, _12)\n                                                expr_6 := abi_decode_address_fromMemory(_10, add(_10, _12))\n                                            }\n                                            /// @src 0:16162:16183  \"sender1 == address(0)\"\n                                            let _13 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:16162:16183  \"sender1 == address(0)\" */ expr_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                            if /** @src 0:16162:16183  \"sender1 == address(0)\" */ iszero(_13)\n                                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                            {\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                mstore(_14, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ add(_14, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 27)\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA13 initCode failed or OOG\")\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                revert(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                            if /** @src 0:16274:16291  \"sender1 != sender\" */ iszero(eq(_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned))\n                                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                            {\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                let _15 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                mstore(_15, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ add(_15, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA14 initCode must return sender\")\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                revert(_15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                            if /** @src 0:16387:16411  \"sender1.code.length == 0\" */ iszero(/** @src 0:16387:16406  \"sender1.code.length\" */ extcodesize(expr_6))\n                                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                            {\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                let _16 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                mstore(_16, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ add(_16, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA15 initCode must create sender\")\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                revert(_16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 0:16548:16550  \"20\" */ 0x14, /** @src 5:372:374  \"20\" */ expr_length_1)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _17 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:16689:16713  \"opInfo.mUserOp.paymaster\" */ add(/** @src 0:16689:16703  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                            let _18 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(_18, /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 0:16529:16552  \"bytes20(initCode[0:20])\" */ expr_offset_1)))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(_18, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                            log3(_18, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:16572:16727  \"AccountDeployed(...\" */ 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _17, cleaned)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17900:17917  \"mUserOp.paymaster\" */ add(_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 0:17931:17962  \"uint256 missingAccountFunds = 0\"\n                                        let var_missingAccountFunds := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(0, cleaned)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let _19 := sload(keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            let expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            switch /** @src 0:18094:18115  \"bal > requiredPrefund\" */ gt(_19, product)\n                                            case /** @src 0:18094:18183  \"bal > requiredPrefund...\" */ 0 {\n                                                expr_7 := /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18162:18183  \"requiredPrefund - bal\" */ product, _19)\n                                            }\n                                            default /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            {\n                                                expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            }\n                                            /// @src 0:18072:18183  \"missingAccountFunds = bal > requiredPrefund...\"\n                                            var_missingAccountFunds := expr_7\n                                        }\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _20 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let _21 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        mstore(_21, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x06608bdf))\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let trySuccessCondition := call(_6, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ _21, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_21, 4), var_userOp_1628_offset, _20, var_missingAccountFunds), _21), _21, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        if trySuccessCondition\n                                        {\n                                            let _22 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                            if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _22 := returndatasize() }\n                                            finalize_allocation(_21, _22)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if slt(sub(/** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ add(_21, _22), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            { revert(0, 0) }\n                                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                            expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(_21)\n                                        }\n                                        /// @src 0:18211:18617  \"try...\"\n                                        switch iszero(trySuccessCondition)\n                                        case 0 {\n                                            /// @src 0:18436:18468  \"validationData = _validationData\"\n                                            var_validationData_1 := expr_8\n                                        }\n                                        default /// @src 0:18211:18617  \"try...\"\n                                        {\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$len := returndatasize()\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _23 := 0x0800\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _23)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            {\n                                                usr$len := /** @src 0:1543:1547  \"2048\" */ _23\n                                            }\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$ptr := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(usr$ptr, usr$len)\n                                            returndatacopy(add(usr$ptr, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            let _24 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            mstore(_24, shl(224, 0x65c8fd4d))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_24, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA23 reverted\")\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            revert(_24, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr, add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24))\n                                        }\n                                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(0, cleaned)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let dataSlot := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _25 := sload(/** @src 0:18762:18780  \"senderInfo.deposit\" */ dataSlot)\n                                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                            if /** @src 0:18802:18827  \"requiredPrefund > deposit\" */ gt(product, _25)\n                                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                            {\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                let _26 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                mstore(_26, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ add(_26, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA21 didn't pay prefund\")\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                revert(_26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            sstore(dataSlot, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18959:18984  \"deposit - requiredPrefund\" */ _25, product))\n                                        }\n                                        /// @src 0:24918:25098  \"validationData = _validateAccountPrepayment(...\"\n                                        var_validationData := var_validationData_1\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25138:25152  \"mUserOp.sender\" */ _431_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _27 := mload(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0, cleaned_3)\n                                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        let _28 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0, shr(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _27))\n                                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _28)\n                                        let dataSlot_1 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _29 := sload(/** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ dataSlot_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(dataSlot_1, /** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_29))\n                                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                        if /** @src 0:25113:25168  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ iszero(/** @src 2:1373:1414  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_29, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 2:1343:1356  \"uint64(nonce)\" */ _27, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffff)))\n                                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                        {\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            let _30 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            mstore(_30, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ add(_30, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 26)\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA25 invalid account nonce\")\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            revert(_30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                        if /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25296:25305  \"gasleft()\" */ gas()), /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ _6)\n                                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                        {\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            let _31 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            mstore(_31, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ add(_31, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA26 over verificationGasLimit\")\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            revert(_31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:25441:25461  \"bytes memory context\"\n                                        let var_context_1745_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:25441:25461  \"bytes memory context\"\n                                        var_context_1745_mpos := /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96\n                                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                        if /** @src 0:25475:25506  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25475:25492  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))))\n                                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                        {\n                                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                            let var_context_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                            let var_validationData_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:19872:19881  \"gasleft()\"\n                                            let expr_9 := gas()\n                                            /// @src 0:19925:19939  \"opInfo.mUserOp\"\n                                            let _mpos_1 := mload(var_outOpInfo_mpos)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:19973:19990  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            mstore(0, cleaned_4)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let dataSlot_2 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _32 := sload(/** @src 0:20091:20112  \"paymasterInfo.deposit\" */ dataSlot_2)\n                                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                            if /** @src 0:20130:20155  \"deposit < requiredPreFund\" */ lt(_32, product)\n                                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                            {\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                let _33 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                mstore(_33, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ add(_33, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA31 paymaster deposit too low\")\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                revert(_33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            sstore(dataSlot_2, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:20285:20310  \"deposit - requiredPreFund\" */ _32, product))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _34 := mload(/** @src 0:20357:20394  \"mUserOp.paymasterVerificationGasLimit\" */ add(_mpos_1, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128))\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _35 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let _36 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            mstore(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x14add44b))\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let trySuccessCondition_1 := call(_34, cleaned_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _36, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_36, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ var_userOp_1628_offset, _35, product), _36), _36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let expr_component_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            let expr_component := 0\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            if trySuccessCondition_1\n                                            {\n                                                let _37 := returndatasize()\n                                                returndatacopy(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _37)\n                                                finalize_allocation(_36, _37)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if slt(sub(/** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                let offset := mload(_36)\n                                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                                if iszero(slt(add(add(_36, offset), 0x1f), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37)))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                let _38 := mload(add(_36, offset))\n                                                let _39 := array_allocation_size_bytes(_38)\n                                                let memPtr_2 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                finalize_allocation(memPtr_2, _39)\n                                                mstore(memPtr_2, _38)\n                                                if gt(add(add(add(_36, offset), _38), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                copy_memory_to_memory_with_cleanup(add(add(_36, offset), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr_2, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _38)\n                                                let value_1 := mload(add(_36, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                                /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                                expr_component_mpos := memPtr_2\n                                                expr_component := value_1\n                                            }\n                                            /// @src 0:20408:20925  \"try...\"\n                                            switch iszero(trySuccessCondition_1)\n                                            case 0 {\n                                                /// @src 0:20708:20726  \"context = _context\"\n                                                var_context_mpos := expr_component_mpos\n                                                /// @src 0:20744:20776  \"validationData = _validationData\"\n                                                var_validationData_2 := expr_component\n                                            }\n                                            default /// @src 0:20408:20925  \"try...\"\n                                            {\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$len_1 := returndatasize()\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _40 := 0x0800\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _40)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                {\n                                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _40\n                                                }\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$ptr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(usr$ptr_1, usr$len_1)\n                                                returndatacopy(add(usr$ptr_1, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                let _41 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                mstore(_41, /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ shl(224, 0x65c8fd4d))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_41, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA33 reverted\")\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                revert(_41, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41))\n                                            }\n                                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                            if /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr_9, /** @src 0:20951:20960  \"gasleft()\" */ gas()), /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ _34)\n                                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                            {\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                let _42 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                mstore(_42, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ add(_42, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 39)\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA36 over paymasterVerificationG\")\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"asLimit\")\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                revert(_42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                            }\n                                            /// @src 0:25522:25710  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                                            var_paymasterValidationData := var_validationData_2\n                                            var_context_1745_mpos := var_context_mpos\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:25754:25771  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ product)\n                                        mstore(/** @src 0:25803:25826  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_context_1745_mpos)\n                                        mstore(/** @src 0:25874:25892  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25904:25913  \"gasleft()\" */ gas()), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160))))\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_encode_struct_UserOpInfo(value, pos)\n                                    {\n                                        let _1 := mload(value)\n                                        let _2 := sub(shl(160, 1), 1)\n                                        mstore(pos, and(mload(_1), _2))\n                                        mstore(add(pos, 0x20), mload(add(_1, 0x20)))\n                                        mstore(add(pos, 0x40), mload(add(_1, 0x40)))\n                                        mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                                        mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n                                        mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n                                        mstore(add(pos, 0xc0), mload(add(_1, 0xc0)))\n                                        mstore(add(pos, 0xe0), and(mload(add(_1, 0xe0)), _2))\n                                        let _3 := 0x0100\n                                        mstore(add(pos, _3), mload(add(_1, _3)))\n                                        let _4 := 0x0120\n                                        mstore(add(pos, _4), mload(add(_1, _4)))\n                                        mstore(add(pos, 0x0140), mload(add(value, 0x20)))\n                                        mstore(add(pos, 0x0160), mload(add(value, 0x40)))\n                                        mstore(add(pos, 0x0180), mload(add(value, 0x60)))\n                                        mstore(add(pos, 0x01a0), mload(add(value, 0x80)))\n                                    }\n                                    /// @ast-id 328 @src 0:3032:6109  \"function _executeUserOp(...\"\n                                    function fun_executeUserOp(var_opIndex, var_userOp_offset, var_opInfo_155_mpos) -> var_collected\n                                    {\n                                        /// @src 0:3242:3251  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := mload(/** @src 0:3309:3329  \"opInfo.contextOffset\" */ add(var_opInfo_155_mpos, 96))\n                                        /// @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let _2 := 0x40\n                                        let var_saveFreePtr := mload(_2)\n                                        /// @src 0:3531:3546  \"userOp.callData\"\n                                        let expr_offset, expr_182_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                        /// @src 0:3560:3582  \"bytes memory innerCall\"\n                                        let var_innerCall_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                        let var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                        var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                        /// @src 0:3626:3806  \"assembly {...\"\n                                        if gt(expr_182_length, 3)\n                                        {\n                                            var_methodSig := calldataload(expr_offset)\n                                        }\n                                        /// @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\"\n                                        let _3 := shl(224, 0x8dd7712f)\n                                        /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                        switch /** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ var_methodSig, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0xffffffff)), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                        case /** @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\" */ 0 {\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            mstore(add(var_saveFreePtr, 0x20), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                            mstore(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ add(var_saveFreePtr, 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                            let tail := abi_encode_bytes_calldata(expr_offset, expr_182_length, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                            mstore(add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail, /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            let _4 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail), /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr)\n                                            mstore(var_saveFreePtr, add(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)))\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            finalize_allocation(var_saveFreePtr, _4)\n                                            /// @src 0:4146:4221  \"innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            var_innerCall_mpos := var_saveFreePtr\n                                        }\n                                        default /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                        {\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _5 := mload(/** @src 0:3978:3995  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, 32))\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            let expr_206_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            mstore(add(expr_206_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ add(expr_206_mpos, 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let tail_1 := abi_encode_struct_PackedUserOperation_calldata(var_userOp_offset, add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                            mstore(add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), _5)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            let _6 := sub(tail_1, expr_206_mpos)\n                                            let _7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            mstore(expr_206_mpos, add(_6, _7))\n                                            finalize_allocation(expr_206_mpos, _6)\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            let expr_217_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            mstore(add(expr_217_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                            mstore(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ add(expr_217_mpos, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                            let tail_2 := abi_encode_bytes(expr_206_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                            mstore(add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail_2, /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            let _8 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail_2), /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos)\n                                            mstore(expr_217_mpos, add(_8, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ _7))\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            finalize_allocation(expr_217_mpos, _8)\n                                            /// @src 0:4015:4095  \"innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            var_innerCall_mpos := expr_217_mpos\n                                        }\n                                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let _9 := 32\n                                        let var_success := call(gas(), address(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_innerCall_mpos, _9), mload(var_innerCall_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                        var_collected := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ var_saveFreePtr)\n                                        /// @src 0:4488:6103  \"if (!success) {...\"\n                                        if /** @src 0:4492:4500  \"!success\" */ iszero(var_success)\n                                        /// @src 0:4488:6103  \"if (!success) {...\"\n                                        {\n                                            /// @src 0:4516:4539  \"bytes32 innerRevertCode\"\n                                            let var_innerRevertCode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if eq(/** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9, /** @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                                            {\n                                                returndatacopy(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode, var_innerRevertCode, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                                /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                                var_innerRevertCode := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode)\n                                            }\n                                            /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                            switch /** @src 0:4797:4832  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(var_innerRevertCode, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                            case /** @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\" */ 0 {\n                                                /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                                switch /** @src 0:5093:5136  \"innerRevertCode == INNER_REVERT_LOW_PREFUND\" */ eq(var_innerRevertCode, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                case /** @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\" */ 0 {\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _10 := mload(/** @src 0:5612:5629  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 0:5651:5665  \"opInfo.mUserOp\"\n                                                    let _565_mpos := mload(var_opInfo_155_mpos)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _11 := sub(shl(160, 1), 1)\n                                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:5651:5672  \"opInfo.mUserOp.sender\" */ _565_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    let _12 := mload(/** @src 0:5694:5714  \"opInfo.mUserOp.nonce\" */ add(_565_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let usr$len := returndatasize()\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _13 := 0x0800\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    {\n                                                        usr$len := /** @src 0:1543:1547  \"2048\" */ _13\n                                                    }\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let usr$ptr := mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(usr$ptr, usr$len)\n                                                    returndatacopy(add(usr$ptr, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                                    let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(_14, _12)\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    mstore(add(_14, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                                    log3(_14, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_14, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)), /** @src 0:5572:5795  \"PostOpRevertReason(...\" */ _14), 0xf62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792, _10, cleaned)\n                                                    /// @src 0:5834:5852  \"preGas - gasleft()\"\n                                                    let expr_1 := checked_sub_uint256(expr, /** @src 0:5843:5852  \"gasleft()\" */ gas())\n                                                    /// @src 0:5855:5870  \"opInfo.preOpGas\"\n                                                    let _15 := add(var_opInfo_155_mpos, 128)\n                                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                                    let var_actualGas := /** @src 0:5834:5870  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5855:5870  \"opInfo.preOpGas\" */ _15))\n                                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                                    let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    /// @src 0:26799:26808  \"gasleft()\"\n                                                    let expr_2 := gas()\n                                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                                    let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                                    let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                                    /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                                    let _mpos := mload(var_opInfo_155_mpos)\n                                                    /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                                    let expr_3 := fun_getUserOpGasPrice(_mpos)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                    switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                                    case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                        /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                                        var_refundAddress := cleaned_1\n                                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                        if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _1)))\n                                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            var_refundAddress_1 := var_actualGasCost\n                                                        }\n                                                    }\n                                                    default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                    {\n                                                        /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                                        var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    }\n                                                    /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _16 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let sum := add(_16, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, 160)))\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let diff := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:28163:28178  \"opInfo.preOpGas\" */ _15))\n                                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                    if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff)\n                                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                    {\n                                                        /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                                        var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:28513:28516  \"100\" */ 0x64))\n                                                    }\n                                                    /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                                    var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _17 := mload(/** @src 0:28682:28696  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                                    /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                    switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_17, var_actualGasCost)\n                                                    case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                        /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                                        pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _17, var_actualGasCost)))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if var_refundAddress_1\n                                                        {\n                                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                        }\n                                                        /// @src 0:29478:29487  \"actualGas\"\n                                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, var_actualGasCost, var_actualGas)\n                                                    }\n                                                    default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                    {\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if var_refundAddress_1\n                                                        {\n                                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                        }\n                                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                        var_actualGasCost := _17\n                                                        /// @src 0:28892:28898  \"opInfo\"\n                                                        fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                        /// @src 0:28974:28983  \"actualGas\"\n                                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, _17, var_actualGas)\n                                                    }\n                                                    /// @src 0:5888:6078  \"collected = _postExecution(...\"\n                                                    var_collected := var_actualGasCost\n                                                }\n                                                default /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                                {\n                                                    /// @src 0:5269:5287  \"preGas - gasleft()\"\n                                                    let expr_4 := checked_sub_uint256(expr, /** @src 0:5278:5287  \"gasleft()\" */ gas())\n                                                    /// @src 0:5269:5305  \"preGas - gasleft() + opInfo.preOpGas\"\n                                                    let expr_5 := checked_add_uint256(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5290:5305  \"opInfo.preOpGas\" */ add(var_opInfo_155_mpos, 128)))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _18 := mload(/** @src 0:5347:5361  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                                    /// @src 0:5397:5403  \"opInfo\"\n                                                    fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                    /// @src 0:5475:5484  \"actualGas\"\n                                                    fun_emitUserOperationEvent(var_opInfo_155_mpos, _18, expr_5)\n                                                    /// @src 0:5503:5528  \"collected = actualGasCost\"\n                                                    var_collected := _18\n                                                }\n                                            }\n                                            default /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                            {\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                mstore(_19, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ add(_19, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                /// @src 0:1474:1487  \"hex\\\"deadaa51\\\"\"\n                                                mstore(add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 68), 15)\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ \"AA95 out of gas\")\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                revert(_19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 132)\n                                            }\n                                        }\n                                    }\n                                    /// @ast-id 146 @src 0:2446:2725  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n                                    function fun_compensate(var_beneficiary, var_amount)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := and(/** @src 0:2539:2564  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        if /** @src 0:2539:2564  \"beneficiary != address(0)\" */ iszero(_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr := mload(64)\n                                            mstore(memPtr, shl(229, 4594637))\n                                            mstore(add(memPtr, 4), 32)\n                                            mstore(add(memPtr, 36), 24)\n                                            mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                                            revert(memPtr, 100)\n                                        }\n                                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                        let expr_138_component := call(gas(), _1, var_amount, /** @src 0:2562:2563  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_138_component)\n                                        {\n                                            let memPtr_1 := mload(64)\n                                            mstore(memPtr_1, shl(229, 4594637))\n                                            mstore(add(memPtr_1, 4), 32)\n                                            mstore(add(memPtr_1, 36), 31)\n                                            mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                                            revert(memPtr_1, 100)\n                                        }\n                                    }\n                                    /// @ast-id 2527 @src 4:1559:1818  \"function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {...\"\n                                    function fun_incrementDeposit(var_account, var_amount) -> var\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                                        mstore(0x20, /** @src 4:1683:1691  \"deposits\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let dataSlot := keccak256(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x40)\n                                        /// @src 4:1730:1751  \"info.deposit + amount\"\n                                        let expr := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 4:1730:1742  \"info.deposit\" */ dataSlot), /** @src 4:1730:1751  \"info.deposit + amount\" */ var_amount)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(dataSlot, expr)\n                                        /// @src 4:1795:1811  \"return newAmount\"\n                                        var := expr\n                                    }\n                                    /// @ast-id 2053 @src 0:29763:30294  \"function getUserOpGasPrice(...\"\n                                    function fun_getUserOpGasPrice(var_mUserOp_mpos) -> var_\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := mload(/** @src 0:29922:29942  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, 256))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := mload(/** @src 0:29987:30015  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, 288))\n                                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                        if /** @src 0:30033:30069  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                        {\n                                            /// @src 0:30168:30187  \"return maxFeePerGas\"\n                                            var_ := _1\n                                            leave\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := add(/** @src 0:30240:30276  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 0:30263:30276  \"block.basefee\" */ basefee())\n                                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                                        let expr := /** @src -1:-1:-1 */ 0\n                                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                                        switch /** @src 1:3338:3343  \"a < b\" */ lt(_1, _3)\n                                        case /** @src 1:3338:3351  \"a < b ? a : b\" */ 0 { expr := _3 }\n                                        default { expr := _1 }\n                                        /// @src 0:30215:30277  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                                        var_ := expr\n                                    }\n                                    /// @ast-id 358 @src 0:6115:6505  \"function emitUserOperationEvent(UserOpInfo memory opInfo, bool success, uint256 actualGasCost, uint256 actualGas) internal virtual {...\"\n                                    function fun_emitUserOperationEvent(var_opInfo_mpos, var_actualGasCost, var_actualGas)\n                                    {\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _1 := mload(/** @src 0:6293:6310  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                        /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                        let _mpos := mload(var_opInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := sub(shl(160, 1), 1)\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                        let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                        let _3 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32))\n                                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                        let _4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_4, _3)\n                                        mstore(add(_4, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32), /** @src -1:-1:-1 */ 0)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(_4, 64), var_actualGasCost)\n                                        mstore(add(_4, 96), var_actualGas)\n                                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                        log4(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _1, cleaned, cleaned_1)\n                                    }\n                                    /// @ast-id 376 @src 0:6511:6739  \"function emitPrefundTooLow(UserOpInfo memory opInfo) internal virtual {...\"\n                                    function fun_emitPrefundTooLow(var_opInfo_mpos)\n                                    {\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _1 := mload(/** @src 0:6636:6653  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                        /// @src 0:6667:6681  \"opInfo.mUserOp\"\n                                        let _665_mpos := mload(var_opInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6667:6688  \"opInfo.mUserOp.sender\" */ _665_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _2 := mload(/** @src 0:6702:6722  \"opInfo.mUserOp.nonce\" */ add(_665_mpos, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32))\n                                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                        let _3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_3, _2)\n                                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                        log3(_3, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32, /** @src 0:6596:6732  \"UserOperationPrefundTooLow(...\" */ 0x67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e, _1, cleaned)\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n                                    {\n                                        mstore(headStart, 96)\n                                        tail := abi_encode_struct_PackedUserOperation_calldata(value0, add(headStart, 96))\n                                        mstore(add(headStart, 32), value1)\n                                        mstore(add(headStart, 64), value2)\n                                    }\n                                    /// @ast-id 1622 @src 0:22951:23437  \"function _getValidationData(...\"\n                                    function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n                                    {\n                                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                        if /** @src 0:23095:23114  \"validationData == 0\" */ iszero(var_validationData)\n                                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                        {\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            var_aggregator := /** @src 0:23113:23114  \"0\" */ 0x00\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            var_outOfTimeRange := /** @src 0:23113:23114  \"0\" */ 0x00\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            leave\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPtr := mload(64)\n                                        finalize_allocation_26350(memPtr)\n                                        mstore(memPtr, /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(memPtr, 32), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(memPtr, 64), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := and(/** @src 1:1507:1530  \"uint160(validationData)\" */ var_validationData, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _2 := 0xffffffffffff\n                                        /// @src 1:1537:1586  \"uint48 validUntil = uint48(validationData >> 160)\"\n                                        let var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(/** @src 1:1582:1585  \"160\" */ 0xa0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData), _2)\n                                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                        if /** @src 1:1596:1611  \"validUntil == 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validUntil)\n                                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                        {\n                                            /// @src 1:1623:1652  \"validUntil = type(uint48).max\"\n                                            var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2\n                                        }\n                                        let result := shr(/** @src 1:1710:1718  \"48 + 160\" */ 0xd0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData)\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation_26350(memPtr_1)\n                                        mstore(memPtr_1, _1)\n                                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32), result)\n                                        let _3 := and(var_validUntil, _2)\n                                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64), _3)\n                                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        let expr := /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ gt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ _3)\n                                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        if iszero(expr)\n                                        {\n                                            expr := /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ lt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ result)\n                                        }\n                                        /// @src 0:23305:23392  \"outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        var_outOfTimeRange := expr\n                                        /// @src 0:23402:23430  \"aggregator = data.aggregator\"\n                                        var_aggregator := _1\n                                    }\n                                }\n                                data \".metadata\" hex\"a164736f6c6343000818000a\"\n                            }\n                            /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                            object \"SenderCreator_2414\" {\n                                code {\n                                    {\n                                        /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                        let _1 := memoryguard(0x80)\n                                        mstore(64, _1)\n                                        if callvalue() { revert(0, 0) }\n                                        let _2 := datasize(\"SenderCreator_2414_deployed\")\n                                        codecopy(_1, dataoffset(\"SenderCreator_2414_deployed\"), _2)\n                                        return(_1, _2)\n                                    }\n                                }\n                                /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                                object \"SenderCreator_2414_deployed\" {\n                                    code {\n                                        {\n                                            /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                            let _1 := memoryguard(0x80)\n                                            if iszero(lt(calldatasize(), 4))\n                                            {\n                                                let _2 := 0\n                                                if eq(0x570e1a36, shr(224, calldataload(_2)))\n                                                {\n                                                    if callvalue() { revert(_2, _2) }\n                                                    if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                                    let offset := calldataload(4)\n                                                    let _3 := 0xffffffffffffffff\n                                                    if gt(offset, _3) { revert(_2, _2) }\n                                                    if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                                                    let length := calldataload(add(4, offset))\n                                                    if gt(length, _3) { revert(_2, _2) }\n                                                    if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                                                    let var_sender := _2\n                                                    if gt(/** @src 3:726:728  \"20\" */ 0x14, /** @src 3:205:1231  \"contract SenderCreator {...\" */ length) { revert(_2, _2) }\n                                                    let lengthOut := add(length, not(19))\n                                                    if gt(lengthOut, _3)\n                                                    {\n                                                        mstore(_2, shl(224, 0x4e487b71))\n                                                        mstore(4, 0x41)\n                                                        revert(_2, 36)\n                                                    }\n                                                    let _4 := not(31)\n                                                    let newFreePtr := add(_1, and(add(and(add(length, 11), _4), 63), _4))\n                                                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                                    {\n                                                        mstore(_2, shl(224, 0x4e487b71))\n                                                        mstore(4, 0x41)\n                                                        revert(_2, 36)\n                                                    }\n                                                    mstore(64, newFreePtr)\n                                                    mstore(_1, lengthOut)\n                                                    let dst := add(_1, 32)\n                                                    calldatacopy(dst, add(offset, 56), lengthOut)\n                                                    mstore(add(add(_1, length), 12), _2)\n                                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let var_success := call(gas(), /** @src 3:205:1231  \"contract SenderCreator {...\" */ shr(96, calldataload(add(offset, 36))), _2, /** @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\" */ dst, mload(_1), /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2, 32)\n                                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    var_sender := mload(/** @src 3:205:1231  \"contract SenderCreator {...\" */ _2)\n                                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                                    if /** @src 3:1169:1177  \"!success\" */ iszero(var_success)\n                                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                                    {\n                                                        /// @src 3:1193:1212  \"sender = address(0)\"\n                                                        var_sender := /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2\n                                                    }\n                                                    let memPos := mload(64)\n                                                    mstore(memPos, and(var_sender, sub(shl(160, 1), 1)))\n                                                    return(memPos, 32)\n                                                }\n                                            }\n                                            revert(0, 0)\n                                        }\n                                    }\n                                    data \".metadata\" hex\"a164736f6c6343000818000a\"\n                                }\n                            }\n                        }\n                        /// @use-src 64:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 67:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 68:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                        object \"ERC20Mock_47815\" {\n                            code {\n                                {\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _1 := memoryguard(0x80)\n                                    if callvalue() { revert(0, 0) }\n                                    let _2 := 64\n                                    let newFreePtr := add(_1, _2)\n                                    let _3 := sub(shl(64, 1), 1)\n                                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    mstore(_2, newFreePtr)\n                                    mstore(_1, 9)\n                                    let _4 := 32\n                                    mstore(add(_1, _4), \"ERC20Mock\")\n                                    let memPtr := mload(_2)\n                                    let newFreePtr_1 := add(memPtr, _2)\n                                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    mstore(_2, newFreePtr_1)\n                                    let _5 := 4\n                                    mstore(memPtr, _5)\n                                    mstore(add(memPtr, _4), \"E20M\")\n                                    let newLen := mload(_1)\n                                    if gt(newLen, _3)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    /// @src 66:1962:1975  \"_name = name_\"\n                                    let _6 := 0x03\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _7 := sload(/** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let length := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _8 := 1\n                                    length := shr(_8, _7)\n                                    let outOfPlaceEncoding := and(_7, _8)\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    if eq(outOfPlaceEncoding, lt(length, _4))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x22)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    let _9 := 31\n                                    if gt(length, _9)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let deleteStart := add(data, shr(5, add(newLen, _9)))\n                                        if lt(newLen, _4) { deleteStart := data }\n                                        let _10 := add(data, shr(5, add(length, _9)))\n                                        let start := deleteStart\n                                        for { } lt(start, _10) { start := add(start, _8) }\n                                        {\n                                            sstore(start, /** @src -1:-1:-1 */ 0)\n                                        }\n                                    }\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let srcOffset := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    srcOffset := _4\n                                    switch gt(newLen, _9)\n                                    case 1 {\n                                        let loopEnd := and(newLen, not(31))\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                                        {\n                                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                                            dstPtr := add(dstPtr, _8)\n                                            srcOffset := add(srcOffset, _4)\n                                        }\n                                        if lt(loopEnd, newLen)\n                                        {\n                                            let lastValue := mload(add(_1, srcOffset))\n                                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ add(shl(_8, newLen), _8))\n                                    }\n                                    default {\n                                        let value := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        if newLen\n                                        {\n                                            value := mload(add(_1, srcOffset))\n                                        }\n                                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), not(0)))), shl(_8, newLen)))\n                                    }\n                                    let newLen_1 := mload(memPtr)\n                                    if gt(newLen_1, _3)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    let _11 := sload(_5)\n                                    let length_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    length_1 := shr(_8, _11)\n                                    let outOfPlaceEncoding_1 := and(_11, _8)\n                                    if iszero(outOfPlaceEncoding_1)\n                                    {\n                                        length_1 := and(length_1, 0x7f)\n                                    }\n                                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x22)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    if gt(length_1, _9)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _9)))\n                                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                                        let _12 := add(data_1, shr(5, add(length_1, _9)))\n                                        let start_1 := deleteStart_1\n                                        for { } lt(start_1, _12) { start_1 := add(start_1, _8) }\n                                        {\n                                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                                        }\n                                    }\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    srcOffset_1 := _4\n                                    switch gt(newLen_1, _9)\n                                    case 1 {\n                                        let loopEnd_1 := and(newLen_1, not(31))\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let i_1 := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                                        {\n                                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                                            dstPtr_1 := add(dstPtr_1, _8)\n                                            srcOffset_1 := add(srcOffset_1, _4)\n                                        }\n                                        if lt(loopEnd_1, newLen_1)\n                                        {\n                                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                                        }\n                                        sstore(_5, add(shl(_8, newLen_1), _8))\n                                    }\n                                    default {\n                                        let value_1 := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        if newLen_1\n                                        {\n                                            value_1 := mload(add(memPtr, srcOffset_1))\n                                        }\n                                        sstore(_5, or(and(value_1, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), not(0)))), shl(_8, newLen_1)))\n                                    }\n                                    let _13 := mload(_2)\n                                    let _14 := datasize(\"ERC20Mock_47815_deployed\")\n                                    codecopy(_13, dataoffset(\"ERC20Mock_47815_deployed\"), _14)\n                                    return(_13, _14)\n                                }\n                            }\n                            /// @use-src 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                            object \"ERC20Mock_47815_deployed\" {\n                                code {\n                                    {\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _1 := memoryguard(0x80)\n                                        let _2 := 64\n                                        mstore(_2, _1)\n                                        let _3 := 4\n                                        if iszero(lt(calldatasize(), _3))\n                                        {\n                                            let _4 := 0\n                                            switch shr(224, calldataload(_4))\n                                            case 0x06fdde03 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let ret := _4\n                                                let slotValue := sload(/** @src 66:2151:2156  \"_name\" */ 0x03)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let length := _4\n                                                let _5 := 1\n                                                length := shr(1, slotValue)\n                                                let outOfPlaceEncoding := and(slotValue, 1)\n                                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                                let _6 := 32\n                                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x22)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_1, length)\n                                                switch outOfPlaceEncoding\n                                                case 0 {\n                                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                                }\n                                                case 1 {\n                                                    mstore(_4, /** @src 66:2151:2156  \"_name\" */ 0x03)\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                                    let i := _4\n                                                    for { } lt(i, length) { i := add(i, _6) }\n                                                    {\n                                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                                        dataPos := add(dataPos, _5)\n                                                    }\n                                                    ret := add(add(_1, i), _6)\n                                                }\n                                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x41)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_2, newFreePtr)\n                                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                                            }\n                                            case 0x095ea7b3 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0 := abi_decode_address_3706()\n                                                let _7 := calldataload(36)\n                                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                {\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    mstore(_8, shl(224, 0xe602df05))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    revert(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                let _9 := and(/** @src 66:10159:10180  \"spender == address(0)\" */ value0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _9)\n                                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                {\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    let _10 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    mstore(_10, shl(225, 0x4a1406b1))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    revert(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(0x20, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let _11 := keccak256(_4, _2)\n                                                mstore(_4, _9)\n                                                mstore(0x20, _11)\n                                                sstore(keccak256(_4, _2), _7)\n                                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                                let _12 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_12, _7)\n                                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                                log3(_12, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos := mload(_2)\n                                                mstore(memPos, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(memPos, 0x20)\n                                            }\n                                            case 0x18160ddd {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let _13 := sload(/** @src 66:3222:3234  \"_totalSupply\" */ 0x02)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos_1 := mload(_2)\n                                                mstore(memPos_1, _13)\n                                                return(memPos_1, 32)\n                                            }\n                                            case 0x23b872dd {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                                let value0_1 := abi_decode_address_3706()\n                                                let value1 := abi_decode_address()\n                                                let value := calldataload(68)\n                                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                                mstore(_4, _14)\n                                                mstore(32, 1)\n                                                let _15 := keccak256(_4, _2)\n                                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(32, _15)\n                                                let _16 := sload(keccak256(_4, _2))\n                                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                                if /** @src 66:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 66:10848:10865  \"type(uint256).max\" */ not(0)))\n                                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                                {\n                                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                                    if /** @src 66:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                                    {\n                                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                        let _17 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                                    }\n                                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                    if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _14)\n                                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                    {\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        let _18 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        mstore(_18, shl(224, 0xe602df05))\n                                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                        mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        revert(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                    }\n                                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                    if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                    {\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        let _19 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        mstore(_19, shl(225, 0x4a1406b1))\n                                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                        mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        revert(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                    }\n                                                    mstore(_4, _14)\n                                                    mstore(32, 1)\n                                                    let _20 := keccak256(_4, _2)\n                                                    mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(32, _20)\n                                                    sstore(keccak256(_4, _2), sub(/** @src 66:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                                }\n                                                /// @src 66:5249:5254  \"value\"\n                                                fun_transfer(value0_1, value1, value)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos_2 := mload(_2)\n                                                mstore(memPos_2, 1)\n                                                return(memPos_2, 32)\n                                            }\n                                            case 0x313ce567 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let memPos_3 := mload(_2)\n                                                mstore(memPos_3, /** @src 66:3075:3077  \"18\" */ 0x12)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(memPos_3, 32)\n                                            }\n                                            case 0x40c10f19 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_2 := abi_decode_address_3706()\n                                                let value_1 := calldataload(36)\n                                                let _21 := and(/** @src 66:7791:7812  \"account == address(0)\" */ value0_2, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                                if /** @src 66:7791:7812  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _21)\n                                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                                {\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    let _22 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    mstore(_22, shl(224, 0xec442f05))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    revert(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                let _23 := sload(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let sum := add(_23, value_1)\n                                                if gt(_23, sum)\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x11)\n                                                    revert(_4, 36)\n                                                }\n                                                sstore(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sum)\n                                                mstore(_4, _21)\n                                                mstore(0x20, _4)\n                                                let dataSlot := keccak256(_4, _2)\n                                                sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_1))\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                let _24 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_24, value_1)\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                log3(_24, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(_4, _4)\n                                            }\n                                            case 0x70a08231 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                                mstore(_4, and(abi_decode_address_3706(), sub(shl(160, 1), 1)))\n                                                mstore(32, _4)\n                                                let _25 := sload(keccak256(_4, _2))\n                                                let memPos_4 := mload(_2)\n                                                mstore(memPos_4, _25)\n                                                return(memPos_4, 32)\n                                            }\n                                            case 0x95d89b41 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let memPtr := mload(_2)\n                                                let ret_1 := _4\n                                                let slotValue_1 := sload(_3)\n                                                let length_1 := _4\n                                                let _26 := 1\n                                                length_1 := shr(1, slotValue_1)\n                                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                                if iszero(outOfPlaceEncoding_1)\n                                                {\n                                                    length_1 := and(length_1, 0x7f)\n                                                }\n                                                let _27 := 32\n                                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x22)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(memPtr, length_1)\n                                                switch outOfPlaceEncoding_1\n                                                case 0 {\n                                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                                }\n                                                case 1 {\n                                                    mstore(_4, _3)\n                                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                                    let i_1 := _4\n                                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                                    {\n                                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                                        dataPos_1 := add(dataPos_1, _26)\n                                                    }\n                                                    ret_1 := add(add(memPtr, i_1), _27)\n                                                }\n                                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x41)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_2, newFreePtr_1)\n                                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                                            }\n                                            case 0x9dc29fac {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_3 := abi_decode_address_3706()\n                                                let value_2 := calldataload(36)\n                                                let _28 := and(/** @src 66:8317:8338  \"account == address(0)\" */ value0_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                                if /** @src 66:8317:8338  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _28)\n                                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                                {\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    let _29 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    mstore(_29, shl(225, 0x4b637e8f))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    revert(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                mstore(_4, _28)\n                                                mstore(0x20, _4)\n                                                let _30 := sload(keccak256(_4, _2))\n                                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                                if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_30, value_2)\n                                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                                {\n                                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                                    let _31 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                                    mstore(_31, shl(226, 0x391434e3))\n                                                    revert(_31, sub(abi_encode_address_uint256_uint256(add(_31, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ value0_3, _30, value_2), _31))\n                                                }\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(_4, _28)\n                                                mstore(0x20, _4)\n                                                sstore(keccak256(_4, _2), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _30, value_2))\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                sstore(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(sload(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_2))\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                let _32 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_32, value_2)\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                log3(_32, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _28, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                                return(_4, _4)\n                                            }\n                                            case 0xa9059cbb {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_4 := abi_decode_address_3706()\n                                                /// @src 66:3754:3759  \"value\"\n                                                fun_transfer(/** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:3754:3759  \"value\" */ value0_4, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ calldataload(36))\n                                                let memPos_5 := mload(_2)\n                                                mstore(memPos_5, 1)\n                                                return(memPos_5, 32)\n                                            }\n                                            case 0xdd62ed3e {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_5 := abi_decode_address_3706()\n                                                let value1_1 := abi_decode_address()\n                                                let _33 := sub(shl(160, 1), 1)\n                                                mstore(_4, and(value0_5, _33))\n                                                mstore(32, /** @src 66:3952:3963  \"_allowances\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let _34 := keccak256(_4, _2)\n                                                mstore(_4, and(value1_1, _33))\n                                                mstore(32, _34)\n                                                let _35 := sload(keccak256(_4, _2))\n                                                let memPos_6 := mload(_2)\n                                                mstore(memPos_6, _35)\n                                                return(memPos_6, 32)\n                                            }\n                                        }\n                                        revert(0, 0)\n                                    }\n                                    function abi_encode_string(headStart, value0) -> tail\n                                    {\n                                        let _1 := 32\n                                        mstore(headStart, 32)\n                                        let length := mload(value0)\n                                        mstore(add(headStart, 32), length)\n                                        let i := 0\n                                        for { } lt(i, length) { i := add(i, _1) }\n                                        {\n                                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                                        }\n                                        mstore(add(add(headStart, length), 64), 0)\n                                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                                    }\n                                    function abi_decode_address_3706() -> value\n                                    {\n                                        value := calldataload(4)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_address() -> value\n                                    {\n                                        value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                                    {\n                                        tail := add(headStart, 96)\n                                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(add(headStart, 32), value1)\n                                        mstore(add(headStart, 64), value2)\n                                    }\n                                    /// @ast-id 48060 @src 66:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                                    function fun_transfer(var_from, var_to, var_value)\n                                    {\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _1 := sub(shl(160, 1), 1)\n                                        let _2 := and(/** @src 66:5739:5757  \"from == address(0)\" */ var_from, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                        if /** @src 66:5739:5757  \"from == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                        {\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            let _3 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            mstore(_3, /** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            revert(_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        let _4 := and(/** @src 66:5834:5850  \"to == address(0)\" */ var_to, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                        if /** @src 66:5834:5850  \"to == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                        {\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            let _5 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_5, /** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_5, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        /// @src 66:6356:6896  \"if (from == address(0)) {...\"\n                                        let _6 := 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _7 := sload(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40))\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        {\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            mstore(_8, shl(226, 0x391434e3))\n                                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                                        }\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        sstore(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let dataSlot := keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40)\n                                        sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ var_value))\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        let _9 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                        mstore(_9, var_value)\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        log3(_9, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                                    }\n                                }\n                                data \".metadata\" hex\"a164736f6c6343000818000a\"\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                /// @use-src 6:\"lib/account-abstraction/contracts/interfaces/IAccount.sol\", 63:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 84:\"src/ethereum/MinimalAccount.sol\"\n                object \"MinimalAccount_51868\" {\n                    code {\n                        {\n                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            let _1 := memoryguard(0xa0)\n                            if callvalue() { revert(0, 0) }\n                            let programSize := datasize(\"MinimalAccount_51868\")\n                            let argSize := sub(codesize(), programSize)\n                            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                            codecopy(_1, programSize, argSize)\n                            if slt(sub(add(_1, argSize), _1), 32)\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            let value := mload(_1)\n                            let _2 := sub(shl(160, 1), 1)\n                            let _3 := and(value, _2)\n                            if iszero(eq(value, _3))\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 63:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            if /** @src 63:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 84:2157:2167  \"msg.sender\" */ caller())\n                            /// @src 63:1269:1364  \"if (initialOwner == address(0)) {...\"\n                            {\n                                /// @src 63:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                let _4 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                /// @src 63:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                mstore(_4, shl(224, 0x1e4fbdf7))\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                mstore(/** @src 63:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_4, 4), /** @src -1:-1:-1 */ 0)\n                                /// @src 63:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                                revert(_4, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                            }\n                            let _5 := sload(/** @src -1:-1:-1 */ 0)\n                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            sstore(/** @src -1:-1:-1 */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ or(and(_5, not(sub(shl(160, 1), 1))), /** @src 84:2157:2167  \"msg.sender\" */ caller()))\n                            /// @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            let _6 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                            /// @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                            log3(/** @src -1:-1:-1 */ 0, 0, /** @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_5, _2), /** @src 84:2157:2167  \"msg.sender\" */ caller())\n                            /// @src 84:2179:2217  \"i_entryPoint = IEntryPoint(entryPoint)\"\n                            mstore(128, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                            let _7 := datasize(\"MinimalAccount_51868_deployed\")\n                            codecopy(_6, dataoffset(\"MinimalAccount_51868_deployed\"), _7)\n                            setimmutable(_6, \"51672\", mload(/** @src 84:2179:2217  \"i_entryPoint = IEntryPoint(entryPoint)\" */ 128))\n                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                            return(_6, _7)\n                        }\n                    }\n                    /// @use-src 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 63:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 75:\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\", 76:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 84:\"src/ethereum/MinimalAccount.sol\"\n                    object \"MinimalAccount_51868_deployed\" {\n                        code {\n                            {\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let _1 := memoryguard(0x80)\n                                let _2 := 64\n                                mstore(_2, _1)\n                                let _3 := 4\n                                if iszero(lt(calldatasize(), _3))\n                                {\n                                    let _4 := 0\n                                    switch shr(224, calldataload(_4))\n                                    case 0x19822f7c {\n                                        if callvalue() { revert(_4, _4) }\n                                        let _5 := not(3)\n                                        if slt(add(calldatasize(), _5), 96) { revert(_4, _4) }\n                                        let offset := calldataload(_3)\n                                        if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                                        if slt(add(sub(calldatasize(), offset), _5), 288) { revert(_4, _4) }\n                                        let value := calldataload(68)\n                                        /// @src 84:1594:1702  \"if (msg.sender != address(i_entryPoint)) {...\"\n                                        if /** @src 84:1598:1633  \"msg.sender != address(i_entryPoint)\" */ iszero(eq(/** @src 84:1598:1608  \"msg.sender\" */ caller(), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 84:1620:1632  \"i_entryPoint\" */ loadimmutable(\"51672\"), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))))\n                                        /// @src 84:1594:1702  \"if (msg.sender != address(i_entryPoint)) {...\"\n                                        {\n                                            /// @src 84:1656:1691  \"MinimalAccount__NotFromEntryPoint()\"\n                                            mstore(_1, shl(226, 0x0a62aa0b))\n                                            revert(_1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                                        }\n                                        /// @src 84:3090:3145  \"validationData = _validateSignature(userOp, userOpHash)\"\n                                        let var_validationData := /** @src 84:3107:3145  \"_validateSignature(userOp, userOpHash)\" */ fun_validateSignature(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ add(_3, offset), calldataload(36))\n                                        /// @src 84:4392:4568  \"if (missingAccountFunds != 0) {...\"\n                                        if /** @src 84:4396:4420  \"missingAccountFunds != 0\" */ iszero(iszero(value))\n                                        /// @src 84:4392:4568  \"if (missingAccountFunds != 0) {...\"\n                                        {\n                                            /// @src 84:4454:4534  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\"\n                                            pop(call(/** @src 84:4512:4529  \"type(uint256).max\" */ not(0), /** @src 84:1598:1608  \"msg.sender\" */ caller(), /** @src 84:4454:4534  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\" */ value, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, _4, _4))\n                                            /// @src 84:4454:4534  \"payable(msg.sender).call{value: missingAccountFunds, gas: type(uint256).max}(\\\"\\\")\"\n                                            pop(extract_returndata())\n                                        }\n                                        /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                        let memPos := mload(_2)\n                                        mstore(memPos, var_validationData)\n                                        return(memPos, 32)\n                                    }\n                                    case 0x44ab613f {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let memPos_1 := mload(_2)\n                                        mstore(memPos_1, and(/** @src 84:4840:4852  \"i_entryPoint\" */ loadimmutable(\"51672\"), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                        return(memPos_1, 32)\n                                    }\n                                    case 0x715018a6 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        /// @src 63:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                        let _6 := sload(_4)\n                                        sstore(_4, and(_6, shl(160, 0xffffffffffffffffffffffff)))\n                                        /// @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, /** @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_6, sub(shl(160, 1), 1)), _4)\n                                        return(_4, _4)\n                                    }\n                                    case 0x8da5cb5b {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                        let cleaned := and(sload(_4), sub(shl(160, 1), 1))\n                                        let memPos_2 := mload(_2)\n                                        mstore(memPos_2, cleaned)\n                                        return(memPos_2, 32)\n                                    }\n                                    case 0xb61d27f6 {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                        let value0 := abi_decode_address()\n                                        let _7 := 68\n                                        let offset_1 := calldataload(68)\n                                        let _8 := 0xffffffffffffffff\n                                        if gt(offset_1, _8) { revert(_4, _4) }\n                                        if iszero(slt(add(offset_1, 35), calldatasize())) { revert(_4, _4) }\n                                        let length := calldataload(add(_3, offset_1))\n                                        if gt(length, _8) { revert(_4, _4) }\n                                        if gt(add(add(offset_1, length), 36), calldatasize()) { revert(_4, _4) }\n                                        let _9 := sub(shl(160, 1), 1)\n                                        /// @src 84:1779:1839  \"msg.sender != address(i_entryPoint) && msg.sender != owner()\"\n                                        let expr := /** @src 84:1779:1814  \"msg.sender != address(i_entryPoint)\" */ iszero(eq(/** @src 84:1779:1789  \"msg.sender\" */ caller(), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 84:1801:1813  \"i_entryPoint\" */ loadimmutable(\"51672\"), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _9)))\n                                        /// @src 84:1779:1839  \"msg.sender != address(i_entryPoint) && msg.sender != owner()\"\n                                        if expr\n                                        {\n                                            expr := /** @src 84:1818:1839  \"msg.sender != owner()\" */ iszero(eq(/** @src 84:1779:1789  \"msg.sender\" */ caller(), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(sload(_4), _9)))\n                                        }\n                                        /// @src 84:1775:1915  \"if (msg.sender != address(i_entryPoint) && msg.sender != owner()) {...\"\n                                        if expr\n                                        {\n                                            /// @src 84:1862:1904  \"MinimalAccount__NotFromEntryPointOrOwner()\"\n                                            let _10 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                            /// @src 84:1862:1904  \"MinimalAccount__NotFromEntryPointOrOwner()\"\n                                            mstore(_10, shl(227, 0x0a1c585d))\n                                            revert(_10, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3)\n                                        }\n                                        /// @src 84:2610:2647  \"dest.call{value: value}(functionData)\"\n                                        let _11 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                        calldatacopy(_11, add(offset_1, 36), length)\n                                        let _12 := add(_11, length)\n                                        mstore(_12, _4)\n                                        /// @src 84:2610:2647  \"dest.call{value: value}(functionData)\"\n                                        let expr_component := call(gas(), value0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ calldataload(36), /** @src 84:2610:2647  \"dest.call{value: value}(functionData)\" */ _11, sub(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _12, /** @src 84:2610:2647  \"dest.call{value: value}(functionData)\" */ _11), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4)\n                                        /// @src 84:2610:2647  \"dest.call{value: value}(functionData)\"\n                                        let expr_component_mpos := extract_returndata()\n                                        /// @src 84:2657:2737  \"if (!success) {...\"\n                                        if /** @src 84:2661:2669  \"!success\" */ iszero(expr_component)\n                                        /// @src 84:2657:2737  \"if (!success) {...\"\n                                        {\n                                            /// @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\"\n                                            let _13 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                            /// @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\"\n                                            mstore(_13, shl(228, 0x038fe215))\n                                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                            let _14 := 32\n                                            mstore(/** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ add(_13, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3), 32)\n                                            let length_1 := mload(expr_component_mpos)\n                                            mstore(add(/** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36), length_1)\n                                            let i := _4\n                                            for { } lt(i, length_1) { i := add(i, _14) }\n                                            {\n                                                mstore(add(add(/** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ i), _7), mload(add(add(expr_component_mpos, i), _14)))\n                                            }\n                                            mstore(add(add(/** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ length_1), 68), _4)\n                                            /// @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\"\n                                            revert(_13, add(sub(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ add(/** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ _13, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(add(length_1, 0x1f), not(31))), /** @src 84:2692:2726  \"MinimalAccount__CallFailed(result)\" */ _13), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 68))\n                                        }\n                                        return(_4, _4)\n                                    }\n                                    case 0xf2fde38b {\n                                        if callvalue() { revert(_4, _4) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                        let value0_1 := abi_decode_address()\n                                        /// @src 63:1500:1562  \"modifier onlyOwner() {...\"\n                                        fun_checkOwner()\n                                        /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                        let _15 := sub(shl(160, 1), 1)\n                                        let _16 := and(/** @src 63:2627:2649  \"newOwner == address(0)\" */ value0_1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _15)\n                                        /// @src 63:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        if /** @src 63:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _16)\n                                        /// @src 63:2623:2714  \"if (newOwner == address(0)) {...\"\n                                        {\n                                            /// @src 63:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            let _17 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(_2)\n                                            /// @src 63:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            mstore(_17, shl(224, 0x1e4fbdf7))\n                                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                            mstore(/** @src 63:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_17, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _3), _4)\n                                            /// @src 63:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                            revert(_17, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                        }\n                                        let _18 := sload(_4)\n                                        sstore(_4, or(and(_18, shl(160, 0xffffffffffffffffffffffff)), _16))\n                                        /// @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                        log3(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _4, _4, /** @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(_18, _15), /** @src 63:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _16)\n                                        /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                        return(_4, _4)\n                                    }\n                                }\n                                if iszero(calldatasize()) { stop() }\n                                revert(0, 0)\n                            }\n                            function abi_decode_address() -> value\n                            {\n                                value := calldataload(4)\n                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                            }\n                            function allocate_memory(size) -> memPtr\n                            {\n                                memPtr := mload(64)\n                                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function array_allocation_size_bytes(length) -> size\n                            {\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                size := add(and(add(length, 31), not(31)), 0x20)\n                            }\n                            function extract_returndata() -> data\n                            {\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _1 := returndatasize()\n                                    let memPtr := allocate_memory(array_allocation_size_bytes(_1))\n                                    mstore(memPtr, _1)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ returndatasize())\n                                }\n                            }\n                            /// @ast-id 51824 @src 84:3699:4317  \"function _validateSignature(...\"\n                            function fun_validateSignature(var_userOp_offset, var_userOpHash) -> var_validationData\n                            {\n                                /// @src -1:-1:-1\n                                let _1 := 0\n                                /// @src 76:1367:1676  \"assembly {...\"\n                                mstore(/** @src -1:-1:-1 */ _1, /** @src 76:1367:1676  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                                mstore(0x1c, var_userOpHash)\n                                let var_digest := keccak256(/** @src -1:-1:-1 */ _1, /** @src 76:1367:1676  \"assembly {...\" */ 0x3c)\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let rel_offset_of_tail := calldataload(/** @src 84:4115:4131  \"userOp.signature\" */ add(var_userOp_offset, 256))\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), var_userOp_offset), not(30))))\n                                {\n                                    revert(/** @src -1:-1:-1 */ _1, _1)\n                                }\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let addr := add(var_userOp_offset, rel_offset_of_tail)\n                                let length := calldataload(addr)\n                                if gt(length, 0xffffffffffffffff)\n                                {\n                                    revert(/** @src -1:-1:-1 */ _1, _1)\n                                }\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let addr_1 := add(addr, 0x20)\n                                if sgt(addr_1, sub(calldatasize(), length))\n                                {\n                                    revert(/** @src -1:-1:-1 */ _1, _1)\n                                }\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let array := allocate_memory(array_allocation_size_bytes(length))\n                                mstore(array, length)\n                                if gt(add(add(addr, length), 0x20), calldatasize())\n                                {\n                                    revert(/** @src -1:-1:-1 */ _1, _1)\n                                }\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                calldatacopy(add(array, 0x20), addr_1, length)\n                                mstore(add(add(array, length), 0x20), /** @src -1:-1:-1 */ _1)\n                                /// @src 75:3859:3886  \"tryRecover(hash, signature)\"\n                                let expr_component, expr_component_1, expr_component_2 := fun_tryRecover(var_digest, array)\n                                /// @src 75:3915:3923  \"errorArg\"\n                                fun_throwError(expr_component_1, expr_component_2)\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let _2 := sub(shl(160, 1), 1)\n                                /// @src 84:4196:4272  \"if (signer != owner()) {...\"\n                                if /** @src 84:4200:4217  \"signer != owner()\" */ iszero(eq(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 84:4200:4217  \"signer != owner()\" */ expr_component, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _2), and(sload(/** @src -1:-1:-1 */ _1), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ _2)))\n                                /// @src 84:4196:4272  \"if (signer != owner()) {...\"\n                                {\n                                    /// @src 84:4233:4261  \"return SIG_VALIDATION_FAILED\"\n                                    var_validationData := /** @src 1:305:306  \"1\" */ 0x01\n                                    /// @src 84:4233:4261  \"return SIG_VALIDATION_FAILED\"\n                                    leave\n                                }\n                                /// @src 84:4281:4310  \"return SIG_VALIDATION_SUCCESS\"\n                                var_validationData := /** @src -1:-1:-1 */ _1\n                            }\n                            /// @ast-id 47574 @src 63:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                            function fun_checkOwner()\n                            {\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                let cleaned := and(sload(/** @src 63:1710:1716  \"_owner\" */ 0x00), /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 63:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                if /** @src 63:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ cleaned, /** @src 72:735:745  \"msg.sender\" */ caller()))\n                                /// @src 63:1851:1952  \"if (owner() != _msgSender()) {...\"\n                                {\n                                    /// @src 63:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    let _1 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                    /// @src 63:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    mstore(_1, shl(224, 0x118cdaa7))\n                                    /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                    mstore(/** @src 63:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 72:735:745  \"msg.sender\" */ caller())\n                                    /// @src 63:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                                    revert(_1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                }\n                            }\n                            /// @ast-id 49441 @src 75:2129:2895  \"function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {...\"\n                            function fun_tryRecover(var_hash, var_signature_mpos) -> var_, var, var_1\n                            {\n                                /// @src 75:2256:2272  \"signature.length\"\n                                let expr := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(/** @src 75:2256:2272  \"signature.length\" */ var_signature_mpos)\n                                /// @src 75:2252:2889  \"if (signature.length == 65) {...\"\n                                switch /** @src 75:2256:2278  \"signature.length == 65\" */ eq(expr, /** @src 75:2276:2278  \"65\" */ 0x41)\n                                case /** @src 75:2252:2889  \"if (signature.length == 65) {...\" */ 0 {\n                                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                                    var_ := /** @src 75:2811:2812  \"0\" */ 0x00\n                                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                                    var := /** @src 75:2815:2850  \"RecoverError.InvalidSignatureLength\" */ 2\n                                    /// @src 75:2795:2878  \"return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length))\"\n                                    var_1 := expr\n                                    leave\n                                }\n                                default /// @src 75:2252:2889  \"if (signature.length == 65) {...\"\n                                {\n                                    /// @src 75:2539:2719  \"assembly {...\"\n                                    let var_r := mload(add(var_signature_mpos, 0x20))\n                                    /// @src 75:2739:2764  \"tryRecover(hash, v, r, s)\"\n                                    let expr_component, expr_component_1, expr_49422_component := fun_tryRecover_49629(var_hash, /** @src 75:2539:2719  \"assembly {...\" */ byte(/** @src -1:-1:-1 */ 0, /** @src 75:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x60))), /** @src 75:2739:2764  \"tryRecover(hash, v, r, s)\" */ var_r, /** @src 75:2539:2719  \"assembly {...\" */ mload(add(var_signature_mpos, 0x40)))\n                                    /// @src 75:2732:2764  \"return tryRecover(hash, v, r, s)\"\n                                    var_ := expr_component\n                                    var := expr_component_1\n                                    var_1 := expr_49422_component\n                                    leave\n                                }\n                            }\n                            /// @ast-id 49714 @src 75:7196:7728  \"function _throwError(RecoverError error, bytes32 errorArg) private pure {...\"\n                            function fun_throwError(var_error, var_errorArg)\n                            {\n                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                if iszero(lt(var_error, 4))\n                                {\n                                    mstore(/** @src 75:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x21)\n                                    revert(/** @src 75:7291:7311  \"RecoverError.NoError\" */ 0, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 0x24)\n                                }\n                                /// @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                                switch /** @src 75:7282:7311  \"error == RecoverError.NoError\" */ iszero(var_error)\n                                case /** @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\" */ 0 {\n                                    /// @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                    switch /** @src 75:7378:7416  \"error == RecoverError.InvalidSignature\" */ eq(var_error, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 1)\n                                    case /** @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\" */ 0 {\n                                        /// @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                        switch /** @src 75:7483:7527  \"error == RecoverError.InvalidSignatureLength\" */ eq(var_error, /** @src 75:7492:7527  \"RecoverError.InvalidSignatureLength\" */ 2)\n                                        case /** @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\" */ 0 {\n                                            /// @src 75:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                            if /** @src 75:7617:7656  \"error == RecoverError.InvalidSignatureS\" */ eq(var_error, /** @src 75:7626:7656  \"RecoverError.InvalidSignatureS\" */ 3)\n                                            /// @src 75:7613:7722  \"if (error == RecoverError.InvalidSignatureS) {...\"\n                                            {\n                                                /// @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                let _1 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                                /// @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                mstore(_1, shl(226, 0x35e2f383))\n                                                /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                                mstore(/** @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\" */ add(_1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4), var_errorArg)\n                                                /// @src 75:7679:7711  \"ECDSAInvalidSignatureS(errorArg)\"\n                                                revert(_1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                            }\n                                        }\n                                        default /// @src 75:7479:7722  \"if (error == RecoverError.InvalidSignatureLength) {...\"\n                                        {\n                                            /// @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            let _2 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                            /// @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            mstore(_2, shl(224, 0xfce698f7))\n                                            /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                            mstore(/** @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\" */ add(_2, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4), var_errorArg)\n                                            /// @src 75:7550:7596  \"ECDSAInvalidSignatureLength(uint256(errorArg))\"\n                                            revert(_2, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 36)\n                                        }\n                                    }\n                                    default /// @src 75:7374:7722  \"if (error == RecoverError.InvalidSignature) {...\"\n                                    {\n                                        /// @src 75:7439:7462  \"ECDSAInvalidSignature()\"\n                                        let _3 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                        /// @src 75:7439:7462  \"ECDSAInvalidSignature()\"\n                                        mstore(_3, shl(224, 0xf645eedf))\n                                        revert(_3, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 4)\n                                    }\n                                }\n                                default /// @src 75:7278:7722  \"if (error == RecoverError.NoError) {...\"\n                                {\n                                    /// @src 75:7327:7334  \"return;\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 49629 @src 75:5140:6670  \"function tryRecover(...\"\n                            function fun_tryRecover_49629(var_hash, var_v, var_r, var_s) -> var, var_1, var_2\n                            {\n                                /// @src 75:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                if /** @src 75:6186:6265  \"uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ gt(var_s, /** @src 75:6199:6265  \"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0\" */ 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0)\n                                /// @src 75:6182:6346  \"if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {...\"\n                                {\n                                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var := /** @src 75:6297:6298  \"0\" */ 0x00\n                                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_1 := /** @src 75:6301:6331  \"RecoverError.InvalidSignatureS\" */ 3\n                                    /// @src 75:6281:6335  \"return (address(0), RecoverError.InvalidSignatureS, s)\"\n                                    var_2 := var_s\n                                    leave\n                                }\n                                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _1 := /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ mload(64)\n                                mstore(_1, var_hash)\n                                mstore(add(_1, 32), and(var_v, 0xff))\n                                mstore(add(_1, 64), var_r)\n                                mstore(add(_1, 96), var_s)\n                                /// @src -1:-1:-1\n                                let _2 := 0\n                                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                mstore(/** @src -1:-1:-1 */ _2, _2)\n                                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                if iszero(staticcall(gas(), 1, _1, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 128, /** @src -1:-1:-1 */ _2, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ 32))\n                                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                {\n                                    /// @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\"\n                                    let pos := mload(64)\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ _2, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 75:6457:6481  \"ecrecover(hash, v, r, s)\"\n                                let _3 := mload(/** @src -1:-1:-1 */ _2)\n                                /// @src 75:6491:6604  \"if (signer == address(0)) {...\"\n                                if /** @src 75:6495:6515  \"signer == address(0)\" */ iszero(/** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ and(/** @src 75:6495:6515  \"signer == address(0)\" */ _3, /** @src 84:765:4862  \"contract MinimalAccount is IAccount, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 75:6491:6604  \"if (signer == address(0)) {...\"\n                                {\n                                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var := /** @src -1:-1:-1 */ _2\n                                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_1 := /** @src 75:6457:6481  \"ecrecover(hash, v, r, s)\" */ 1\n                                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    var_2 := /** @src -1:-1:-1 */ _2\n                                    /// @src 75:6531:6593  \"return (address(0), RecoverError.InvalidSignature, bytes32(0))\"\n                                    leave\n                                }\n                                /// @src 75:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var := _3\n                                var_1 := /** @src -1:-1:-1 */ _2\n                                /// @src 75:6614:6663  \"return (signer, RecoverError.NoError, bytes32(0))\"\n                                var_2 := /** @src -1:-1:-1 */ _2\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 83:\"script/SendPackedUserOp.s.sol\"\n        object \"SendPackedUserOp_51640\" {\n            code {\n                {\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    let _1 := memoryguard(0x80)\n                    mstore(64, _1)\n                    if callvalue() { revert(0, 0) }\n                    sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(16711935)), 65537))\n                    let _2 := datasize(\"SendPackedUserOp_51640_deployed\")\n                    codecopy(_1, dataoffset(\"SendPackedUserOp_51640_deployed\"), _2)\n                    return(_1, _2)\n                }\n            }\n            /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 22:\"lib/forge-std/src/StdJson.sol\", 39:\"lib/foundry-devops/src/DevOpsTools.sol\", 40:\"lib/foundry-devops/src/StringUtils.sol\", 76:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 83:\"script/SendPackedUserOp.s.sol\"\n            object \"SendPackedUserOp_51640_deployed\" {\n                code {\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0xc0406226 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 83:973:991  \"new HelperConfig()\"\n                                let _5 := datasize(\"HelperConfig_51339\")\n                                let _6 := add(_1, _5)\n                                if or(gt(_6, 0xffffffffffffffff), lt(_6, _1))\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                /// @src 83:973:991  \"new HelperConfig()\"\n                                datacopy(_1, dataoffset(\"HelperConfig_51339\"), _5)\n                                let expr_address := create(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:973:991  \"new HelperConfig()\" */ _1, sub(_6, _1))\n                                if iszero(expr_address)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos := mload(_2)\n                                    returndatacopy(pos, _4, returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                let memPtr := mload(_2)\n                                finalize_allocation_13203(memPtr)\n                                mstore(memPtr, 14)\n                                let _7 := 32\n                                mstore(add(memPtr, _7), \"MinimalAccount\")\n                                let memPtr_1 := mload(_2)\n                                finalize_allocation_13203(memPtr_1)\n                                mstore(memPtr_1, 11)\n                                mstore(add(memPtr_1, _7), \"./broadcast\")\n                                /// @src 39:674:755  \"return get_most_recent_deployment(contractName, chainId, RELATIVE_BROADCAST_PATH)\"\n                                let var := /** @src 39:681:755  \"get_most_recent_deployment(contractName, chainId, RELATIVE_BROADCAST_PATH)\" */ fun_get_most_recent_deployment(memPtr, /** @src 83:1250:1263  \"block.chainid\" */ chainid(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_1)\n                                /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                                let expr_mpos := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                                mstore(add(expr_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:1326:1349  \"IERC20.approve.selector\" */ shl(224, 0x095ea7b3))\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ add(expr_mpos, 36), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                mstore(add(/** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ expr_mpos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68), /** @src 83:1368:1372  \"1e18\" */ 0x0de0b6b3a7640000)\n                                /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                                mstore(expr_mpos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68)\n                                /// @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\"\n                                finalize_allocation_13205(expr_mpos)\n                                /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                                let expr_mpos_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                                mstore(add(expr_mpos_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:1449:1480  \"MinimalAccount.execute.selector\" */ shl(225, 0x5b0e93fb))\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ add(expr_mpos_1, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ 36), /** @src 83:1016:1058  \"0x455Ed35297De25Bfbb8533381Df19f12f7cA0A48\" */ 0x455ed35297de25bfbb8533381df19f12f7ca0a48)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                let _8 := 96\n                                mstore(add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100), _8)\n                                /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                                let _9 := sub(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_encode_bytes(expr_mpos, add(/** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 132)), /** @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\" */ expr_mpos_1)\n                                mstore(expr_mpos_1, add(_9, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)))\n                                /// @src 83:1426:1508  \"abi.encodeWithSelector(MinimalAccount.execute.selector, dest, value, functionData)\"\n                                finalize_allocation(expr_mpos_1, _9)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let _10 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let _11 := and(/** @src 83:1611:1633  \"helperConfig.getConfig\" */ expr_address, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _10)\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                let _12 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                let _13 := shl(226, 0x30fe4275)\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                mstore(_12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                let _14 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ _12, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ _12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                if iszero(_14)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_1 := mload(_2)\n                                    returndatacopy(pos_1, _4, returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                let expr_mpos_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4\n                                /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                if _14\n                                {\n                                    let _15 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                                    /// @src 83:1611:1635  \"helperConfig.getConfig()\"\n                                    if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:1611:1635  \"helperConfig.getConfig()\" */ returndatasize()) { _15 := returndatasize() }\n                                    finalize_allocation(_12, _15)\n                                    expr_mpos_2 := abi_decode_struct_NetworkConfig_fromMemory(_12, add(_12, _15))\n                                }\n                                /// @src 83:1566:1659  \"generateSignedUserOperation(executeCalldata, helperConfig.getConfig(), minimalAccountAddress)\"\n                                let expr_mpos_3 := fun_generateSignedUserOperation(expr_mpos_1, expr_mpos_2, var)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let memPtr_2 := mload(_2)\n                                finalize_allocation_13203(memPtr_2)\n                                /// @src 83:1842:1843  \"1\"\n                                let _16 := 0x01\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                mstore(memPtr_2, /** @src 83:1842:1843  \"1\" */ 0x01)\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                let i := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                for { }\n                                lt(i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                {\n                                    i := add(i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                                }\n                                /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                                {\n                                    mstore(add(add(memPtr_2, i), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                                }\n                                /// @src 83:1854:1869  \"ops[0] = userOp\"\n                                mstore(memory_array_index_access_struct_PackedUserOperation_dyn(memPtr_2), expr_mpos_3)\n                                pop(memory_array_index_access_struct_PackedUserOperation_dyn(memPtr_2))\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let _17 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                if iszero(extcodesize(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17))\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                let _18 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                mstore(_18, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x7fb5297f))\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                let _19 := call(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17, _4, /** @src 83:1908:1927  \"vm.startBroadcast()\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1908:1927  \"vm.startBroadcast()\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                if iszero(_19)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_2 := mload(_2)\n                                    returndatacopy(pos_2, _4, returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 83:1908:1927  \"vm.startBroadcast()\"\n                                if _19\n                                {\n                                    finalize_allocation_9077(_18)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    _4 := _4\n                                }\n                                /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                let _20 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                mstore(_20, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                                /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                let _21 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ _20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ _20, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                                /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                if iszero(_21)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_3 := mload(_2)\n                                    returndatacopy(pos_3, _4, returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                let expr_mpos_4 := _4\n                                if _21\n                                {\n                                    let _22 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                                    /// @src 83:1949:1973  \"helperConfig.getConfig()\"\n                                    if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:1949:1973  \"helperConfig.getConfig()\" */ returndatasize()) { _22 := returndatasize() }\n                                    finalize_allocation(_20, _22)\n                                    expr_mpos_4 := abi_decode_struct_NetworkConfig_fromMemory(_20, add(_20, _22))\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:1949:1984  \"helperConfig.getConfig().entryPoint\" */ expr_mpos_4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _10)\n                                /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                let _23 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                mstore(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _13)\n                                /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                let _24 := call(gas(), _11, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ _23, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ _23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8)\n                                /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                if iszero(_24)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_4 := mload(_2)\n                                    returndatacopy(pos_4, _4, returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                                /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                let expr_mpos_5 := _4\n                                if _24\n                                {\n                                    let _25 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8\n                                    /// @src 83:2009:2033  \"helperConfig.getConfig()\"\n                                    if gt(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _8, /** @src 83:2009:2033  \"helperConfig.getConfig()\" */ returndatasize()) { _25 := returndatasize() }\n                                    finalize_allocation(_23, _25)\n                                    expr_mpos_5 := abi_decode_struct_NetworkConfig_fromMemory(_23, add(_23, _25))\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:2009:2041  \"helperConfig.getConfig().account\" */ add(expr_mpos_5, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _2)), _10)\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                if iszero(extcodesize(cleaned))\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                let _26 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                mstore(_26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x765e827f))\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let tail := add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 68)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                mstore(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ add(_26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3), _2)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let pos_5 := tail\n                                let length := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ memPtr_2)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(tail, length)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                pos_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let tail_1 := add(add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(5, length)), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 100)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let srcPtr := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(memPtr_2, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let i_1 := _4\n                                for { }\n                                lt(i_1, length)\n                                {\n                                    i_1 := add(i_1, /** @src 83:1842:1843  \"1\" */ _16)\n                                }\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                {\n                                    mstore(pos_5, add(sub(tail_1, /** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ not(99)))\n                                    tail_1 := abi_encode_struct_PackedUserOperation(mload(srcPtr), tail_1)\n                                    srcPtr := add(srcPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                                    /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                    pos_5 := add(pos_5, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _7)\n                                }\n                                mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ 36), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned_1)\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                let _27 := call(gas(), cleaned, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\" */ _26, sub(tail_1, _26), _26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                if iszero(_27)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_6 := mload(_2)\n                                    returndatacopy(pos_6, _4, returndatasize())\n                                    revert(pos_6, returndatasize())\n                                }\n                                /// @src 83:1937:2043  \"IEntryPoint(helperConfig.getConfig().entryPoint).handleOps(ops, payable(helperConfig.getConfig().account))\"\n                                if _27\n                                {\n                                    finalize_allocation_9077(_26)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    if _4 { revert(_4, _4) }\n                                }\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                if iszero(extcodesize(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17))\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(_4, _4)\n                                }\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                let _28 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                mstore(_28, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x3b756e9b))\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                let _29 := call(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _17, _4, /** @src 83:2053:2071  \"vm.stopBroadcast()\" */ _28, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 83:2053:2071  \"vm.stopBroadcast()\" */ _28, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                if iszero(_29)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_7 := mload(_2)\n                                    returndatacopy(pos_7, _4, returndatasize())\n                                    revert(pos_7, returndatasize())\n                                }\n                                /// @src 83:2053:2071  \"vm.stopBroadcast()\"\n                                if _29\n                                {\n                                    finalize_allocation_9077(_28)\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    if _4 { revert(_4, _4) }\n                                }\n                                return(_4, _4)\n                            }\n                            case 0xdae0f8c7 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                                let offset := calldataload(_3)\n                                if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                let _30 := calldataload(add(_3, offset))\n                                let _31 := array_allocation_size_bytes(_30)\n                                let memPtr_3 := mload(_2)\n                                finalize_allocation(memPtr_3, _31)\n                                mstore(memPtr_3, _30)\n                                if gt(add(add(offset, _30), 36), calldatasize()) { revert(_4, _4) }\n                                calldatacopy(add(memPtr_3, 0x20), add(offset, 36), _30)\n                                mstore(add(add(memPtr_3, _30), 0x20), _4)\n                                if slt(add(calldatasize(), not(35)), 0x60) { revert(_4, _4) }\n                                let memPtr_4 := mload(_2)\n                                finalize_allocation_9080(memPtr_4)\n                                let value := calldataload(36)\n                                let _32 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                if iszero(eq(value, and(value, _32))) { revert(0, 0) }\n                                mstore(memPtr_4, value)\n                                let value_1 := calldataload(68)\n                                if iszero(eq(value_1, and(value_1, _32))) { revert(0, 0) }\n                                mstore(add(memPtr_4, 0x20), value_1)\n                                let value_2 := calldataload(100)\n                                if iszero(eq(value_2, and(value_2, _32))) { revert(0, 0) }\n                                mstore(add(memPtr_4, _2), value_2)\n                                let value_3 := calldataload(132)\n                                if iszero(eq(value_3, and(value_3, _32))) { revert(0, 0) }\n                                let ret := fun_generateSignedUserOperation(memPtr_3, memPtr_4, value_3)\n                                let memPos := mload(_2)\n                                mstore(memPos, 0x20)\n                                return(memPos, sub(abi_encode_struct_PackedUserOperation(ret, add(memPos, 0x20)), memPos))\n                            }\n                            case 0xf8ccbf47 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let value_4 := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0xff)\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, iszero(iszero(value_4)))\n                                return(memPos_1, 32)\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function finalize_allocation_9077(memPtr)\n                    {\n                        if gt(memPtr, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, memPtr)\n                    }\n                    function finalize_allocation_9080(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0x60)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_9104(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 288)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_13203(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 64)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_13205(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 128)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation_13207(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 32)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x20)\n                    }\n                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                    {\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 32) }\n                        {\n                            mstore(add(dst, i), mload(add(src, i)))\n                        }\n                        mstore(add(dst, length), 0)\n                    }\n                    function abi_encode_bytes(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                        end := add(add(pos, and(add(length, 31), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31))), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x20)\n                    }\n                    function abi_encode_struct_PackedUserOperation(value, pos) -> end\n                    {\n                        let _1 := 0x0120\n                        mstore(pos, and(mload(value), sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n                        let memberValue0 := mload(add(value, 0x40))\n                        mstore(add(pos, 0x40), _1)\n                        let tail := abi_encode_bytes(memberValue0, add(pos, _1))\n                        let memberValue0_1 := mload(add(value, 0x60))\n                        mstore(add(pos, 0x60), sub(tail, pos))\n                        let tail_1 := abi_encode_bytes(memberValue0_1, tail)\n                        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n                        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n                        mstore(add(pos, 0xc0), mload(add(value, 0xc0)))\n                        let memberValue0_2 := mload(add(value, 0xe0))\n                        mstore(add(pos, 0xe0), sub(tail_1, pos))\n                        let tail_2 := abi_encode_bytes(memberValue0_2, tail_1)\n                        let _2 := 0x0100\n                        let memberValue0_3 := mload(add(value, _2))\n                        mstore(add(pos, _2), sub(tail_2, pos))\n                        end := abi_encode_bytes(memberValue0_3, tail_2)\n                    }\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    function abi_decode_address_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        if iszero(eq(value, and(value, sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        { revert(0, 0) }\n                    }\n                    /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                    function abi_decode_struct_NetworkConfig_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 96)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(0, 0)\n                        }\n                        let memPtr := mload(64)\n                        finalize_allocation_9080(memPtr)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(memPtr, abi_decode_address_fromMemory(headStart))\n                        mstore(add(memPtr, 32), abi_decode_address_fromMemory(add(headStart, 32)))\n                        mstore(add(memPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_decode_address_fromMemory(add(headStart, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)))\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        value0 := memPtr\n                    }\n                    function allocate_and_zero_memory_struct_struct_PackedUserOperation() -> memPtr\n                    {\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_1 := mload(64)\n                        finalize_allocation_9104(memPtr_1)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        memPtr := memPtr_1\n                        mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(add(memPtr_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 96)\n                        mstore(add(memPtr_1, 96), 96)\n                        mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ 0)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(add(memPtr_1, 192), /** @src -1:-1:-1 */ 0)\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(add(memPtr_1, 224), 96)\n                        mstore(add(memPtr_1, 256), 96)\n                    }\n                    function memory_array_index_access_struct_PackedUserOperation_dyn(baseRef) -> addr\n                    {\n                        if iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ baseRef))\n                        {\n                            mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0, shl(224, 0x4e487b71))\n                            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(4, 0x32)\n                            revert(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0x24)\n                        }\n                        addr := add(baseRef, 32)\n                    }\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    function abi_decode_uint64_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        if iszero(eq(value, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ value, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        { revert(0, 0) }\n                    }\n                    function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n                    {\n                        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n                        let value := mload(headStart)\n                        if iszero(eq(value, and(value, 0xff)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        value0 := value\n                        value1 := mload(add(headStart, 32))\n                        value2 := mload(add(headStart, 64))\n                    }\n                    /// @ast-id 51578 @src 83:2084:3142  \"function generateSignedUserOperation(...\"\n                    function fun_generateSignedUserOperation(var_callData_mpos, var_config_mpos, var_minimalAccount) -> var_mpos\n                    {\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _1 := 64\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        let _2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        mstore(_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x2d0335ab))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _3 := sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _4 := and(var_minimalAccount, _3)\n                        mstore(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ add(_2, 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _4)\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        let _5 := 32\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let _6 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        let _7 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _2, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _2, _5)\n                        if iszero(_7)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos := mload(_1)\n                            returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        let expr := /** @src -1:-1:-1 */ 0\n                        /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                        if _7\n                        {\n                            let _8 := _5\n                            if gt(_5, returndatasize()) { _8 := returndatasize() }\n                            finalize_allocation(_2, _8)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            if slt(sub(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ add(_2, _8), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _2), /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 83:2356:2383  \"vm.getNonce(minimalAccount)\"\n                            expr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ abi_decode_uint64_fromMemory(_2)\n                        }\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        let _9 := 0xffffffffffffffff\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let diff := add(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ expr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(0))\n                        if gt(diff, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x11)\n                            revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36)\n                        }\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr := mload(_1)\n                        finalize_allocation_9104(memPtr)\n                        mstore(memPtr, _4)\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ and(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ diff, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ _9))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_1 := mload(_1)\n                        finalize_allocation_13207(memPtr_1)\n                        mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1), memPtr_1)\n                        /// @src 83:3537:3979  \"PackedUserOperation({...\"\n                        let _10 := 96\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, _10), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_callData_mpos)\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:3745:3748  \"128\" */ 0x80), /** @src 83:3712:3763  \"uint256(verificationGasLimit) << 128 | callGasLimit\" */ 0x0100000000000000000000000000000001000000)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, 160), /** @src 83:3362:3370  \"16777216\" */ 0x01000000)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, 192), /** @src 83:3849:3900  \"uint256(maxPriorityFeePerGas) << 128 | maxFeePerGas\" */ 0x010000000000000000000000000000000100)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_2 := mload(_1)\n                        finalize_allocation_13207(memPtr_2)\n                        mstore(memPtr_2, /** @src -1:-1:-1 */ 0)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ add(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 224), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_2)\n                        let memPtr_3 := mload(_1)\n                        finalize_allocation_13207(memPtr_3)\n                        mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                        /// @src 83:3537:3979  \"PackedUserOperation({...\"\n                        let _11 := add(memPtr, /** @src 83:3464:3467  \"256\" */ 0x0100)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(_11, memPtr_3)\n                        let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:2574:2591  \"config.entryPoint\" */ var_config_mpos), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _3)\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let _12 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        mstore(_12, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x08b37793))\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ add(_12, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), _5)\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let _13 := staticcall(gas(), cleaned, _12, sub(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ abi_encode_struct_PackedUserOperation(memPtr, add(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ _12, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36)), /** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ _12), _12, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        if iszero(_13)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos_1 := mload(_1)\n                            returndatacopy(pos_1, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let expr_1 := /** @src -1:-1:-1 */ 0\n                        /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        if _13\n                        {\n                            let _14 := /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5\n                            /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                            if gt(/** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5, /** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ returndatasize()) { _14 := returndatasize() }\n                            finalize_allocation(_12, _14)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            if slt(sub(/** @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ add(_12, _14), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _12), /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            {\n                                revert(/** @src -1:-1:-1 */ 0, 0)\n                            }\n                            /// @src 83:2562:2614  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                            expr_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_12)\n                        }\n                        /// @src 76:1367:1676  \"assembly {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 76:1367:1676  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                        mstore(0x1c, expr_1)\n                        let var_digest := keccak256(/** @src -1:-1:-1 */ 0, /** @src 76:1367:1676  \"assembly {...\" */ 0x3c)\n                        /// @src 83:2709:2716  \"uint8 v\"\n                        let var_v := /** @src -1:-1:-1 */ 0\n                        /// @src 83:2726:2735  \"bytes32 r\"\n                        let var_r := /** @src -1:-1:-1 */ var_v\n                        /// @src 83:2745:2754  \"bytes32 s\"\n                        let var_s := /** @src -1:-1:-1 */ var_v\n                        /// @src 83:2868:3041  \"if (block.chainid == 31337) {...\"\n                        switch /** @src 83:2872:2894  \"block.chainid == 31337\" */ eq(/** @src 83:2872:2885  \"block.chainid\" */ chainid(), /** @src 83:2889:2894  \"31337\" */ 0x7a69)\n                        case /** @src 83:2868:3041  \"if (block.chainid == 31337) {...\" */ 0 {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 83:3007:3021  \"config.account\" */ add(var_config_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)), _3)\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            let _15 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            mstore(_15, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x8c1aa205))\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ add(_15, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned_1)\n                            mstore(add(/** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36), var_digest)\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            let _16 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ _15, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10)\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            if iszero(_16)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let pos_2 := mload(_1)\n                                returndatacopy(pos_2, /** @src -1:-1:-1 */ var_v, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            let expr_component := /** @src -1:-1:-1 */ var_v\n                            let expr_component_1 := var_v\n                            let expr_component_2 := var_v\n                            /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                            if _16\n                            {\n                                let _17 := /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10\n                                /// @src 83:2999:3030  \"vm.sign(config.account, digest)\"\n                                if gt(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10, /** @src 83:2999:3030  \"vm.sign(config.account, digest)\" */ returndatasize()) { _17 := returndatasize() }\n                                finalize_allocation(_15, _17)\n                                let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_15, add(_15, _17))\n                                expr_component := expr_component_3\n                                expr_component_1 := expr_component_4\n                                expr_component_2 := expr_component_5\n                            }\n                            /// @src 83:2987:3030  \"(v, r, s) = vm.sign(config.account, digest)\"\n                            var_s := expr_component_2\n                            var_r := expr_component_1\n                            var_v := expr_component\n                        }\n                        default /// @src 83:2868:3041  \"if (block.chainid == 31337) {...\"\n                        {\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let _18 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            mstore(_18, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x38d07aa9))\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ add(_18, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ 4), /** @src 83:2792:2858  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(add(/** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 36), var_digest)\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let _19 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _6, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _18, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10)\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            if iszero(_19)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let pos_3 := mload(_1)\n                                returndatacopy(pos_3, /** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let expr_component_6 := /** @src -1:-1:-1 */ 0\n                            let expr_51546_component := 0\n                            let expr_51546_component_1 := 0\n                            /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            if _19\n                            {\n                                let _20 := /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10\n                                /// @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                                if gt(/** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10, /** @src 83:2922:2956  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ returndatasize()) { _20 := returndatasize() }\n                                finalize_allocation(_18, _20)\n                                let expr_component_7, expr_component_8, expr_component_9 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_18, add(_18, _20))\n                                expr_component_6 := expr_component_7\n                                expr_51546_component := expr_component_8\n                                expr_51546_component_1 := expr_component_9\n                            }\n                            /// @src 83:2910:2956  \"(v, r, s) = vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            var_s := expr_51546_component_1\n                            var_r := expr_51546_component\n                            var_v := expr_component_6\n                        }\n                        /// @src 83:3069:3094  \"abi.encodePacked(r, s, v)\"\n                        let expr_51572_mpos := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(_1)\n                        mstore(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ add(expr_51572_mpos, /** @src 83:2356:2383  \"vm.getNonce(minimalAccount)\" */ _5), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_r)\n                        mstore(add(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ expr_51572_mpos, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1), var_s)\n                        mstore(add(/** @src 83:3069:3094  \"abi.encodePacked(r, s, v)\" */ expr_51572_mpos, /** @src 83:3537:3979  \"PackedUserOperation({...\" */ _10), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(shl(248, var_v), shl(248, 255)))\n                        /// @src 83:3069:3094  \"abi.encodePacked(r, s, v)\"\n                        mstore(expr_51572_mpos, 65)\n                        finalize_allocation_13205(expr_51572_mpos)\n                        /// @src 83:3050:3094  \"userOp.signature = abi.encodePacked(r, s, v)\"\n                        mstore(/** @src 83:3050:3066  \"userOp.signature\" */ _11, /** @src 83:3050:3094  \"userOp.signature = abi.encodePacked(r, s, v)\" */ expr_51572_mpos)\n                        /// @src 83:3122:3135  \"return userOp\"\n                        var_mpos := memPtr\n                    }\n                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                    function abi_decode_string_memory_ptr_fromMemory(offset, end) -> array\n                    {\n                        if iszero(slt(add(offset, 0x1f), end))\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let _1 := mload(offset)\n                        let _2 := array_allocation_size_bytes(_1)\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, _2)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(memPtr, _1)\n                        if gt(add(add(offset, _1), 0x20), end)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        copy_memory_to_memory_with_cleanup(add(offset, 0x20), add(memPtr, 0x20), _1)\n                        array := memPtr\n                    }\n                    function abi_decode_bool_fromMemory(offset) -> value\n                    {\n                        value := mload(offset)\n                        if iszero(eq(value, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ iszero(iszero(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ value)))) { revert(0, 0) }\n                    }\n                    function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n                    {\n                        if slt(sub(dataEnd, headStart), 32)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let offset := mload(headStart)\n                        if gt(offset, 0xffffffffffffffff)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            revert(0, 0)\n                        }\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        value0 := abi_decode_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n                    }\n                    /// @ast-id 42740 @src 39:768:2394  \"function get_most_recent_deployment(...\"\n                    function fun_get_most_recent_deployment(var_contractName_mpos, var_chainId, var_relativeBroadcastPath_mpos) -> var\n                    {\n                        /// @src 39:1002:1023  \"uint256 lastTimestamp\"\n                        let var_lastTimestamp := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:958:992  \"address latestAddress = address(0)\"\n                        let var_latestAddress := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:1002:1023  \"uint256 lastTimestamp\"\n                        var_lastTimestamp := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:1034:1051  \"bool runProcessed\"\n                        let var_runProcessed := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        let _1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        mstore(_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(226, 0x0525e1db))\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)\n                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                        let tail := abi_encode_bytes(var_relativeBroadcastPath_mpos, add(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68))\n                        /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                        mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), /** @src 39:1126:1127  \"3\" */ 0x03)\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        let _2 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _1, sub(tail, _1), _1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed)\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        if iszero(_2)\n                        {\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let pos := mload(64)\n                            returndatacopy(pos, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        let expr_42618_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed\n                        /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                        if _2\n                        {\n                            let _3 := returndatasize()\n                            returndatacopy(_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ _3)\n                            finalize_allocation(_1, _3)\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if slt(sub(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _1), 32)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                            }\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let offset := mload(_1)\n                            if gt(offset, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                            }\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            if iszero(slt(add(add(_1, offset), 0x1f), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                            }\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let _4 := mload(add(_1, offset))\n                            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            if gt(_4, 0xffffffffffffffff)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                                mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x41)\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                            }\n                            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            let _5 := shl(5, _4)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let memPtr := mload(64)\n                            finalize_allocation(memPtr, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                            let dst := memPtr\n                            mstore(memPtr, _4)\n                            dst := add(memPtr, 32)\n                            if gt(add(add(add(_1, offset), _5), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3))\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                            }\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let src := add(add(_1, offset), 32)\n                            for { }\n                            lt(src, add(add(add(_1, offset), _5), 32))\n                            { src := add(src, 32) }\n                            {\n                                let innerOffset := mload(src)\n                                if gt(innerOffset, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                                }\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if slt(add(sub(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(add(_1, offset), innerOffset)), /** @src 83:1303:1373  \"abi.encodeWithSelector(IERC20.approve.selector, RANDOM_APPROVER, 1e18)\" */ not(31)), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let memPtr_1 := mload(64)\n                                if or(gt(add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0), /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ lt(add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ memPtr_1))\n                                {\n                                    mstore(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(/** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x41)\n                                    revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)\n                                }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                mstore(64, add(memPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 0xa0))\n                                let offset_1 := mload(add(add(add(_1, offset), innerOffset), 32))\n                                if gt(offset_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                                }\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(memPtr_1, abi_decode_string_memory_ptr_fromMemory(add(add(add(add(_1, offset), innerOffset), offset_1), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let offset_2 := mload(add(add(add(_1, offset), innerOffset), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64))\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                if gt(offset_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xffffffffffffffff)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed, var_runProcessed)\n                                }\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(add(memPtr_1, 32), abi_decode_string_memory_ptr_fromMemory(add(add(add(add(_1, offset), innerOffset), offset_2), 32), /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ add(_1, _3)))\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let _6 := 96\n                                mstore(add(memPtr_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), abi_decode_uint64_fromMemory(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(add(add(_1, offset), innerOffset), _6)))\n                                let _7 := 128\n                                mstore(add(memPtr_1, _6), abi_decode_bool_fromMemory(add(add(add(_1, offset), innerOffset), _7)))\n                                mstore(add(memPtr_1, _7), abi_decode_bool_fromMemory(add(add(add(_1, offset), innerOffset), 0xa0)))\n                                mstore(dst, memPtr_1)\n                                dst := add(dst, 32)\n                            }\n                            /// @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\"\n                            expr_42618_mpos := memPtr\n                        }\n                        /// @src 39:1143:1156  \"uint256 i = 0\"\n                        let var_i := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ var_runProcessed\n                        /// @src 39:1138:2121  \"for (uint256 i = 0; i < entries.length; i++) {...\"\n                        for { }\n                        /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1\n                        /// @src 39:1143:1156  \"uint256 i = 0\"\n                        {\n                            /// @src 39:1178:1181  \"i++\"\n                            var_i := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:1178:1181  \"i++\" */ var_i, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1)\n                        }\n                        /// @src 39:1178:1181  \"i++\"\n                        {\n                            /// @src 39:1158:1176  \"i < entries.length\"\n                            if iszero(lt(var_i, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:1162:1176  \"entries.length\" */ expr_42618_mpos)))\n                            /// @src 39:1158:1176  \"i < entries.length\"\n                            { break }\n                            /// @src 39:1269:1279  \"entry.path\"\n                            let _8 := add(/** @src 39:1224:1234  \"entries[i]\" */ mload(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ add(add(expr_42618_mpos, shl(5, var_i)), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)), 32)\n                            /// @src 39:1269:1279  \"entry.path\"\n                            let _mpos := mload(_8)\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            let _9 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            mstore(_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 39:1308:1328  \"vm.toString(chainId)\" */ add(_9, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_chainId)\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            let _10 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _9, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            if iszero(_10)\n                            {\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let pos_1 := mload(64)\n                                returndatacopy(pos_1, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                revert(pos_1, returndatasize())\n                            }\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            let expr_42650_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                            /// @src 39:1308:1328  \"vm.toString(chainId)\"\n                            if _10\n                            {\n                                let _11 := returndatasize()\n                                returndatacopy(_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_42650_mpos, /** @src 39:1308:1328  \"vm.toString(chainId)\" */ _11)\n                                finalize_allocation(_9, _11)\n                                expr_42650_mpos := abi_decode_string_fromMemory(_9, add(_9, _11))\n                            }\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let outPtr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            let _12 := \"/\"\n                            mstore(add(outPtr, 32), _12)\n                            let _13 := 33\n                            let length := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_42650_mpos)\n                            copy_memory_to_memory_with_cleanup(add(expr_42650_mpos, 32), add(outPtr, _13), length)\n                            let _14 := add(outPtr, length)\n                            mstore(add(_14, _13), _12)\n                            let _15 := sub(_14, outPtr)\n                            mstore(outPtr, add(_15, 2))\n                            finalize_allocation(outPtr, add(_15, 34))\n                            /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                            let expr := /** @src 39:1269:1335  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\"))\" */ fun_contains(_mpos, /** @src 39:1289:1334  \"string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")\" */ outPtr)\n                            /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                            if expr\n                            {\n                                /// @src 39:1339:1349  \"entry.path\"\n                                let _144_mpos := mload(_8)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let memPtr_2 := mload(64)\n                                finalize_allocation_13203(memPtr_2)\n                                mstore(memPtr_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 5)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(add(memPtr_2, 32), \".json\")\n                                /// @src 39:1269:1367  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")\"\n                                expr := /** @src 39:1339:1367  \"entry.path.contains(\\\".json\\\")\" */ fun_contains(_144_mpos, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_2)\n                            }\n                            /// @src 39:1269:1422  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")...\"\n                            let expr_1 := expr\n                            if expr\n                            {\n                                /// @src 39:1392:1402  \"entry.path\"\n                                let _148_mpos := mload(_8)\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let memPtr_3 := mload(64)\n                                finalize_allocation_13203(memPtr_3)\n                                mstore(memPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 7)\n                                mstore(add(memPtr_3, 32), \"dry-run\")\n                                /// @src 39:1269:1422  \"entry.path.contains(string.concat(\\\"/\\\", vm.toString(chainId), \\\"/\\\")) && entry.path.contains(\\\".json\\\")...\"\n                                expr_1 := /** @src 39:1391:1422  \"!entry.path.contains(\\\"dry-run\\\")\" */ iszero(/** @src 39:1392:1422  \"entry.path.contains(\\\"dry-run\\\")\" */ fun_contains(_148_mpos, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ memPtr_3))\n                            }\n                            /// @src 39:1248:2111  \"if (...\"\n                            if expr_1\n                            {\n                                /// @src 39:1455:1474  \"runProcessed = true\"\n                                var_runProcessed := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 1\n                                /// @src 39:1525:1535  \"entry.path\"\n                                let _152_mpos := mload(_8)\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                let _16 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                mstore(_16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x60f9bb11))\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ add(_16, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                let _17 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16, sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_encode_bytes(_152_mpos, add(/** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36)), /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _16), _16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                if iszero(_17)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_2 := mload(64)\n                                    returndatacopy(pos_2, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                let expr_mpos := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:1513:1536  \"vm.readFile(entry.path)\"\n                                if _17\n                                {\n                                    let _18 := returndatasize()\n                                    returndatacopy(_16, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos, /** @src 39:1513:1536  \"vm.readFile(entry.path)\" */ _18)\n                                    finalize_allocation(_16, _18)\n                                    expr_mpos := abi_decode_string_fromMemory(_16, add(_16, _18))\n                                }\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                let _19 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                mstore(_19, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x56eef15b))\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ add(_19, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                let tail_1 := abi_encode_bytes(expr_mpos, add(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68))\n                                let _20 := sub(tail_1, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19)\n                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                mstore(add(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), add(_20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ not(3)))\n                                mstore(tail_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 10)\n                                mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(tail_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), \".timestamp\")\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                let _21 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, add(_20, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 64), /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ _19, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                if iszero(_21)\n                                {\n                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                    let pos_3 := mload(64)\n                                    returndatacopy(pos_3, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                let expr_2 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                if _21\n                                {\n                                    let _22 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                    /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                    if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ returndatasize()) { _22 := returndatasize() }\n                                    finalize_allocation(_19, _22)\n                                    /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                    if slt(sub(/** @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\" */ add(_19, _22), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _19), 32)\n                                    {\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_2, expr_2)\n                                    }\n                                    /// @src 39:1575:1611  \"vm.parseJsonUint(json, \\\".timestamp\\\")\"\n                                    expr_2 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ mload(_19)\n                                }\n                                /// @src 39:1630:2097  \"if (timestamp > lastTimestamp) {...\"\n                                if /** @src 39:1634:1659  \"timestamp > lastTimestamp\" */ gt(expr_2, var_lastTimestamp)\n                                /// @src 39:1630:2097  \"if (timestamp > lastTimestamp) {...\"\n                                {\n                                    /// @src 39:1699:1744  \"processRun(json, contractName, latestAddress)\"\n                                    let var_latestAddress_1 := var_latestAddress\n                                    /// @src 39:2566:2579  \"uint256 i = 0\"\n                                    let var_i_1 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                    /// @src 39:2561:3186  \"for (uint256 i = 0; vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\")); i++) {...\"\n                                    for { }\n                                    /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_runProcessed\n                                    /// @src 39:2566:2579  \"uint256 i = 0\"\n                                    {\n                                        /// @src 39:2660:2663  \"i++\"\n                                        var_i_1 := increment_uint256(var_i_1)\n                                    }\n                                    {\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        let _23 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        mstore(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:2637:2651  \"vm.toString(i)\" */ add(_23, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        let _24 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2637:2651  \"vm.toString(i)\" */ _23, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:2637:2651  \"vm.toString(i)\" */ _23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        if iszero(_24)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_4 := mload(64)\n                                            returndatacopy(pos_4, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_4, returndatasize())\n                                        }\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        let expr_mpos_1 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 39:2637:2651  \"vm.toString(i)\"\n                                        if _24\n                                        {\n                                            let _25 := returndatasize()\n                                            returndatacopy(_23, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_1, /** @src 39:2637:2651  \"vm.toString(i)\" */ _25)\n                                            finalize_allocation(_23, _25)\n                                            expr_mpos_1 := abi_decode_string_fromMemory(_23, add(_23, _25))\n                                        }\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        let outPtr_1 := mload(64)\n                                        mstore(add(outPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let length_1 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_1)\n                                        copy_memory_to_memory_with_cleanup(add(expr_mpos_1, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_1, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1)\n                                        let _26 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_1, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_1)\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"]\")\n                                        let _27 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _26, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_1)\n                                        mstore(outPtr_1, add(_27, 16))\n                                        finalize_allocation(outPtr_1, add(_27, 48))\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        let _28 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        mstore(_28, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x6da11afb))\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        let _29 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ _28, sub(abi_encode_string_string(add(_28, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ expr_mpos, outPtr_1), _28), _28, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        if iszero(_29)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_5 := mload(64)\n                                            returndatacopy(pos_5, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_5, returndatasize())\n                                        }\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        let expr_3 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        if _29\n                                        {\n                                            let _30 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                            /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                            if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ returndatasize()) { _30 := returndatasize() }\n                                            finalize_allocation(_28, _30)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            if slt(sub(/** @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\" */ add(_28, _30), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _28), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            {\n                                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_3, expr_3)\n                                            }\n                                            /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                            expr_3 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_decode_bool_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _28)\n                                        }\n                                        /// @src 39:2581:2658  \"vm.keyExistsJson(json, string.concat(\\\"$.transactions[\\\", vm.toString(i), \\\"]\\\"))\"\n                                        if iszero(expr_3) { break }\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        let _31 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        mstore(_31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:2745:2759  \"vm.toString(i)\" */ add(_31, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        let _32 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2745:2759  \"vm.toString(i)\" */ _31, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:2745:2759  \"vm.toString(i)\" */ _31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        if iszero(_32)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_6 := mload(64)\n                                            returndatacopy(pos_6, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_6, returndatasize())\n                                        }\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        let expr_mpos_2 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 39:2745:2759  \"vm.toString(i)\"\n                                        if _32\n                                        {\n                                            let _33 := returndatasize()\n                                            returndatacopy(_31, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_2, /** @src 39:2745:2759  \"vm.toString(i)\" */ _33)\n                                            finalize_allocation(_31, _33)\n                                            expr_mpos_2 := abi_decode_string_fromMemory(_31, add(_31, _33))\n                                        }\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        let outPtr_2 := mload(64)\n                                        mstore(add(outPtr_2, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                        /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                        let length_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_2)\n                                        copy_memory_to_memory_with_cleanup(add(expr_mpos_2, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_2, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2)\n                                        let _34 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_2, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_2)\n                                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                        mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_34, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"].contractName\")\n                                        let _35 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _34, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_2)\n                                        mstore(outPtr_2, add(_35, 29))\n                                        finalize_allocation(outPtr_2, add(_35, 61))\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        let _36 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        mstore(_36, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x6da11afb))\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        let _37 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ _36, sub(abi_encode_string_string(add(_36, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ expr_mpos, outPtr_2), _36), _36, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        if iszero(_37)\n                                        {\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            let pos_7 := mload(64)\n                                            returndatacopy(pos_7, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                            revert(pos_7, returndatasize())\n                                        }\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        let expr_4 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                        /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                        if _37\n                                        {\n                                            let _38 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                            /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                            if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ returndatasize()) { _38 := returndatasize() }\n                                            finalize_allocation(_36, _38)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            if slt(sub(/** @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\" */ add(_36, _38), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _36), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                            {\n                                                revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_4, expr_4)\n                                            }\n                                            /// @src 39:2796:2836  \"vm.keyExistsJson(json, contractNamePath)\"\n                                            expr_4 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ abi_decode_bool_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _36)\n                                        }\n                                        /// @src 39:2792:3176  \"if (vm.keyExistsJson(json, contractNamePath)) {...\"\n                                        if expr_4\n                                        {\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            let _39 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            mstore(_39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(227, 0x09389f59))\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            let _40 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ _39, sub(abi_encode_string_string(add(_39, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ expr_mpos, outPtr_2), _39), _39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            if iszero(_40)\n                                            {\n                                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                let pos_8 := mload(64)\n                                                returndatacopy(pos_8, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                                revert(pos_8, returndatasize())\n                                            }\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            let expr_mpos_3 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                            /// @src 22:1931:1960  \"vm.parseJsonString(json, key)\"\n                                            if _40\n                                            {\n                                                let _41 := returndatasize()\n                                                returndatacopy(_39, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_3, /** @src 22:1931:1960  \"vm.parseJsonString(json, key)\" */ _41)\n                                                finalize_allocation(_39, _41)\n                                                expr_mpos_3 := abi_decode_string_fromMemory(_39, add(_39, _41))\n                                            }\n                                            /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                            let expr_mpos_4 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                            /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                            let _42 := add(expr_mpos_4, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                            let length_3 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_3)\n                                            copy_memory_to_memory_with_cleanup(add(expr_mpos_3, 32), _42, length_3)\n                                            /// @src 40:242:264  \"abi.encodePacked(str1)\"\n                                            let _43 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:242:264  \"abi.encodePacked(str1)\" */ expr_mpos_4, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_3), /** @src 40:242:264  \"abi.encodePacked(str1)\" */ expr_mpos_4)\n                                            mstore(expr_mpos_4, _43)\n                                            finalize_allocation(expr_mpos_4, add(_43, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                            /// @src 40:232:265  \"keccak256(abi.encodePacked(str1))\"\n                                            let expr_5 := keccak256(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _42, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:232:265  \"keccak256(abi.encodePacked(str1))\" */ expr_mpos_4))\n                                            /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                            let expr_mpos_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                            /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                            let _44 := add(expr_mpos_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                            let length_4 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ var_contractName_mpos)\n                                            copy_memory_to_memory_with_cleanup(add(var_contractName_mpos, 32), _44, length_4)\n                                            /// @src 40:291:313  \"abi.encodePacked(str2)\"\n                                            let _45 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:291:313  \"abi.encodePacked(str2)\" */ expr_mpos_5, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_4), /** @src 40:291:313  \"abi.encodePacked(str2)\" */ expr_mpos_5)\n                                            mstore(expr_mpos_5, _45)\n                                            finalize_allocation(expr_mpos_5, add(_45, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                            /// @src 39:2944:3162  \"if (deployedContractName.isEqualTo(contractName)) {...\"\n                                            if /** @src 40:232:314  \"keccak256(abi.encodePacked(str1)) ==...\" */ eq(expr_5, /** @src 40:281:314  \"keccak256(abi.encodePacked(str2))\" */ keccak256(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _44, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:281:314  \"keccak256(abi.encodePacked(str2))\" */ expr_mpos_5)))\n                                            /// @src 39:2944:3162  \"if (deployedContractName.isEqualTo(contractName)) {...\"\n                                            {\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                let _46 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                mstore(_46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(225, 0x348051d7))\n                                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                mstore(/** @src 39:3106:3120  \"vm.toString(i)\" */ add(_46, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ var_i_1)\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                let _47 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 39:3106:3120  \"vm.toString(i)\" */ _46, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36, /** @src 39:3106:3120  \"vm.toString(i)\" */ _46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0)\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                if iszero(_47)\n                                                {\n                                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                    let pos_9 := mload(64)\n                                                    returndatacopy(pos_9, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                                    revert(pos_9, returndatasize())\n                                                }\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                let expr_mpos_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                                /// @src 39:3106:3120  \"vm.toString(i)\"\n                                                if _47\n                                                {\n                                                    let _48 := returndatasize()\n                                                    returndatacopy(_46, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_mpos_6, /** @src 39:3106:3120  \"vm.toString(i)\" */ _48)\n                                                    finalize_allocation(_46, _48)\n                                                    expr_mpos_6 := abi_decode_string_fromMemory(_46, add(_46, _48))\n                                                }\n                                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                let outPtr_3 := mload(64)\n                                                mstore(add(outPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ \"$.transactions[\")\n                                                /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                                                let length_5 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ expr_mpos_6)\n                                                copy_memory_to_memory_with_cleanup(add(expr_mpos_6, 32), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(outPtr_3, 47), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_5)\n                                                let _49 := add(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_3, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ length_5)\n                                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(_49, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 47), \"].contractAddress\")\n                                                let _50 := sub(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ _49, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ outPtr_3)\n                                                mstore(outPtr_3, add(_50, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32))\n                                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                finalize_allocation(outPtr_3, add(_50, 64))\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                let _51 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                mstore(_51, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ shl(224, 0x1e19e657))\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                let _52 := staticcall(gas(), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d, /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ _51, sub(abi_encode_string_string(add(_51, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ expr_mpos, outPtr_3), _51), _51, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                if iszero(_52)\n                                                {\n                                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                    let pos_10 := mload(64)\n                                                    returndatacopy(pos_10, /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ returndatasize())\n                                                    revert(pos_10, returndatasize())\n                                                }\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                let expr_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0\n                                                /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                if _52\n                                                {\n                                                    let _53 := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32\n                                                    /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                    if gt(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32, /** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ returndatasize()) { _53 := returndatasize() }\n                                                    finalize_allocation(_51, _53)\n                                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                    if slt(sub(/** @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\" */ add(_51, _53), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _51), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                                                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                                    {\n                                                        revert(/** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ expr_6, expr_6)\n                                                    }\n                                                    /// @src 22:2250:2280  \"vm.parseJsonAddress(json, key)\"\n                                                    expr_6 := /** @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ abi_decode_address_fromMemory(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _51)\n                                                }\n                                                /// @src 39:3016:3143  \"latestAddress =...\"\n                                                var_latestAddress_1 := expr_6\n                                            }\n                                        }\n                                    }\n                                    /// @src 39:1683:1744  \"latestAddress = processRun(json, contractName, latestAddress)\"\n                                    var_latestAddress := var_latestAddress_1\n                                    /// @src 39:1972:2079  \"if (latestAddress != address(0)) {...\"\n                                    if /** @src 39:1976:2003  \"latestAddress != address(0)\" */ iszero(iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(/** @src 39:1976:2003  \"latestAddress != address(0)\" */ var_latestAddress_1, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                                    /// @src 39:1972:2079  \"if (latestAddress != address(0)) {...\"\n                                    {\n                                        /// @src 39:2031:2056  \"lastTimestamp = timestamp\"\n                                        var_lastTimestamp := expr_2\n                                    }\n                                }\n                            }\n                        }\n                        /// @src 39:2131:2239  \"if (!runProcessed) {...\"\n                        if /** @src 39:2135:2148  \"!runProcessed\" */ iszero(var_runProcessed)\n                        /// @src 39:2131:2239  \"if (!runProcessed) {...\"\n                        {\n                            /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                            let _54 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                            /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                            mstore(_54, shl(229, 4594637))\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ add(_54, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), 54)\n                            mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), \"No deployment artifacts were fou\")\n                            mstore(add(/** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ _54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100), \"nd for specified chain\")\n                            /// @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\"\n                            revert(_54, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 132)\n                        }\n                        /// @src 39:2249:2388  \"if (latestAddress != address(0)) {...\"\n                        switch /** @src 39:2253:2280  \"latestAddress != address(0)\" */ iszero(iszero(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ and(/** @src 39:2253:2280  \"latestAddress != address(0)\" */ var_latestAddress, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ sub(shl(160, /** @src 83:973:991  \"new HelperConfig()\" */ 1), 1))))\n                        case /** @src 39:2249:2388  \"if (latestAddress != address(0)) {...\" */ 0 {\n                            /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                            let _55 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(64)\n                            /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                            mstore(_55, /** @src 39:2164:2228  \"revert(\\\"No deployment artifacts were found for specified chain\\\")\" */ shl(229, 4594637))\n                            /// @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\"\n                            mstore(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ add(_55, /** @src 39:1092:1128  \"vm.readDir(relativeBroadcastPath, 3)\" */ 4), /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 32)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ _55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 36), 20)\n                            mstore(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ add(/** @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\" */ _55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 68), \"No contract deployed\")\n                            /// @src 39:2347:2377  \"revert(\\\"No contract deployed\\\")\"\n                            revert(_55, /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ 100)\n                        }\n                        default /// @src 39:2249:2388  \"if (latestAddress != address(0)) {...\"\n                        {\n                            /// @src 39:2296:2316  \"return latestAddress\"\n                            var := var_latestAddress\n                            leave\n                        }\n                    }\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    function increment_uint256(value) -> ret\n                    {\n                        if eq(value, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        ret := add(value, 1)\n                    }\n                    function memory_array_index_access_bytes(baseRef, index) -> addr\n                    {\n                        if iszero(lt(index, mload(baseRef)))\n                        {\n                            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                            /// @src 83:847:889  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                        addr := add(add(baseRef, index), 32)\n                    }\n                    /// @ast-id 42945 @src 40:327:1030  \"function contains(...\"\n                    function fun_contains(var_str_mpos, var_substr_mpos) -> var\n                    {\n                        /// @src 40:545:560  \"strBytes.length\"\n                        let expr := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:545:560  \"strBytes.length\" */ var_str_mpos)\n                        /// @src 40:545:605  \"strBytes.length < substrBytes.length || strBytes.length == 0\"\n                        let expr_1 := /** @src 40:545:581  \"strBytes.length < substrBytes.length\" */ lt(expr, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:563:581  \"substrBytes.length\" */ var_substr_mpos))\n                        /// @src 40:545:605  \"strBytes.length < substrBytes.length || strBytes.length == 0\"\n                        if iszero(expr_1)\n                        {\n                            expr_1 := /** @src 40:585:605  \"strBytes.length == 0\" */ iszero(expr)\n                        }\n                        /// @src 40:541:631  \"if (strBytes.length < substrBytes.length || strBytes.length == 0)...\"\n                        if expr_1\n                        {\n                            /// @src 40:619:631  \"return false\"\n                            var := /** @src -1:-1:-1 */ 0\n                            /// @src 40:619:631  \"return false\"\n                            leave\n                        }\n                        /// @src 40:647:657  \"uint i = 0\"\n                        let var_i := /** @src -1:-1:-1 */ 0\n                        /// @src 40:642:1002  \"for (uint i = 0; i <= strBytes.length - substrBytes.length; i++) {...\"\n                        for { }\n                        /** @src 40:736:740  \"true\" */ 0x01\n                        /// @src 40:647:657  \"uint i = 0\"\n                        {\n                            /// @src 40:702:705  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 40:664:679  \"strBytes.length\"\n                            let expr_2 := /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:664:679  \"strBytes.length\" */ var_str_mpos)\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            let diff := sub(expr_2, mload(/** @src 40:682:700  \"substrBytes.length\" */ var_substr_mpos))\n                            /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                            if gt(diff, expr_2)\n                            {\n                                mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x24)\n                            }\n                            /// @src 40:659:700  \"i <= strBytes.length - substrBytes.length\"\n                            if gt(var_i, diff) { break }\n                            /// @src 40:721:740  \"bool isEqual = true\"\n                            let var_isEqual := /** @src 40:736:740  \"true\" */ 0x01\n                            /// @src 40:759:769  \"uint j = 0\"\n                            let var_j := /** @src -1:-1:-1 */ 0\n                            /// @src 40:754:954  \"for (uint j = 0; j < substrBytes.length; j++) {...\"\n                            for { }\n                            /** @src 40:736:740  \"true\" */ 0x01\n                            /// @src 40:759:769  \"uint j = 0\"\n                            {\n                                /// @src 40:795:798  \"j++\"\n                                var_j := /** @src 39:416:475  \"Vm(address(uint160(uint256(keccak256(\\\"hevm cheat code\\\")))))\" */ add(/** @src 40:795:798  \"j++\" */ var_j, /** @src 40:736:740  \"true\" */ 0x01)\n                            }\n                            /// @src 40:795:798  \"j++\"\n                            {\n                                /// @src 40:771:793  \"j < substrBytes.length\"\n                                if iszero(lt(var_j, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ mload(/** @src 40:775:793  \"substrBytes.length\" */ var_substr_mpos)))\n                                /// @src 40:771:793  \"j < substrBytes.length\"\n                                { break }\n                                /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                                let sum := add(var_i, var_j)\n                                if gt(var_i, sum)\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x11)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ 0x24)\n                                }\n                                let _1 := shl(248, 255)\n                                let cleaned := and(mload(/** @src 40:822:837  \"strBytes[i + j]\" */ memory_array_index_access_bytes(var_str_mpos, /** @src 40:831:836  \"i + j\" */ sum)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)\n                                /// @src 40:818:940  \"if (strBytes[i + j] != substrBytes[j]) {...\"\n                                if /** @src 40:822:855  \"strBytes[i + j] != substrBytes[j]\" */ iszero(eq(/** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ cleaned, and(mload(/** @src 40:841:855  \"substrBytes[j]\" */ memory_array_index_access_bytes(var_substr_mpos, var_j)), /** @src 83:663:3988  \"contract SendPackedUserOp is Script {...\" */ _1)))\n                                /// @src 40:818:940  \"if (strBytes[i + j] != substrBytes[j]) {...\"\n                                {\n                                    /// @src 40:879:894  \"isEqual = false\"\n                                    var_isEqual := /** @src -1:-1:-1 */ 0\n                                    /// @src 40:916:921  \"break\"\n                                    break\n                                }\n                            }\n                            /// @src 40:967:991  \"if (isEqual) return true\"\n                            if var_isEqual\n                            {\n                                /// @src 40:980:991  \"return true\"\n                                var := /** @src 40:736:740  \"true\" */ 0x01\n                                /// @src 40:980:991  \"return true\"\n                                leave\n                            }\n                        }\n                        /// @src 40:1011:1023  \"return false\"\n                        var := /** @src -1:-1:-1 */ 0\n                    }\n                    /// @src 83:663:3988  \"contract SendPackedUserOp is Script {...\"\n                    function abi_encode_string_string(headStart, value0, value1) -> tail\n                    {\n                        mstore(headStart, 64)\n                        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n                        mstore(add(headStart, 32), sub(tail_1, headStart))\n                        tail := abi_encode_bytes(value1, tail_1)\n                    }\n                }\n                /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 82:\"script/HelperConfig.s.sol\"\n                object \"HelperConfig_51339\" {\n                    code {\n                        {\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _1 := 64\n                            mstore(_1, memoryguard(0x80))\n                            if callvalue() { revert(0, 0) }\n                            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ not(16711935)), 65537))\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\"\n                            let _2 := 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let _3 := 32\n                            let _4 := add(expr_mpos, _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_4, /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                            /// @src 82:3397:3623  \"NetworkConfig({...\"\n                            let _5 := add(expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            let _6 := 0xc17326c11e8d54a342d4673cb784ca8d9099e760\n                            mstore(_5, _6)\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _7 := 0\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1086:1094  \"11155111\" */ 0xaa36a7)\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let _8 := sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let _9 := and(mload(expr_mpos), _8)\n                            let _10 := not(sub(shl(160, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1), 1))\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot, or(and(sload(dataSlot), _10), _9))\n                            let memberSlot := add(dataSlot, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot, or(and(sload(memberSlot), _10), and(mload(_4), _8)))\n                            let memberSlot_1 := add(dataSlot, 2)\n                            sstore(memberSlot_1, or(and(sload(memberSlot_1), _10), and(mload(_5), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let expr_mpos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let _11 := add(expr_mpos_1, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_11, /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                            /// @src 82:3018:3209  \"NetworkConfig({...\"\n                            let _12 := add(expr_mpos_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_12, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_1 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_1, or(and(sload(dataSlot_1), _10), and(mload(expr_mpos_1), _8)))\n                            let memberSlot_2 := add(dataSlot_1, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_2, or(and(sload(memberSlot_2), _10), and(mload(_11), _8)))\n                            let memberSlot_3 := add(dataSlot_1, 2)\n                            sstore(memberSlot_3, or(and(sload(memberSlot_3), _10), and(mload(_12), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let expr_mpos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7)\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let _13 := add(expr_mpos_2, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_13, /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                            /// @src 82:4360:4567  \"NetworkConfig({...\"\n                            let _14 := add(expr_mpos_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_14, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1433:1436  \"324\" */ 0x0144)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_2 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_2, or(and(sload(dataSlot_2), _10), and(mload(expr_mpos_2), _8)))\n                            let memberSlot_4 := add(dataSlot_2, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_4, or(and(sload(memberSlot_4), _10), and(mload(_13), _8)))\n                            let memberSlot_5 := add(dataSlot_2, 2)\n                            sstore(memberSlot_5, or(and(sload(memberSlot_5), _10), and(mload(_14), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let expr_mpos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ allocate_memory()\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(expr_mpos_3, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ _2)\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let _15 := add(expr_mpos_3, /** @src 82:3397:3623  \"NetworkConfig({...\" */ _3)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_15, /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                            /// @src 82:3727:3918  \"NetworkConfig({...\"\n                            let _16 := add(expr_mpos_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)\n                            /// @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\"\n                            mstore(_16, _6)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, /** @src 82:1378:1384  \"421614\" */ 0x066eee)\n                            /// @src 82:1086:1094  \"11155111\"\n                            mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ _3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 16)\n                            /// @src 82:1086:1094  \"11155111\"\n                            let dataSlot_3 := keccak256(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _7, _1)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(dataSlot_3, or(and(sload(dataSlot_3), _10), and(mload(expr_mpos_3), _8)))\n                            let memberSlot_6 := add(dataSlot_3, /** @src 18:3166:3170  \"true\" */ 0x01)\n                            /// @src 82:1086:1094  \"11155111\"\n                            sstore(memberSlot_6, or(and(sload(memberSlot_6), _10), and(mload(_15), _8)))\n                            let memberSlot_7 := add(dataSlot_3, 2)\n                            sstore(memberSlot_7, or(and(sload(memberSlot_7), _10), and(mload(_16), _8)))\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            let _17 := mload(_1)\n                            let _18 := datasize(\"HelperConfig_51339_deployed\")\n                            codecopy(_17, dataoffset(\"HelperConfig_51339_deployed\"), _18)\n                            return(_17, _18)\n                        }\n                        function allocate_memory() -> memPtr\n                        {\n                            memPtr := mload(64)\n                            let newFreePtr := add(memPtr, 96)\n                            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            mstore(64, newFreePtr)\n                        }\n                        function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                        {\n                            memPtr := allocate_memory()\n                            mstore(memPtr, 0)\n                            mstore(add(memPtr, 32), 0)\n                            mstore(add(memPtr, 64), 0)\n                        }\n                    }\n                    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 30:\"lib/forge-std/src/console.sol\", 82:\"script/HelperConfig.s.sol\"\n                    object \"HelperConfig_51339_deployed\" {\n                        code {\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _1 := 64\n                                mstore(_1, memoryguard(0x80))\n                                if iszero(lt(calldatasize(), 4))\n                                {\n                                    let _2 := 0\n                                    switch shr(224, calldataload(_2))\n                                    case 0x12900da8 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let ret := fun_getOrCreateAnvilEthConfig()\n                                        let memPos := mload(_1)\n                                        return(memPos, sub(abi_encode_struct_NetworkConfig(memPos, ret), memPos))\n                                    }\n                                    case 0x209c25eb {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                        let ret_1 := fun_getConfigByChainId(calldataload(4))\n                                        let memPos_1 := mload(_1)\n                                        return(memPos_1, sub(abi_encode_struct_NetworkConfig(memPos_1, ret_1), memPos_1))\n                                    }\n                                    case 0x72f953bb {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr := mload(_1)\n                                        finalize_allocation(memPtr)\n                                        mstore(memPtr, /** @src 82:3767:3809  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, 32), /** @src 82:3829:3871  \"0x75faf114eafb1BDbe2F0316DF893fd58CE46AA4d\" */ 0x75faf114eafb1bdbe2f0316df893fd58ce46aa4d)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3727:3918  \"NetworkConfig({...\" */ add(memPtr, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_2 := mload(_1)\n                                        return(memPos_2, sub(abi_encode_struct_NetworkConfig(memPos_2, memPtr), memPos_2))\n                                    }\n                                    case 0x7b99b603 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                        mstore(_2, calldataload(4))\n                                        mstore(32, /** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ 16)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let dataSlot := keccak256(_2, _1)\n                                        let _3 := sub(shl(160, 1), 1)\n                                        let cleaned := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ dataSlot), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                        let cleaned_1 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 1)), _3)\n                                        let cleaned_2 := and(sload(/** @src 82:1670:1733  \"mapping(uint256 chainId => NetworkConfig) public networkConfigs\" */ add(dataSlot, 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3)\n                                        let memPos_3 := mload(_1)\n                                        return(memPos_3, sub(abi_encode_address_address_address(memPos_3, cleaned, cleaned_1, cleaned_2), memPos_3))\n                                    }\n                                    case 0x7cd4a433 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_1 := mload(_1)\n                                        finalize_allocation(memPtr_1)\n                                        mstore(memPtr_1, /** @src 82:3058:3100  \"0x0000000071727De22E5E9d8BAf0edAc6f37da032\" */ 0x71727de22e5e9d8baf0edac6f37da032)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, 32), /** @src 82:3120:3162  \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\" */ 0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3018:3209  \"NetworkConfig({...\" */ add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_4 := mload(_1)\n                                        return(memPos_4, sub(abi_encode_struct_NetworkConfig(memPos_4, memPtr_1), memPos_4))\n                                    }\n                                    case 0xa1bb9417 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_2 := mload(_1)\n                                        finalize_allocation(memPtr_2)\n                                        mstore(memPtr_2, _2)\n                                        mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, 32), /** @src 82:4478:4520  \"0x1d17CBcF0D6D143135aE902365D2E5e2A16538D4\" */ 0x1d17cbcf0d6d143135ae902365d2e5e2a16538d4)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:4360:4567  \"NetworkConfig({...\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_5 := mload(_1)\n                                        return(memPos_5, sub(abi_encode_struct_NetworkConfig(memPos_5, memPtr_2), memPos_5))\n                                    }\n                                    case 0xa60f7516 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let _4 := sub(shl(160, 1), 1)\n                                        let cleaned_3 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 13), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let cleaned_4 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 14), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let cleaned_5 := and(sload(/** @src 82:1625:1664  \"NetworkConfig public localNetworkConfig\" */ 15), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4)\n                                        let memPos_6 := mload(_1)\n                                        return(memPos_6, sub(abi_encode_address_address_address(memPos_6, cleaned_3, cleaned_4, cleaned_5), memPos_6))\n                                    }\n                                    case 0xba3ec354 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_3 := mload(_1)\n                                        finalize_allocation(memPtr_3)\n                                        mstore(memPtr_3, _2)\n                                        mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, 32), /** @src 82:4132:4174  \"0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E\" */ 0x5a7d6b2f92c77fad6ccabd7ee0624e64907eaf3e)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:4025:4260  \"NetworkConfig({...\" */ add(memPtr_3, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_7 := mload(_1)\n                                        return(memPos_7, sub(abi_encode_struct_NetworkConfig(memPos_7, memPtr_3), memPos_7))\n                                    }\n                                    case 0xc28975d1 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        let memPtr_4 := mload(_1)\n                                        finalize_allocation(memPtr_4)\n                                        mstore(memPtr_4, /** @src 82:3437:3479  \"0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\" */ 0x5ff137d4b0fdcd49dca30c7cf57e578a026d2789)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, 32), /** @src 82:3499:3541  \"0x53844F9577C2334e541Aec7Df7174ECe5dF1fCf0\" */ 0x53844f9577c2334e541aec7df7174ece5df1fcf0)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src 82:3397:3623  \"NetworkConfig({...\" */ add(memPtr_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1), /** @src 82:1285:1327  \"0xC17326c11E8D54a342d4673cB784cA8d9099E760\" */ 0xc17326c11e8d54a342d4673cb784ca8d9099e760)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_8 := mload(_1)\n                                        return(memPos_8, sub(abi_encode_struct_NetworkConfig(memPos_8, memPtr_4), memPos_8))\n                                    }\n                                    case 0xc3f909d4 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                        /// @src 82:2299:2339  \"return getConfigByChainId(block.chainid)\"\n                                        let var_mpos := /** @src 82:2306:2339  \"getConfigByChainId(block.chainid)\" */ fun_getConfigByChainId(/** @src 82:2325:2338  \"block.chainid\" */ chainid())\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let memPos_9 := mload(_1)\n                                        return(memPos_9, sub(abi_encode_struct_NetworkConfig(memPos_9, var_mpos), memPos_9))\n                                    }\n                                    case 0xf8ccbf47 {\n                                        if callvalue() { revert(_2, _2) }\n                                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                                        let value := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0xff)\n                                        let memPos_10 := mload(_1)\n                                        mstore(memPos_10, iszero(iszero(value)))\n                                        return(memPos_10, 32)\n                                    }\n                                }\n                                revert(0, 0)\n                            }\n                            function abi_encode_struct_NetworkConfig(headStart, value0) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(headStart, and(mload(value0), _1))\n                                mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n                                mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), _1))\n                            }\n                            function abi_encode_address_address_address(headStart, value0, value1, value2) -> tail\n                            {\n                                tail := add(headStart, 96)\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(headStart, and(value0, _1))\n                                mstore(add(headStart, 32), and(value1, _1))\n                                mstore(add(headStart, 64), and(value2, _1))\n                            }\n                            function finalize_allocation(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 96)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function finalize_allocation_2854(memPtr)\n                            {\n                                if gt(memPtr, 0xffffffffffffffff)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, memPtr)\n                            }\n                            function finalize_allocation_4414(memPtr)\n                            {\n                                let newFreePtr := add(memPtr, 64)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(0, 0x24)\n                                }\n                                mstore(64, newFreePtr)\n                            }\n                            function allocate_and_zero_memory_struct_struct_NetworkConfig() -> memPtr\n                            {\n                                let memPtr_1 := mload(64)\n                                finalize_allocation(memPtr_1)\n                                memPtr := memPtr_1\n                                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(memPtr_1, 64), /** @src -1:-1:-1 */ 0)\n                            }\n                            /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                            function read_from_storage_reference_type_struct_NetworkConfig() -> value\n                            {\n                                let memPtr := mload(64)\n                                finalize_allocation(memPtr)\n                                value := memPtr\n                                let _1 := sub(shl(160, 1), 1)\n                                mstore(memPtr, and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                                mstore(add(memPtr, 32), and(sload(14), _1))\n                                mstore(add(memPtr, 64), and(sload(15), _1))\n                            }\n                            /// @ast-id 51338 @src 82:4580:5237  \"function getOrCreateAnvilEthConfig() public returns (NetworkConfig memory) {...\"\n                            function fun_getOrCreateAnvilEthConfig() -> var_mpos\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                let _1 := sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let cleaned := /** @src -1:-1:-1 */ 0\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _2 := sub(shl(160, 1), 1)\n                                /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                                if /** @src 82:4669:4709  \"localNetworkConfig.account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(_1, _2)))\n                                /// @src 82:4665:4761  \"if (localNetworkConfig.account != address(0)) {...\"\n                                {\n                                    /// @src 82:4725:4750  \"return localNetworkConfig\"\n                                    var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                                    /// @src 82:4725:4750  \"return localNetworkConfig\"\n                                    leave\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _3 := 64\n                                let memPtr := mload(_3)\n                                finalize_allocation_4414(memPtr)\n                                mstore(memPtr, 18)\n                                mstore(add(memPtr, 32), \"Deploying mocks...\")\n                                /// @src 82:4795:4829  \"console2.log(\\\"Deploying mocks...\\\")\"\n                                fun_log(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ memPtr)\n                                let _4 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    revert(/** @src -1:-1:-1 */ cleaned, cleaned)\n                                }\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                let _5 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                mstore(_5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(224, 0x7fec2a8d))\n                                let _6 := 0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ add(_5, 4), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                let _7 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src -1:-1:-1 */ cleaned, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ _5, /** @src -1:-1:-1 */ cleaned)\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if iszero(_7)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos, /** @src -1:-1:-1 */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos, returndatasize())\n                                }\n                                /// @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\"\n                                if _7\n                                {\n                                    finalize_allocation_2854(_5)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    cleaned := /** @src -1:-1:-1 */ cleaned\n                                }\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                let _8 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                let _9 := datasize(\"EntryPoint_2097\")\n                                let _10 := add(_8, _9)\n                                let _11 := 0xffffffffffffffff\n                                if or(gt(_10, _11), lt(_10, _8))\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                                }\n                                /// @src 82:4913:4929  \"new EntryPoint()\"\n                                datacopy(_8, dataoffset(\"EntryPoint_2097\"), _9)\n                                let expr_51300_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4913:4929  \"new EntryPoint()\" */ _8, sub(_10, _8))\n                                if iszero(expr_51300_address)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_1 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_1, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_1, returndatasize())\n                                }\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                let _12 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                let _13 := datasize(\"ERC20Mock_47815\")\n                                let _14 := add(_12, _13)\n                                if or(gt(_14, /** @src 82:4913:4929  \"new EntryPoint()\" */ _11), /** @src 82:4961:4976  \"new ERC20Mock()\" */ lt(_14, _12))\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(/** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x41)\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ 36)\n                                }\n                                /// @src 82:4961:4976  \"new ERC20Mock()\"\n                                datacopy(_12, dataoffset(\"ERC20Mock_47815\"), _13)\n                                let expr_address := create(/** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4961:4976  \"new ERC20Mock()\" */ _12, sub(_14, _12))\n                                if iszero(expr_address)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_2, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_2, returndatasize())\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if iszero(extcodesize(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4))\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                let _15 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                mstore(_15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ shl(225, 0x3b756e9b))\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                let _16 := call(gas(), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _4, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4839:4879  \"vm.startBroadcast(ANVIL_DEFAULT_ACCOUNT)\" */ 4, /** @src 82:4986:5004  \"vm.stopBroadcast()\" */ _15, /** @src 82:4707:4708  \"0\" */ cleaned)\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if iszero(_16)\n                                {\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    let pos_3 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(_3)\n                                    /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                    returndatacopy(pos_3, /** @src 82:4707:4708  \"0\" */ cleaned, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ returndatasize())\n                                    revert(pos_3, returndatasize())\n                                }\n                                /// @src 82:4986:5004  \"vm.stopBroadcast()\"\n                                if _16\n                                {\n                                    finalize_allocation_2854(_15)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    if cleaned\n                                    {\n                                        revert(/** @src 82:4707:4708  \"0\" */ cleaned, cleaned)\n                                    }\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let memPtr_1 := mload(_3)\n                                finalize_allocation_4414(memPtr_1)\n                                mstore(memPtr_1, /** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15)\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                mstore(add(memPtr_1, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ \"Mocks deployed!\")\n                                /// @src 82:5014:5045  \"console2.log(\\\"Mocks deployed!\\\")\"\n                                fun_log(/** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ memPtr_1)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _17 := and(/** @src 82:5116:5135  \"address(entryPoint)\" */ expr_51300_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                                let _18 := and(/** @src 82:5143:5161  \"address(erc20Mock)\" */ expr_address, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _2)\n                                let memPtr_2 := mload(_3)\n                                finalize_allocation(memPtr_2)\n                                mstore(memPtr_2, _17)\n                                mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 32), _18)\n                                mstore(/** @src 82:5089:5195  \"NetworkConfig({entryPoint: address(entryPoint), usdc: address(erc20Mock), account: ANVIL_DEFAULT_ACCOUNT})\" */ add(memPtr_2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _3), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _6)\n                                let _19 := shl(160, 0xffffffffffffffffffffffff)\n                                sstore(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4687  \"localNetworkConfig\" */ 0x0d), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _17))\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                sstore(14, or(and(sload(14), _19), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _18))\n                                /// @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\"\n                                sstore(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15, /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ or(and(sload(/** @src 82:4669:4695  \"localNetworkConfig.account\" */ 15), /** @src 82:1576:1618  \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\" */ _19), _6))\n                                /// @src 82:5205:5230  \"return localNetworkConfig\"\n                                var_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ read_from_storage_reference_type_struct_NetworkConfig()\n                            }\n                            /// @ast-id 51194 @src 82:2352:2721  \"function getConfigByChainId(uint256 chainId) public returns (NetworkConfig memory) {...\"\n                            function fun_getConfigByChainId(var_chainId) -> var_51164_mpos\n                            {\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                pop(allocate_and_zero_memory_struct_struct_NetworkConfig())\n                                /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                                switch /** @src 82:2449:2474  \"chainId == LOCAL_CHAIN_ID\" */ eq(var_chainId, /** @src 82:1186:1191  \"31337\" */ 0x7a69)\n                                case /** @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\" */ 0 {\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                                    mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                                    /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                    let _1 := sub(shl(160, 1), 1)\n                                    /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                                    switch /** @src 82:2545:2590  \"networkConfigs[chainId].account != address(0)\" */ iszero(iszero(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(sload(/** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ add(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40), /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1)))\n                                    case /** @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\" */ 0 {\n                                        /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                        let _2 := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(0x40)\n                                        /// @src 82:2674:2704  \"HelperConfig__InvalidChainId()\"\n                                        mstore(_2, shl(225, 0x64780a77))\n                                        revert(_2, 4)\n                                    }\n                                    default /// @src 82:2541:2715  \"if (networkConfigs[chainId].account != address(0)) {...\"\n                                    {\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ var_chainId)\n                                        mstore(0x20, /** @src 82:2545:2559  \"networkConfigs\" */ 0x10)\n                                        /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                        let _3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 0x40)\n                                        let memPtr := mload(0x40)\n                                        finalize_allocation(memPtr)\n                                        mstore(memPtr, and(sload(_3), _1))\n                                        mstore(add(memPtr, 0x20), and(sload(add(_3, 1)), _1))\n                                        mstore(add(memPtr, 0x40), and(sload(add(_3, /** @src 82:2545:2576  \"networkConfigs[chainId].account\" */ 2)), /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ _1))\n                                        /// @src 82:2606:2636  \"return networkConfigs[chainId]\"\n                                        var_51164_mpos := memPtr\n                                        leave\n                                    }\n                                }\n                                default /// @src 82:2445:2715  \"if (chainId == LOCAL_CHAIN_ID) {...\"\n                                {\n                                    /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                                    var_51164_mpos := /** @src 82:2497:2524  \"getOrCreateAnvilEthConfig()\" */ fun_getOrCreateAnvilEthConfig()\n                                    /// @src 82:2490:2524  \"return getOrCreateAnvilEthConfig()\"\n                                    leave\n                                }\n                            }\n                            /// @ast-id 20328 @src 30:6114:6235  \"function log(string memory p0) internal pure {...\"\n                            function fun_log(var_p0_mpos)\n                            {\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let expr_mpos := /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(64)\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let _1 := 0x20\n                                let _2 := add(expr_mpos, 0x20)\n                                mstore(_2, shl(226, 0x104c13eb))\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ add(expr_mpos, 36), 0x20)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let length := mload(var_p0_mpos)\n                                mstore(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68), length)\n                                let i := /** @src -1:-1:-1 */ 0\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                for { }\n                                lt(i, length)\n                                {\n                                    i := add(i, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                {\n                                    mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ i), 100), mload(add(add(var_p0_mpos, i), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _1)))\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(add(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ length), 100), /** @src -1:-1:-1 */ 0)\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                let _3 := not(31)\n                                /// @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\"\n                                let _4 := sub(/** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ and(add(length, 31), _3)), /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ expr_mpos)\n                                mstore(expr_mpos, add(_4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 68))\n                                let newFreePtr := add(expr_mpos, and(add(/** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ _4, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ 131), _3))\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                                {\n                                    mstore(/** @src -1:-1:-1 */ 0, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ shl(224, 0x4e487b71))\n                                    mstore(4, 0x41)\n                                    revert(/** @src -1:-1:-1 */ 0, /** @src 30:6185:6227  \"abi.encodeWithSignature(\\\"log(string)\\\", p0)\" */ 36)\n                                }\n                                /// @src 82:272:5239  \"contract HelperConfig is Script {...\"\n                                mstore(64, newFreePtr)\n                                /// @src 30:762:921  \"assembly {...\"\n                                pop(staticcall(gas(), /** @src 30:131:173  \"0x000000000000000000636F6e736F6c652e6c6f67\" */ 0x636f6e736f6c652e6c6f67, /** @src 30:762:921  \"assembly {...\" */ _2, /** @src 82:272:5239  \"contract HelperConfig is Script {...\" */ mload(/** @src 30:645:659  \"payload.length\" */ expr_mpos), /** @src -1:-1:-1 */ 0, 0))\n                            }\n                        }\n                        /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 9:\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\", 10:\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\", 12:\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 78:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\"\n                        object \"EntryPoint_2097\" {\n                            code {\n                                {\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _1 := memoryguard(0xa0)\n                                    mstore(64, _1)\n                                    if callvalue() { revert(0, 0) }\n                                    /// @src 73:1713:1714  \"1\"\n                                    sstore(/** @src 73:1917:1938  \"_status = NOT_ENTERED\" */ 0x02, /** @src 73:1713:1714  \"1\" */ 0x01)\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    let _2 := datasize(\"SenderCreator_2414\")\n                                    let _3 := add(_1, _2)\n                                    if or(gt(_3, sub(shl(64, 1), 1)), lt(_3, _1))\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                    }\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    datacopy(_1, dataoffset(\"SenderCreator_2414\"), _2)\n                                    let expr_address := create(/** @src -1:-1:-1 */ 0, /** @src 0:986:1005  \"new SenderCreator()\" */ _1, sub(_3, _1))\n                                    if iszero(expr_address)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let pos := mload(64)\n                                        returndatacopy(pos, /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                        revert(pos, returndatasize())\n                                    }\n                                    /// @src 0:986:1005  \"new SenderCreator()\"\n                                    mstore(128, expr_address)\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    let _4 := mload(64)\n                                    let _5 := datasize(\"EntryPoint_2097_deployed\")\n                                    codecopy(_4, dataoffset(\"EntryPoint_2097_deployed\"), _5)\n                                    setimmutable(_4, \"35\", mload(/** @src 0:986:1005  \"new SenderCreator()\" */ 128))\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    return(_4, _5)\n                                }\n                            }\n                            /// @use-src 0:\"lib/account-abstraction/contracts/core/EntryPoint.sol\", 1:\"lib/account-abstraction/contracts/core/Helpers.sol\", 2:\"lib/account-abstraction/contracts/core/NonceManager.sol\", 4:\"lib/account-abstraction/contracts/core/StakeManager.sol\", 5:\"lib/account-abstraction/contracts/core/UserOperationLib.sol\", 14:\"lib/account-abstraction/contracts/utils/Exec.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\", 77:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\"\n                            object \"EntryPoint_2097_deployed\" {\n                                code {\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(64, memoryguard(0x80))\n                                        if iszero(lt(calldatasize(), 4))\n                                        {\n                                            switch shr(224, calldataload(0))\n                                            case 0x0042dc53 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 512) { revert(0, 0) }\n                                                let offset := calldataload(4)\n                                                let _1 := 0xffffffffffffffff\n                                                if gt(offset, _1) { revert(0, 0) }\n                                                if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                                                let array := abi_decode_available_length_bytes(add(offset, 36), calldataload(add(4, offset)), calldatasize())\n                                                let _2 := add(calldatasize(), not(35))\n                                                if slt(_2, 0x01c0) { revert(0, 0) }\n                                                let memPtr := mload(64)\n                                                finalize_allocation_26259(memPtr)\n                                                if slt(_2, 0x0140) { revert(0, 0) }\n                                                let memPtr_1 := mload(64)\n                                                finalize_allocation_26260(memPtr_1)\n                                                let value := calldataload(36)\n                                                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                                mstore(memPtr_1, value)\n                                                let _3 := 0x20\n                                                mstore(add(memPtr_1, _3), calldataload(68))\n                                                mstore(add(memPtr_1, 64), calldataload(100))\n                                                mstore(add(memPtr_1, 96), calldataload(132))\n                                                mstore(add(memPtr_1, 128), calldataload(164))\n                                                mstore(add(memPtr_1, 0xa0), calldataload(196))\n                                                mstore(add(memPtr_1, 192), calldataload(228))\n                                                let value_1 := calldataload(260)\n                                                if iszero(eq(value_1, and(value_1, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                                mstore(add(memPtr_1, 224), value_1)\n                                                mstore(add(memPtr_1, 256), calldataload(292))\n                                                mstore(add(memPtr_1, 288), calldataload(324))\n                                                mstore(memPtr, memPtr_1)\n                                                mstore(add(memPtr, _3), calldataload(356))\n                                                mstore(add(memPtr, 64), calldataload(388))\n                                                mstore(add(memPtr, 96), calldataload(420))\n                                                mstore(add(memPtr, 128), calldataload(452))\n                                                let offset_1 := calldataload(484)\n                                                if gt(offset_1, _1) { revert(0, 0) }\n                                                let value2, value3 := abi_decode_bytes_calldata(add(4, offset_1), calldatasize())\n                                                /// @src 0:11732:11741  \"gasleft()\"\n                                                let expr := gas()\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(/** @src 0:11759:11786  \"msg.sender == address(this)\" */ eq(/** @src 0:11759:11769  \"msg.sender\" */ caller(), /** @src 0:11781:11785  \"this\" */ address()))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_2 := mload(64)\n                                                    mstore(memPtr_2, shl(229, 4594637))\n                                                    mstore(add(memPtr_2, 4), _3)\n                                                    mstore(add(memPtr_2, 36), 23)\n                                                    mstore(add(memPtr_2, 68), \"AA92 internal call only\")\n                                                    revert(memPtr_2, 100)\n                                                }\n                                                /// @src 0:11854:11868  \"opInfo.mUserOp\"\n                                                let _mpos := mload(memPtr)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _4 := mload(/** @src 0:11902:11922  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                                let r := shr(6, mul(/** @src 0:12058:12067  \"gasleft()\" */ gas(), /** @src 0:12070:12072  \"63\" */ 0x3f))\n                                                /// @src 0:12037:12368  \"if (...\"\n                                                if /** @src 0:12058:12195  \"gasleft() * 63 / 64 <...\" */ lt(r, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(add(_4, mload(/** @src 0:12127:12158  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))), /** @src 0:1297:1302  \"10000\" */ 0x2710))\n                                                /// @src 0:12037:12368  \"if (...\"\n                                                {\n                                                    /// @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                                    revert(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, _3)\n                                                }\n                                                /// @src 0:12388:12450  \"IPaymaster.PostOpMode mode = IPaymaster.PostOpMode.opSucceeded\"\n                                                let var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:12464:12479  \"callData.length\"\n                                                let expr_1 := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12464:12479  \"callData.length\" */ array)\n                                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                                if /** @src 0:12464:12483  \"callData.length > 0\" */ iszero(iszero(expr_1))\n                                                /// @src 0:12460:13044  \"if (callData.length > 0) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12524:12538  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                                    if /** @src 0:12584:12592  \"!success\" */ iszero(/** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ call(_4, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ add(array, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src 14:378:496  \"assembly (\\\"memory-safe\\\") {...\" */ expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0))\n                                                    /// @src 0:12580:13034  \"if (!success) {...\"\n                                                    {\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$len := returndatasize()\n                                                        /// @src 0:1543:1547  \"2048\"\n                                                        let _5 := 0x0800\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _5)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        {\n                                                            usr$len := /** @src 0:1543:1547  \"2048\" */ _5\n                                                        }\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        let usr$ptr := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                        /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(usr$ptr, usr$len)\n                                                        returndatacopy(add(usr$ptr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                        if /** @src 0:12697:12714  \"result.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12697:12710  \"result.length\" */ usr$ptr)))\n                                                        /// @src 0:12693:12963  \"if (result.length > 0) {...\"\n                                                        {\n                                                            /// @src 0:1543:1547  \"2048\"\n                                                            let _6 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:12837:12851  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                            let _7 := mload(/** @src 0:12877:12890  \"mUserOp.nonce\" */ add(_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                            let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            mstore(_8, _7)\n                                                            /// @src 0:1543:1547  \"2048\"\n                                                            mstore(add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), 64)\n                                                            /// @src 0:12743:12944  \"UserOperationRevertReason(...\"\n                                                            log3(_8, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)), /** @src 0:12743:12944  \"UserOperationRevertReason(...\" */ _8), 0x1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201, _6, cleaned_1)\n                                                        }\n                                                        /// @src 0:12980:13019  \"mode = IPaymaster.PostOpMode.opReverted\"\n                                                        var_mode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1\n                                                    }\n                                                }\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let diff := sub(expr, /** @src 0:13107:13116  \"gasleft()\" */ gas())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _9 := add(diff, mload(add(memPtr, 128)))\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _10 := abi_decode_available_length_bytes(/** @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\" */ value2, value3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldatasize())\n                                                /// @src 0:13155:13203  \"_postExecution(mode, opInfo, context, actualGas)\"\n                                                let var_actualGas := _9\n                                                let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26799:26808  \"gasleft()\"\n                                                let expr_2 := gas()\n                                                /// @src 0:26842:26863  \"address refundAddress\"\n                                                let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26842:26863  \"address refundAddress\"\n                                                let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                                let _mpos_1 := mload(memPtr)\n                                                /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                                let expr_3 := fun_getUserOpGasPrice(_mpos_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                                /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                                case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                    /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                                    var_refundAddress := cleaned_2\n                                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                    if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _10)))\n                                                    /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                    {\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if iszero(lt(var_mode, 3))\n                                                        {\n                                                            mstore(0, shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(0, 36)\n                                                        }\n                                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                        if /** @src 0:27313:27357  \"mode != IPaymaster.PostOpMode.postOpReverted\" */ iszero(eq(var_mode, /** @src 0:27321:27357  \"IPaymaster.PostOpMode.postOpReverted\" */ 2))\n                                                        /// @src 0:27309:27853  \"if (mode != IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            let _11 := mload(/** @src 0:27452:27483  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0))\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            if iszero(extcodesize(cleaned_2))\n                                                            {\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                revert(0, 0)\n                                                            }\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            let _12 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            mstore(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x7c627b21))\n                                                            mstore(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ add(_12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_mode)\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 128)\n                                                            let tail := abi_encode_bytes(_10, add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132))\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), mul(/** @src 0:27267:27287  \"actualGas * gasPrice\" */ _9, expr_3))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(add(/** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), expr_3)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            let trySuccessCondition := call(_11, cleaned_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\" */ _12, sub(tail, _12), _12, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                            /// @src 0:27389:27549  \"IPaymaster(paymaster).postOp{...\"\n                                                            if trySuccessCondition\n                                                            {\n                                                                finalize_allocation_26283(_12)\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                var_refundAddress_1 := 0\n                                                            }\n                                                            /// @src 0:27385:27831  \"try IPaymaster(paymaster).postOp{...\"\n                                                            switch iszero(trySuccessCondition)\n                                                            case 0 { }\n                                                            default {\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                let usr$len_1 := returndatasize()\n                                                                /// @src 0:1543:1547  \"2048\"\n                                                                let _13 := 0x0800\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                {\n                                                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _13\n                                                                }\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                let usr$ptr_1 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                                mstore(usr$ptr_1, usr$len_1)\n                                                                returndatacopy(add(usr$ptr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), /** @src -1:-1:-1 */ var_refundAddress_1, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                mstore(_14, shl(226, 0x2b5e552f))\n                                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                                mstore(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ add(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _3)\n                                                                /// @src 0:27782:27804  \"PostOpReverted(reason)\"\n                                                                revert(_14, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:27782:27804  \"PostOpReverted(reason)\" */ _14))\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                {\n                                                    /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                                    var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                }\n                                                /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                                var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(_9, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _15 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 96))\n                                                let sum := add(_15, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xa0)))\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let diff_1 := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(add(memPtr, 128)))\n                                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff_1)\n                                                /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                {\n                                                    /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff_1), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                                }\n                                                /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                                var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _16 := mload(add(memPtr, 64))\n                                                /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_16, var_actualGasCost)\n                                                case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                    /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                                    pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _16, var_actualGasCost)))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if iszero(lt(var_mode, 3))\n                                                    {\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                        mstore(4, 0x21)\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                    }\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _17 := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr, _3))\n                                                    /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                                    let _mpos_2 := mload(memPtr)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos_2), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 224)), sub(shl(160, 1), 1))\n                                                    let _18 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                                    let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                    mstore(_19, _18)\n                                                    mstore(add(_19, _3), /** @src 0:29364:29405  \"mode == IPaymaster.PostOpMode.opSucceeded\" */ iszero(var_mode))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(add(_19, 64), var_actualGasCost)\n                                                    mstore(add(_19, 96), var_actualGas)\n                                                    /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                                    log4(_19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _17, cleaned_3, cleaned_4)\n                                                }\n                                                default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if iszero(lt(var_mode, 3))\n                                                    {\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                        mstore(4, 0x21)\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                    }\n                                                    /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                    switch /** @src 0:28761:28805  \"mode == IPaymaster.PostOpMode.postOpReverted\" */ eq(var_mode, /** @src 0:28769:28805  \"IPaymaster.PostOpMode.postOpReverted\" */ 2)\n                                                    case /** @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\" */ 0 {\n                                                        /// @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\"\n                                                        mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                        revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                                    }\n                                                    default /// @src 0:28757:29195  \"if (mode == IPaymaster.PostOpMode.postOpReverted) {...\"\n                                                    {\n                                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                        var_actualGasCost := _16\n                                                        /// @src 0:28892:28898  \"opInfo\"\n                                                        fun_emitPrefundTooLow(memPtr)\n                                                        /// @src 0:28974:28983  \"actualGas\"\n                                                        fun_emitUserOperationEvent(memPtr, _16, var_actualGas)\n                                                    }\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos := mload(64)\n                                                mstore(memPos, var_actualGasCost)\n                                                return(memPos, _3)\n                                            }\n                                            case 0x01ffc9a7 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value_2 := calldataload(4)\n                                                let _20 := and(value_2, shl(224, 0xffffffff))\n                                                if iszero(eq(value_2, _20)) { revert(0, 0) }\n                                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_4 := /** @src 0:1860:1974  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId)\" */ eq(_20, /** @src 0:1876:1973  \"type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId\" */ shl(225, 0x307e35b7))\n                                                /// @src 0:1860:2034  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                if iszero(expr_4)\n                                                {\n                                                    expr_4 := /** @src 0:1990:2034  \"interfaceId == type(IEntryPoint).interfaceId\" */ eq(_20, /** @src 0:1876:1905  \"type(IEntryPoint).interfaceId\" */ shl(227, 0x122a0e9b))\n                                                }\n                                                /// @src 0:1860:2096  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_5 := expr_4\n                                                if iszero(expr_4)\n                                                {\n                                                    expr_5 := /** @src 0:2050:2096  \"interfaceId == type(IStakeManager).interfaceId\" */ eq(_20, /** @src 0:1908:1939  \"type(IStakeManager).interfaceId\" */ shl(224, 0xcf28ef97))\n                                                }\n                                                /// @src 0:1860:2158  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_6 := expr_5\n                                                if iszero(expr_5)\n                                                {\n                                                    expr_6 := /** @src 0:2112:2158  \"interfaceId == type(INonceManager).interfaceId\" */ eq(_20, /** @src 0:1942:1973  \"type(INonceManager).interfaceId\" */ shl(224, 0x3e84f021))\n                                                }\n                                                /// @src 0:1860:2210  \"interfaceId == (type(IEntryPoint).interfaceId ^ type(IStakeManager).interfaceId ^ type(INonceManager).interfaceId) ||...\"\n                                                let expr_7 := expr_6\n                                                if iszero(expr_6)\n                                                {\n                                                    expr_7 := /** @src 77:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_20, /** @src 77:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                                }\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos_1 := mload(64)\n                                                mstore(memPos_1, iszero(iszero(expr_7)))\n                                                return(memPos_1, 32)\n                                            }\n                                            case 0x0396cb60 {\n                                                let _21 := 32\n                                                if slt(add(calldatasize(), not(3)), _21) { revert(0, 0) }\n                                                let value_3 := calldataload(4)\n                                                let _22 := 0xffffffff\n                                                let _23 := and(value_3, _22)\n                                                if iszero(eq(value_3, _23)) { revert(0, 0) }\n                                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_21, 0)\n                                                let dataSlot := keccak256(0, 64)\n                                                if /** @src 4:2457:2476  \"unstakeDelaySec > 0\" */ iszero(_23)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_3 := mload(64)\n                                                    mstore(memPtr_3, shl(229, 4594637))\n                                                    mstore(add(memPtr_3, 4), _21)\n                                                    mstore(add(memPtr_3, 36), 26)\n                                                    mstore(add(memPtr_3, 68), \"must specify unstake delay\")\n                                                    revert(memPtr_3, 100)\n                                                }\n                                                let _24 := sload(/** @src 4:2557:2577  \"info.unstakeDelaySec\" */ add(dataSlot, 1))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:2538:2577  \"unstakeDelaySec >= info.unstakeDelaySec\" */ lt(_23, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(120, _24), _22))\n                                                {\n                                                    let memPtr_4 := mload(64)\n                                                    mstore(memPtr_4, shl(229, 4594637))\n                                                    mstore(add(memPtr_4, 4), _21)\n                                                    mstore(add(memPtr_4, 36), 28)\n                                                    mstore(add(memPtr_4, 68), \"cannot decrease unstake time\")\n                                                    revert(memPtr_4, 100)\n                                                }\n                                                let _25 := 0xffffffffffffffffffffffffffff\n                                                /// @src 4:2657:2679  \"info.stake + msg.value\"\n                                                let expr_8 := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(8, _24), _25), /** @src 4:2670:2679  \"msg.value\" */ callvalue())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:2697:2706  \"stake > 0\" */ iszero(expr_8)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_5 := mload(64)\n                                                    mstore(memPtr_5, shl(229, 4594637))\n                                                    mstore(add(memPtr_5, 4), _21)\n                                                    mstore(add(memPtr_5, 36), 18)\n                                                    mstore(add(memPtr_5, 68), \"no stake specified\")\n                                                    revert(memPtr_5, 100)\n                                                }\n                                                if /** @src 4:2747:2773  \"stake <= type(uint112).max\" */ gt(expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25)\n                                                {\n                                                    let memPtr_6 := mload(64)\n                                                    mstore(memPtr_6, shl(229, 4594637))\n                                                    mstore(add(memPtr_6, 4), _21)\n                                                    mstore(add(memPtr_6, 36), 14)\n                                                    mstore(add(memPtr_6, 68), \"stake overflow\")\n                                                    revert(memPtr_6, 100)\n                                                }\n                                                let _26 := sload(/** @src 4:2850:2862  \"info.deposit\" */ dataSlot)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPtr_7 := mload(64)\n                                                finalize_allocation_26259(memPtr_7)\n                                                mstore(memPtr_7, _26)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _27 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21)\n                                                mstore(_27, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _28 := add(memPtr_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64)\n                                                mstore(_28, and(/** @src 4:2894:2908  \"uint112(stake)\" */ expr_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _25))\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _29 := add(memPtr_7, 96)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_29, _23)\n                                                /// @src 4:2825:2962  \"DepositInfo(...\"\n                                                let _30 := add(memPtr_7, 128)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_30, 0)\n                                                mstore(0, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_21, 0)\n                                                let dataSlot_1 := keccak256(0, 64)\n                                                sstore(dataSlot_1, mload(memPtr_7))\n                                                let memberSlot := add(dataSlot_1, /** @src 4:2557:2577  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _31 := iszero(iszero(mload(_27)))\n                                                let _32 := sload(memberSlot)\n                                                let _33 := and(shl(8, mload(_28)), 0xffffffffffffffffffffffffffff00)\n                                                sstore(memberSlot, or(or(_33, or(and(_32, shl(152, 0xffffffffffffffffffffffffff)), and(_31, 255))), and(shl(120, mload(_29)), shl(120, 0xffffffff))))\n                                                update_storage_value_offsett_uint48_to_uint48(memberSlot, and(mload(_30), 0xffffffffffff))\n                                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                                let _34 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                mstore(_34, expr_8)\n                                                mstore(add(_34, _21), _23)\n                                                /// @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\"\n                                                log2(_34, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64, /** @src 4:2977:3024  \"StakeLocked(msg.sender, stake, unstakeDelaySec)\" */ 0xa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01, /** @src 4:2428:2438  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0x0bd28e3b {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value_4 := calldataload(4)\n                                                let _35 := and(value_4, sub(shl(192, 1), 1))\n                                                if iszero(eq(value_4, _35)) { revert(0, 0) }\n                                                mstore(0, /** @src 2:913:923  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(32, /** @src 2:893:912  \"nonceSequenceNumber\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _36 := keccak256(0, 64)\n                                                mstore(0, _35)\n                                                mstore(32, _36)\n                                                let dataSlot_2 := keccak256(0, 64)\n                                                sstore(dataSlot_2, /** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ increment_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 2:893:931  \"nonceSequenceNumber[msg.sender][key]++\" */ dataSlot_2)))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0x1b2e01b8 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0 := abi_decode_address()\n                                                let value1 := abi_decode_uint192()\n                                                mstore(0, and(value0, sub(shl(160, 1), 1)))\n                                                mstore(32, /** @src 2:279:353  \"mapping(address => mapping(uint192 => uint256)) public nonceSequenceNumber\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _37 := keccak256(0, 64)\n                                                mstore(0, and(value1, sub(shl(192, 1), 1)))\n                                                mstore(32, _37)\n                                                let _38 := sload(keccak256(0, 64))\n                                                let memPos_2 := mload(64)\n                                                mstore(memPos_2, _38)\n                                                return(memPos_2, 32)\n                                            }\n                                            case 0x205c2878 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_1 := abi_decode_address()\n                                                let value_5 := calldataload(36)\n                                                mstore(0, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(32, 0)\n                                                let dataSlot_3 := keccak256(0, 64)\n                                                let _39 := sload(/** @src 4:4852:4864  \"info.deposit\" */ dataSlot_3)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if /** @src 4:4834:4864  \"withdrawAmount <= info.deposit\" */ gt(value_5, _39)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_8 := mload(64)\n                                                    mstore(memPtr_8, shl(229, 4594637))\n                                                    mstore(add(memPtr_8, 4), 32)\n                                                    mstore(add(memPtr_8, 36), 25)\n                                                    mstore(add(memPtr_8, 68), \"Withdraw amount too large\")\n                                                    revert(memPtr_8, 100)\n                                                }\n                                                sstore(dataSlot_3, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ checked_sub_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _39, /** @src 4:4919:4948  \"info.deposit - withdrawAmount\" */ value_5))\n                                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                                let _40 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 4:4963:5017  \"Withdrawn(msg.sender, withdrawAddress, withdrawAmount)\"\n                                                log2(_40, sub(abi_encode_address_payable_uint256(_40, value0_1, value_5), _40), 0xd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb, /** @src 4:4805:4815  \"msg.sender\" */ caller())\n                                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                                let expr_component := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:5045:5065  \"withdrawAddress.call\" */ value0_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\" */ value_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                                /// @src 4:5045:5092  \"withdrawAddress.call{value: withdrawAmount}(\\\"\\\")\"\n                                                pop(extract_returndata())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(expr_component)\n                                                {\n                                                    let memPtr_9 := mload(64)\n                                                    mstore(memPtr_9, shl(229, 4594637))\n                                                    mstore(add(memPtr_9, 4), 32)\n                                                    mstore(add(memPtr_9, 36), 18)\n                                                    mstore(add(memPtr_9, 68), \"failed to withdraw\")\n                                                    revert(memPtr_9, 100)\n                                                }\n                                                return(0, 0)\n                                            }\n                                            case 0x22cdde4c {\n                                                if callvalue() { revert(0, 0) }\n                                                let _41 := not(3)\n                                                if slt(add(calldatasize(), _41), 32) { revert(0, 0) }\n                                                let offset_2 := calldataload(4)\n                                                if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n                                                if slt(add(sub(calldatasize(), offset_2), _41), 288) { revert(0, 0) }\n                                                let ret := fun_getUserOpHash(add(4, offset_2))\n                                                let memPos_3 := mload(64)\n                                                mstore(memPos_3, ret)\n                                                return(memPos_3, 32)\n                                            }\n                                            case 0x35567e1a {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_2 := abi_decode_address()\n                                                let value1_1 := abi_decode_uint192()\n                                                mstore(0, and(value0_2, sub(shl(160, 1), 1)))\n                                                mstore(32, /** @src 2:507:526  \"nonceSequenceNumber\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _42 := keccak256(0, 64)\n                                                mstore(0, and(value1_1, sub(shl(192, 1), 1)))\n                                                mstore(32, _42)\n                                                let _43 := sload(keccak256(0, 64))\n                                                let memPos_4 := mload(64)\n                                                mstore(memPos_4, /** @src 2:507:562  \"nonceSequenceNumber[sender][key] | (uint256(key) << 64)\" */ or(_43, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shl(64, /** @src 2:543:555  \"uint256(key)\" */ value1_1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(0xffffffffffffffff))))\n                                                return(memPos_4, 32)\n                                            }\n                                            case 0x5287ce12 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let value0_3 := abi_decode_address()\n                                                let memPtr_10 := mload(64)\n                                                finalize_allocation_26259(memPtr_10)\n                                                mstore(memPtr_10, 0)\n                                                mstore(add(memPtr_10, 32), 0)\n                                                mstore(add(memPtr_10, 64), 0)\n                                                mstore(add(memPtr_10, 96), 0)\n                                                mstore(add(memPtr_10, 128), 0)\n                                                mstore(0, and(value0_3, sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let dataSlot_4 := keccak256(0, 64)\n                                                let memPtr_11 := mload(64)\n                                                finalize_allocation_26259(memPtr_11)\n                                                let _44 := sload(dataSlot_4)\n                                                mstore(memPtr_11, _44)\n                                                let _45 := sload(add(dataSlot_4, 1))\n                                                let _46 := add(memPtr_11, 32)\n                                                mstore(_46, iszero(iszero(and(_45, 0xff))))\n                                                let _47 := 0xffffffffffffffffffffffffffff\n                                                let _48 := add(memPtr_11, 64)\n                                                mstore(_48, and(shr(8, _45), _47))\n                                                let _49 := 0xffffffff\n                                                let _50 := add(memPtr_11, 96)\n                                                mstore(_50, and(shr(120, _45), _49))\n                                                let _51 := 0xffffffffffff\n                                                let _52 := add(memPtr_11, 128)\n                                                mstore(_52, and(shr(152, _45), _51))\n                                                let memPos_5 := mload(64)\n                                                mstore(memPos_5, _44)\n                                                mstore(add(memPos_5, 32), iszero(iszero(mload(_46))))\n                                                mstore(add(memPos_5, 64), and(mload(_48), _47))\n                                                mstore(add(memPos_5, 96), and(mload(_50), _49))\n                                                mstore(add(memPos_5, 128), and(mload(_52), _51))\n                                                return(memPos_5, 160)\n                                            }\n                                            case 0x70a08231 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let _53 := sload(keccak256(0, 64))\n                                                let memPos_6 := mload(64)\n                                                mstore(memPos_6, _53)\n                                                return(memPos_6, 32)\n                                            }\n                                            case 0x765e827f {\n                                                if callvalue() { revert(0, 0) }\n                                                let param, param_1, param_2 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                                /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                                fun_nonReentrantBefore()\n                                                /// @src 0:6980:7004  \"new UserOpInfo[](opslen)\"\n                                                let expr_mpos := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(param_1)\n                                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                                let var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7039:7520  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                for { }\n                                                /** @src 0:7059:7069  \"i < opslen\" */ lt(var_i, param_1)\n                                                /// @src 0:7044:7057  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:7071:7074  \"i++\"\n                                                    var_i := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7071:7074  \"i++\" */ var_i, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                }\n                                                /// @src 0:7071:7074  \"i++\"\n                                                {\n                                                    /// @src 0:7260:7298  \"_validatePrepayment(i, ops[i], opInfo)\"\n                                                    let expr_component_1, expr_component_2 := fun_validatePrepayment(var_i, /** @src 0:7283:7289  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i), /** @src 0:7121:7131  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i)))\n                                                    /// @src 0:21736:21792  \"_getValidationData(...\"\n                                                    let expr_component_3, expr_component_4 := fun_getValidationData(expr_component_1)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _54 := sub(shl(160, 1), 1)\n                                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                    if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                                    /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                    {\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        let _55 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        mstore(_55, shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                        mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                        /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                        revert(_55, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                                    if expr_component_4\n                                                    {\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        let _56 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        mstore(_56, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                        mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                        /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                        revert(_56, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:22320:22385  \"_getValidationData(...\"\n                                                    let expr_component_5, expr_component_6 := fun_getValidationData(expr_component_2)\n                                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                    if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _54)))\n                                                    /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                    {\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        let _57 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        mstore(_57, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                        mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                        /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                        revert(_57, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                    }\n                                                    /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                                    if expr_component_6\n                                                    {\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        let _58 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        mstore(_58, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                        mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                        /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                        revert(_58, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                    }\n                                                }\n                                                /// @src 0:7534:7555  \"uint256 collected = 0\"\n                                                let var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7574:7591  \"BeforeExecution()\"\n                                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:7574:7591  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                                let var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:7606:7726  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                for { }\n                                                /** @src 0:7626:7636  \"i < opslen\" */ lt(var_i_1, param_1)\n                                                /// @src 0:7611:7624  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:7638:7641  \"i++\"\n                                                    var_i_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:7638:7641  \"i++\" */ var_i_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                }\n                                                /// @src 0:7638:7641  \"i++\"\n                                                {\n                                                    /// @src 0:7692:7698  \"ops[i]\"\n                                                    let expr_offset := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(param, param_1, var_i_1)\n                                                    /// @src 0:7661:7711  \"collected += _executeUserOp(i, ops[i], opInfos[i])\"\n                                                    var_collected := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_collected, /** @src 0:7674:7711  \"_executeUserOp(i, ops[i], opInfos[i])\" */ fun_executeUserOp(var_i_1, expr_offset, /** @src 0:7700:7710  \"opInfos[i]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos, var_i_1))))\n                                                }\n                                                /// @src 0:7765:7774  \"collected\"\n                                                fun_compensate(param_2, var_collected)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                                return(0, 0)\n                                            }\n                                            case 0x850aaf62 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                                                let value0_4 := abi_decode_address()\n                                                let offset_3 := calldataload(36)\n                                                if gt(offset_3, 0xffffffffffffffff) { revert(0, 0) }\n                                                let value1_2, value2_1 := abi_decode_bytes_calldata(add(4, offset_3), calldatasize())\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let _59 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                calldatacopy(_59, value1_2, value2_1)\n                                                let _60 := add(_59, value2_1)\n                                                mstore(_60, 0)\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let expr_component_7 := delegatecall(gas(), value0_4, _59, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _60, /** @src 0:31052:31077  \"target.delegatecall(data)\" */ _59), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0)\n                                                /// @src 0:31052:31077  \"target.delegatecall(data)\"\n                                                let expr_component_mpos := extract_returndata()\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                let _61 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                mstore(_61, shl(226, 0x26504155))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ add(_61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), iszero(iszero(expr_component_7)))\n                                                mstore(add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                /// @src 0:31094:31125  \"DelegateAndRevert(success, ret)\"\n                                                revert(_61, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(expr_component_mpos, add(/** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)), /** @src 0:31094:31125  \"DelegateAndRevert(success, ret)\" */ _61))\n                                            }\n                                            case /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x9b249f69 {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                let offset_4 := calldataload(4)\n                                                if gt(offset_4, 0xffffffffffffffff) { revert(0, 0) }\n                                                let value0_5, value1_3 := abi_decode_bytes_calldata(add(4, offset_4), calldatasize())\n                                                let _62 := sub(shl(160, 1), 1)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let _63 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                mstore(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                                mstore(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ add(_63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 32)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let _64 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _62), 0, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(value0_5, value1_3, add(/** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ _63), _63, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32)\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                if iszero(_64)\n                                                {\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let pos := mload(64)\n                                                    returndatacopy(pos, 0, returndatasize())\n                                                    revert(pos, returndatasize())\n                                                }\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                let expr_9 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                if _64\n                                                {\n                                                    let _65 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32\n                                                    /// @src 0:16867:16905  \"senderCreator().createSender(initCode)\"\n                                                    if gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 0:16867:16905  \"senderCreator().createSender(initCode)\" */ returndatasize()) { _65 := returndatasize() }\n                                                    finalize_allocation(_63, _65)\n                                                    expr_9 := abi_decode_address_fromMemory(_63, add(_63, _65))\n                                                }\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                let _66 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                mstore(_66, shl(225, 0x3653dc03))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16922:16949  \"SenderAddressResult(sender)\" */ add(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), and(expr_9, _62))\n                                                /// @src 0:16922:16949  \"SenderAddressResult(sender)\"\n                                                revert(_66, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                            }\n                                            case 0xb760faf9 {\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                fun_depositTo(abi_decode_address())\n                                                return(0, 0)\n                                            }\n                                            case 0xbb9fe6bf {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                                                mstore(0, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(0x20, 0)\n                                                /// @src 4:3277:3297  \"info.unstakeDelaySec\"\n                                                let _67 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3277:3297  \"info.unstakeDelaySec\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _68 := sload(/** @src 4:3277:3297  \"info.unstakeDelaySec\" */ _67)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let value_6 := and(shr(120, _68), 0xffffffff)\n                                                if /** @src 4:3277:3302  \"info.unstakeDelaySec != 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_6)\n                                                {\n                                                    let memPtr_12 := mload(64)\n                                                    mstore(memPtr_12, shl(229, 4594637))\n                                                    mstore(add(memPtr_12, 4), 0x20)\n                                                    mstore(add(memPtr_12, 36), 10)\n                                                    mstore(add(memPtr_12, 68), \"not staked\")\n                                                    revert(memPtr_12, 100)\n                                                }\n                                                if iszero(and(_68, 0xff))\n                                                {\n                                                    let memPtr_13 := mload(64)\n                                                    mstore(memPtr_13, shl(229, 4594637))\n                                                    mstore(add(memPtr_13, 4), 0x20)\n                                                    mstore(add(memPtr_13, 36), 17)\n                                                    mstore(add(memPtr_13, 68), \"already unstaking\")\n                                                    revert(memPtr_13, 100)\n                                                }\n                                                let _69 := 0xffffffffffff\n                                                let sum_1 := add(and(/** @src 4:3407:3422  \"block.timestamp\" */ timestamp(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _69), value_6)\n                                                if gt(sum_1, _69)\n                                                {\n                                                    mstore(0, shl(224, 0x4e487b71))\n                                                    mstore(4, 0x11)\n                                                    revert(0, 0x24)\n                                                }\n                                                /// @src 4:3456:3488  \"info.withdrawTime = withdrawTime\"\n                                                update_storage_value_offsett_uint48_to_uint48(_67, sum_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(_67, and(sload(_67), not(255)))\n                                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                                let _70 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                mstore(_70, and(sum_1, _69))\n                                                /// @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\"\n                                                log2(_70, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20, /** @src 4:3532:3571  \"StakeUnlocked(msg.sender, withdrawTime)\" */ 0xfa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a, /** @src 4:3248:3258  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0xc23a5cea {\n                                                if callvalue() { revert(0, 0) }\n                                                let _71 := 32\n                                                if slt(add(calldatasize(), not(3)), _71) { revert(0, 0) }\n                                                let value0_6 := abi_decode_address()\n                                                mstore(0, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(_71, 0)\n                                                /// @src 4:3934:3944  \"info.stake\"\n                                                let _72 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ keccak256(0, 64), /** @src 4:3934:3944  \"info.stake\" */ 1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _73 := sload(/** @src 4:3934:3944  \"info.stake\" */ _72)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let value_7 := and(shr(8, _73), 0xffffffffffffffffffffffffffff)\n                                                if /** @src 4:3962:3971  \"stake > 0\" */ iszero(value_7)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_14 := mload(64)\n                                                    mstore(memPtr_14, shl(229, 4594637))\n                                                    mstore(add(memPtr_14, 4), _71)\n                                                    mstore(add(memPtr_14, 36), 20)\n                                                    mstore(add(memPtr_14, 68), \"No stake to withdraw\")\n                                                    revert(memPtr_14, 100)\n                                                }\n                                                let value_8 := and(shr(152, _73), 0xffffffffffff)\n                                                if /** @src 4:4014:4035  \"info.withdrawTime > 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8)\n                                                {\n                                                    let memPtr_15 := mload(64)\n                                                    mstore(memPtr_15, shl(229, 4594637))\n                                                    mstore(add(memPtr_15, 4), _71)\n                                                    mstore(add(memPtr_15, 36), 29)\n                                                    mstore(add(memPtr_15, 68), \"must call unlockStake() first\")\n                                                    revert(memPtr_15, 100)\n                                                }\n                                                if /** @src 4:4100:4136  \"info.withdrawTime <= block.timestamp\" */ gt(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ value_8, /** @src 4:4121:4136  \"block.timestamp\" */ timestamp())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                {\n                                                    let memPtr_16 := mload(64)\n                                                    mstore(memPtr_16, shl(229, 4594637))\n                                                    mstore(add(memPtr_16, 4), _71)\n                                                    mstore(add(memPtr_16, 36), 27)\n                                                    mstore(add(memPtr_16, 68), \"Stake withdrawal is not due\")\n                                                    revert(memPtr_16, 100)\n                                                }\n                                                sstore(_72, and(_73, not(sub(shl(200, 1), 256))))\n                                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                                let _74 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                /// @src 4:4293:4343  \"StakeWithdrawn(msg.sender, withdrawAddress, stake)\"\n                                                log2(_74, sub(abi_encode_address_payable_uint256(_74, value0_6, value_7), _74), 0xb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda3, /** @src 4:3897:3907  \"msg.sender\" */ caller())\n                                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                                let expr_component_8 := call(gas(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:4371:4391  \"withdrawAddress.call\" */ value0_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), /** @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\" */ value_7, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, 0, 0)\n                                                /// @src 4:4371:4409  \"withdrawAddress.call{value: stake}(\\\"\\\")\"\n                                                pop(extract_returndata())\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if iszero(expr_component_8)\n                                                {\n                                                    let memPtr_17 := mload(64)\n                                                    mstore(memPtr_17, shl(229, 4594637))\n                                                    mstore(add(memPtr_17, 4), _71)\n                                                    mstore(add(memPtr_17, 36), 24)\n                                                    mstore(add(memPtr_17, 68), \"failed to withdraw stake\")\n                                                    revert(memPtr_17, 100)\n                                                }\n                                                return(0, 0)\n                                            }\n                                            case 0xdbed18e0 {\n                                                if callvalue() { revert(0, 0) }\n                                                let param_3, param_4, param_5 := abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(calldatasize())\n                                                /// @src 73:2322:2425  \"modifier nonReentrant() {...\"\n                                                fun_nonReentrantBefore()\n                                                /// @src 0:8042:8062  \"uint256 totalOps = 0\"\n                                                let var_totalOps := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                                let var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8072:8839  \"for (uint256 i = 0; i < opasLen; i++) {...\"\n                                                for { }\n                                                /** @src 0:8092:8103  \"i < opasLen\" */ lt(var_i_2, param_4)\n                                                /// @src 0:8077:8090  \"uint256 i = 0\"\n                                                {\n                                                    /// @src 0:8105:8108  \"i++\"\n                                                    var_i_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8105:8108  \"i++\" */ var_i_2, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:8105:8108  \"i++\"\n                                                {\n                                                    /// @src 0:8160:8179  \"opsPerAggregator[i]\"\n                                                    let expr_offset_1 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_i_2)\n                                                    /// @src 0:8230:8241  \"opa.userOps\"\n                                                    let expr_offset_2, expr_length := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_1, expr_offset_1)\n                                                    /// @src 0:8280:8294  \"opa.aggregator\"\n                                                    let _75 := 32\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _76 := and(/** @src 0:8280:8294  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_1, _75)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                                    /// @src 0:8429:8430  \"1\"\n                                                    let _77 := 0x01\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    if /** @src 0:8398:8431  \"address(aggregator) != address(1)\" */ eq(_76, /** @src 0:8429:8430  \"1\" */ _77)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    {\n                                                        let memPtr_18 := mload(64)\n                                                        mstore(memPtr_18, shl(229, 4594637))\n                                                        mstore(add(memPtr_18, 4), /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(add(memPtr_18, 36), 23)\n                                                        mstore(add(memPtr_18, 68), \"AA96 invalid aggregator\")\n                                                        revert(memPtr_18, 100)\n                                                    }\n                                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                                    if /** @src 0:8507:8540  \"address(aggregator) != address(0)\" */ iszero(iszero(_76))\n                                                    /// @src 0:8503:8792  \"if (address(aggregator) != address(0)) {...\"\n                                                    {\n                                                        /// @src 0:8660:8673  \"opa.signature\"\n                                                        let expr_offset_3, expr_length_1 := access_calldata_tail_bytes_calldata(expr_offset_1, add(expr_offset_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64))\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        if iszero(extcodesize(_76))\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            revert(0, 0)\n                                                        }\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        let _78 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        mstore(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x2dd81133))\n                                                        let tail_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68)\n                                                        mstore(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ add(_78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), 64)\n                                                        let pos_1 := tail_1\n                                                        mstore(tail_1, expr_length)\n                                                        let _79 := 100\n                                                        pos_1 := add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _79)\n                                                        let tail_2 := add(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(5, expr_length)), _79)\n                                                        let srcPtr := expr_offset_2\n                                                        let i := 0\n                                                        for { }\n                                                        lt(i, expr_length)\n                                                        {\n                                                            i := add(i, /** @src 0:8429:8430  \"1\" */ _77)\n                                                        }\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        {\n                                                            mstore(pos_1, add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(99)))\n                                                            let rel_offset_of_tail := calldataload(srcPtr)\n                                                            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), expr_offset_2), not(286)))) { revert(0, 0) }\n                                                            tail_2 := abi_encode_struct_PackedUserOperation_calldata(add(rel_offset_of_tail, expr_offset_2), tail_2)\n                                                            srcPtr := add(srcPtr, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            pos_1 := add(pos_1, /** @src 0:8280:8294  \"opa.aggregator\" */ _75)\n                                                        }\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        mstore(add(/** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), add(sub(tail_2, /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(3)))\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        let trySuccessCondition_1 := staticcall(gas(), _76, _78, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_3, expr_length_1, tail_2), /** @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\" */ _78), _78, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                        /// @src 0:8625:8674  \"aggregator.validateSignatures(ops, opa.signature)\"\n                                                        if trySuccessCondition_1\n                                                        {\n                                                            finalize_allocation_26283(_78)\n                                                        }\n                                                        /// @src 0:8621:8778  \"try aggregator.validateSignatures(ops, opa.signature) {} catch {...\"\n                                                        switch iszero(trySuccessCondition_1)\n                                                        case 0 { }\n                                                        default {\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            let _80 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            mstore(_80, shl(228, 0x086a9f75))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\" */ add(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), _76)\n                                                            /// @src 0:8713:8759  \"SignatureValidationFailed(address(aggregator))\"\n                                                            revert(_80, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)\n                                                        }\n                                                    }\n                                                    /// @src 0:8806:8828  \"totalOps += ops.length\"\n                                                    var_totalOps := checked_add_uint256(var_totalOps, /** @src 0:8818:8828  \"ops.length\" */ expr_length)\n                                                }\n                                                /// @src 0:8879:8905  \"new UserOpInfo[](totalOps)\"\n                                                let expr_mpos_1 := allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(var_totalOps)\n                                                /// @src 0:8916:8935  \"uint256 opIndex = 0\"\n                                                let var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                                let var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:8945:9776  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                                for { }\n                                                /** @src 0:8965:8976  \"a < opasLen\" */ lt(var_a, param_4)\n                                                /// @src 0:8950:8963  \"uint256 a = 0\"\n                                                {\n                                                    /// @src 0:8978:8981  \"a++\"\n                                                    var_a := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:8978:8981  \"a++\" */ var_a, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:8978:8981  \"a++\"\n                                                {\n                                                    /// @src 0:9033:9052  \"opsPerAggregator[a]\"\n                                                    let expr_offset_4 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a)\n                                                    /// @src 0:9103:9114  \"opa.userOps\"\n                                                    let expr_offset_5, expr_length_2 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_4, expr_offset_4)\n                                                    /// @src 0:9153:9167  \"opa.aggregator\"\n                                                    let expr_address := read_from_calldatat_contract_IAggregator(add(expr_offset_4, /** @src 0:8280:8294  \"opa.aggregator\" */ 32))\n                                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                                    let var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    let _81 := sub(shl(160, 1), 1)\n                                                    let _82 := and(/** @src 0:9687:9706  \"address(aggregator)\" */ expr_address, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)\n                                                    /// @src 0:9223:9766  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                    for { }\n                                                    /** @src 0:9243:9253  \"i < opslen\" */ lt(var_i_3, expr_length_2)\n                                                    /// @src 0:9228:9241  \"uint256 i = 0\"\n                                                    {\n                                                        /// @src 0:9255:9258  \"i++\"\n                                                        var_i_3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9255:9258  \"i++\" */ var_i_3, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                    }\n                                                    /// @src 0:9255:9258  \"i++\"\n                                                    {\n                                                        /// @src 0:9457:9501  \"_validatePrepayment(opIndex, ops[i], opInfo)\"\n                                                        let expr_component_9, expr_component_10 := fun_validatePrepayment(var_opIndex, /** @src 0:9486:9492  \"ops[i]\" */ calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_5, expr_length_2, var_i_3), /** @src 0:9305:9321  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex)))\n                                                        /// @src 0:21736:21792  \"_getValidationData(...\"\n                                                        let expr_component_11, expr_component_12 := fun_getValidationData(expr_component_9)\n                                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                        if /** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ iszero(eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _82, and(/** @src 0:21806:21838  \"expectedAggregator != aggregator\" */ expr_component_11, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                        /// @src 0:21802:21913  \"if (expectedAggregator != aggregator) {...\"\n                                                        {\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            let _83 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            mstore(_83, shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ add(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                            mstore(add(/** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ _83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA24 signature error\")\n                                                            /// @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\"\n                                                            revert(_83, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:21922:22018  \"if (outOfTimeRange) {...\"\n                                                        if expr_component_12\n                                                        {\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            let _84 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            mstore(_84, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ add(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                            mstore(add(/** @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\" */ _84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA22 expired or not due\")\n                                                            /// @src 0:21963:22007  \"FailedOp(opIndex, \\\"AA22 expired or not due\\\")\"\n                                                            revert(_84, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:22320:22385  \"_getValidationData(...\"\n                                                        let expr_component_13, expr_component_14 := fun_getValidationData(expr_component_10)\n                                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                        if /** @src 0:22399:22425  \"pmAggregator != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:22399:22425  \"pmAggregator != address(0)\" */ expr_component_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _81)))\n                                                        /// @src 0:22395:22500  \"if (pmAggregator != address(0)) {...\"\n                                                        {\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            let _85 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            mstore(_85, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ add(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 20)\n                                                            mstore(add(/** @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\" */ _85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA34 signature error\")\n                                                            /// @src 0:22448:22489  \"FailedOp(opIndex, \\\"AA34 signature error\\\")\"\n                                                            revert(_85, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                                        }\n                                                        /// @src 0:22509:22615  \"if (outOfTimeRange) {...\"\n                                                        if expr_component_14\n                                                        {\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            let _86 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            mstore(_86, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            mstore(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ add(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 4), var_i_3)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), 64)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 33)\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA32 paymaster expired or not du\")\n                                                            mstore(add(/** @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\" */ _86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"e\")\n                                                            /// @src 0:22550:22604  \"FailedOp(opIndex, \\\"AA32 paymaster expired or not due\\\")\"\n                                                            revert(_86, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                                        }\n                                                        /// @src 0:9742:9751  \"opIndex++\"\n                                                        var_opIndex := increment_uint256(var_opIndex)\n                                                    }\n                                                }\n                                                /// @src 0:9791:9808  \"BeforeExecution()\"\n                                                log1(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9791:9808  \"BeforeExecution()\" */ 0xbb47ee3e183a558b1a2ff0874b079f3fc5478b7454eacf2bfc5af2ff5878f972)\n                                                /// @src 0:9850:9861  \"opIndex = 0\"\n                                                var_opIndex := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9819:9840  \"uint256 collected = 0\"\n                                                let var_collected_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                                let var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                /// @src 0:9871:10335  \"for (uint256 a = 0; a < opasLen; a++) {...\"\n                                                for { }\n                                                /** @src 0:9891:9902  \"a < opasLen\" */ lt(var_a_1, param_4)\n                                                /// @src 0:9876:9889  \"uint256 a = 0\"\n                                                {\n                                                    /// @src 0:9904:9907  \"a++\"\n                                                    var_a_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:9904:9907  \"a++\" */ var_a_1, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                }\n                                                /// @src 0:9904:9907  \"a++\"\n                                                {\n                                                    /// @src 0:9959:9978  \"opsPerAggregator[a]\"\n                                                    let expr_offset_6 := calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(param_3, param_4, var_a_1)\n                                                    /// @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\"\n                                                    log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:10032:10046  \"opa.aggregator\" */ read_from_calldatat_contract_IAggregator(add(expr_offset_6, /** @src 0:8280:8294  \"opa.aggregator\" */ 32)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                                    /// @src 0:10099:10110  \"opa.userOps\"\n                                                    let expr_offset_7, expr_length_3 := access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_6, expr_offset_6)\n                                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                                    let var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    /// @src 0:10166:10325  \"for (uint256 i = 0; i < opslen; i++) {...\"\n                                                    for { }\n                                                    /** @src 0:10186:10196  \"i < opslen\" */ lt(var_i_4, expr_length_3)\n                                                    /// @src 0:10171:10184  \"uint256 i = 0\"\n                                                    {\n                                                        /// @src 0:10198:10201  \"i++\"\n                                                        var_i_4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:10198:10201  \"i++\" */ var_i_4, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                    }\n                                                    /// @src 0:10198:10201  \"i++\"\n                                                    {\n                                                        /// @src 0:10258:10264  \"ops[i]\"\n                                                        let expr_offset_8 := calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(expr_offset_7, expr_length_3, var_i_4)\n                                                        /// @src 0:10221:10283  \"collected += _executeUserOp(opIndex, ops[i], opInfos[opIndex])\"\n                                                        var_collected_1 := checked_add_uint256(var_collected_1, /** @src 0:10234:10283  \"_executeUserOp(opIndex, ops[i], opInfos[opIndex])\" */ fun_executeUserOp(var_opIndex, expr_offset_8, /** @src 0:10266:10282  \"opInfos[opIndex]\" */ mload(memory_array_index_access_struct_UserOpInfo_dyn(expr_mpos_1, var_opIndex))))\n                                                        /// @src 0:10301:10310  \"opIndex++\"\n                                                        var_opIndex := increment_uint256(var_opIndex)\n                                                    }\n                                                }\n                                                /// @src 0:10349:10387  \"SignatureAggregatorChanged(address(0))\"\n                                                log2(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, 0, /** @src 0:9997:10048  \"SignatureAggregatorChanged(address(opa.aggregator))\" */ 0x575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                                /// @src 0:10423:10432  \"collected\"\n                                                fun_compensate(param_5, var_collected_1)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                sstore(/** @src 73:2924:2945  \"_status = NOT_ENTERED\" */ 0x02, /** @src 0:8429:8430  \"1\" */ 0x01)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                return(0, 0)\n                                            }\n                                            case 0xfc7e286d {\n                                                if callvalue() { revert(0, 0) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                                                mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                                                mstore(32, 0)\n                                                let dataSlot_5 := keccak256(0, 64)\n                                                let _87 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ dataSlot_5)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let _88 := sload(/** @src 4:507:554  \"mapping(address => DepositInfo) public deposits\" */ add(dataSlot_5, 1))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let memPos_7 := mload(64)\n                                                mstore(memPos_7, _87)\n                                                mstore(add(memPos_7, 32), iszero(iszero(and(_88, 0xff))))\n                                                mstore(add(memPos_7, 64), and(shr(8, _88), 0xffffffffffffffffffffffffffff))\n                                                mstore(add(memPos_7, 96), and(shr(120, _88), 0xffffffff))\n                                                mstore(add(memPos_7, 128), and(shr(152, _88), 0xffffffffffff))\n                                                return(memPos_7, 160)\n                                            }\n                                        }\n                                        if iszero(calldatasize())\n                                        {\n                                            /// @src 4:1326:1336  \"msg.sender\"\n                                            fun_depositTo(caller())\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            stop()\n                                        }\n                                        revert(0, 0)\n                                    }\n                                    function finalize_allocation_26259(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 0xa0)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation_26260(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 0x0140)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation_26283(memPtr)\n                                    {\n                                        if gt(memPtr, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, memPtr)\n                                    }\n                                    function finalize_allocation_26350(memPtr)\n                                    {\n                                        let newFreePtr := add(memPtr, 96)\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function finalize_allocation(memPtr, size)\n                                    {\n                                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(64, newFreePtr)\n                                    }\n                                    function array_allocation_size_bytes(length) -> size\n                                    {\n                                        if gt(length, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        size := add(and(add(length, 31), not(31)), 0x20)\n                                    }\n                                    function abi_decode_available_length_bytes(src, length, end) -> array\n                                    {\n                                        let _1 := array_allocation_size_bytes(length)\n                                        let memPtr := mload(64)\n                                        finalize_allocation(memPtr, _1)\n                                        array := memPtr\n                                        mstore(memPtr, length)\n                                        if gt(add(src, length), end)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        calldatacopy(add(memPtr, 0x20), src, length)\n                                        mstore(add(add(memPtr, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_decode_address() -> value\n                                    {\n                                        value := calldataload(4)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n                                    {\n                                        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                                        length := calldataload(offset)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        arrayPos := add(offset, 0x20)\n                                        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n                                    }\n                                    function abi_decode_uint192() -> value\n                                    {\n                                        value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(192, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_array_struct_PackedUserOperation_calldata_dyn_calldatat_address_payable(dataEnd) -> value0, value1, value2\n                                    {\n                                        if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                                        let offset := calldataload(4)\n                                        let _1 := 0xffffffffffffffff\n                                        if gt(offset, _1) { revert(0, 0) }\n                                        if iszero(slt(add(offset, 35), dataEnd))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let length := calldataload(add(4, offset))\n                                        if gt(length, _1)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if gt(add(add(offset, shl(5, length)), 36), dataEnd)\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value0 := add(offset, 36)\n                                        value1 := length\n                                        let value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value2 := value\n                                    }\n                                    /// @src 0:1543:1547  \"2048\"\n                                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                                    {\n                                        let i := 0\n                                        for { } lt(i, length) { i := add(i, 32) }\n                                        {\n                                            mstore(add(dst, i), mload(add(src, i)))\n                                        }\n                                        mstore(add(dst, length), 0)\n                                    }\n                                    function abi_encode_bytes(value, pos) -> end\n                                    {\n                                        let length := /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:1543:1547  \"2048\" */ value)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(pos, length)\n                                        /// @src 0:1543:1547  \"2048\"\n                                        copy_memory_to_memory_with_cleanup(add(value, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x20), add(pos, 0x20), /** @src 0:1543:1547  \"2048\" */ length)\n                                        end := add(add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ pos, and(add(/** @src 0:1543:1547  \"2048\" */ length, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 31), not(31))), 0x20)\n                                    }\n                                    function checked_add_uint256(x, y) -> sum\n                                    {\n                                        sum := add(x, y)\n                                        if gt(x, sum)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                    }\n                                    function update_storage_value_offsett_uint48_to_uint48(slot, value)\n                                    {\n                                        let _1 := sload(slot)\n                                        sstore(slot, or(and(_1, not(shl(152, 0xffffffffffff))), and(shl(152, value), shl(152, 0xffffffffffff))))\n                                    }\n                                    function increment_uint256(value) -> ret\n                                    {\n                                        if eq(value, not(0))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                        ret := add(value, 1)\n                                    }\n                                    function checked_sub_uint256(x, y) -> diff\n                                    {\n                                        diff := sub(x, y)\n                                        if gt(diff, x)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x11)\n                                            revert(0, 0x24)\n                                        }\n                                    }\n                                    function abi_encode_address_payable_uint256(headStart, value0, value1) -> tail\n                                    {\n                                        tail := add(headStart, 64)\n                                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(add(headStart, 32), value1)\n                                    }\n                                    function extract_returndata() -> data\n                                    {\n                                        switch returndatasize()\n                                        case 0 { data := 96 }\n                                        default {\n                                            let _1 := returndatasize()\n                                            let _2 := array_allocation_size_bytes(_1)\n                                            let memPtr := mload(64)\n                                            finalize_allocation(memPtr, _2)\n                                            mstore(memPtr, _1)\n                                            data := memPtr\n                                            returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ returndatasize())\n                                        }\n                                    }\n                                    /// @ast-id 968 @src 0:13258:13464  \"function getUserOpHash(...\"\n                                    function fun_getUserOpHash(var_userOp_947_offset) -> var\n                                    {\n                                        /// @src 5:1998:2013  \"userOp.initCode\"\n                                        let _1 := 64\n                                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, _1))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem, expr_offset, expr_length)\n                                        let var_ret := keccak256(usr$mem, expr_length)\n                                        /// @src 5:2062:2077  \"userOp.callData\"\n                                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 96))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem_1 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem_1, expr_offset_1, expr_length_1)\n                                        let var_ret_1 := keccak256(usr$mem_1, expr_length_1)\n                                        /// @src 5:2300:2323  \"userOp.paymasterAndData\"\n                                        let expr_offset_2, expr_length_2 := access_calldata_tail_bytes_calldata(var_userOp_947_offset, add(var_userOp_947_offset, 224))\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let usr$mem_2 := mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 1:2961:3154  \"assembly (\\\"memory-safe\\\") {...\"\n                                        calldatacopy(usr$mem_2, expr_offset_2, expr_length_2)\n                                        let var_ret_2 := keccak256(usr$mem_2, expr_length_2)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        let expr_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 5:1998:2013  \"userOp.initCode\" */ _1)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        let _2 := add(expr_mpos, /** @src 5:1938:1950  \"userOp.nonce\" */ 32)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_2, and(/** @src 5:823:884  \"assembly {...\" */ calldataload(/** @src 5:1895:1912  \"getSender(userOp)\" */ var_userOp_947_offset), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:1998:2013  \"userOp.initCode\" */ _1), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:1938:1950  \"userOp.nonce\" */ add(var_userOp_947_offset, 32)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2062:2077  \"userOp.callData\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret)\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2115:2138  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_ret_1)\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2177:2202  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2115:2138  \"userOp.accountGasLimits\" */ add(var_userOp_947_offset, 128)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2230:2244  \"userOp.gasFees\" */ 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2177:2202  \"userOp.preVerificationGas\" */ add(var_userOp_947_offset, 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 5:2300:2323  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 5:2230:2244  \"userOp.gasFees\" */ add(var_userOp_947_offset, 192)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := 256\n                                        mstore(add(/** @src 5:2342:2522  \"abi.encode(...\" */ expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3), var_ret_2)\n                                        /// @src 5:2342:2522  \"abi.encode(...\"\n                                        mstore(expr_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3)\n                                        let newFreePtr := add(expr_mpos, 288)\n                                        let _4 := 0xffffffffffffffff\n                                        if or(gt(newFreePtr, _4), lt(newFreePtr, expr_mpos))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr)\n                                        /// @src 5:4955:4987  \"return keccak256(encode(userOp))\"\n                                        let var_1 := /** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 5:4962:4987  \"keccak256(encode(userOp))\" */ expr_mpos))\n                                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                        let _5 := add(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ expr_mpos, /** @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\" */ 320)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(_5, var_1)\n                                        mstore(add(expr_mpos, 352), /** @src 0:13435:13439  \"this\" */ address())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(expr_mpos, 384), /** @src 0:13442:13455  \"block.chainid\" */ chainid())\n                                        /// @src 0:13401:13456  \"abi.encode(userOp.hash(), address(this), block.chainid)\"\n                                        mstore(newFreePtr, /** @src 5:2062:2077  \"userOp.callData\" */ 96)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let newFreePtr_1 := add(expr_mpos, 416)\n                                        if or(gt(newFreePtr_1, _4), lt(newFreePtr_1, newFreePtr))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        mstore(/** @src 5:1998:2013  \"userOp.initCode\" */ _1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ newFreePtr_1)\n                                        /// @src 0:13372:13457  \"return...\"\n                                        var := /** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ keccak256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:13391:13457  \"keccak256(abi.encode(userOp.hash(), address(this), block.chainid))\" */ newFreePtr))\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function array_allocation_size_array_struct_UserOpInfo_dyn(length) -> size\n                                    {\n                                        if gt(length, 0xffffffffffffffff)\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x41)\n                                            revert(0, 0x24)\n                                        }\n                                        size := add(shl(5, length), 0x20)\n                                    }\n                                    function allocate_and_zero_memory_array_array_struct_UserOpInfo_dyn(length) -> memPtr\n                                    {\n                                        let _1 := array_allocation_size_array_struct_UserOpInfo_dyn(length)\n                                        let _2 := 64\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation(memPtr_1, _1)\n                                        mstore(memPtr_1, length)\n                                        memPtr := memPtr_1\n                                        let _3 := add(array_allocation_size_array_struct_UserOpInfo_dyn(length), not(31))\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        for { } lt(i, _3) { i := add(i, 32) }\n                                        {\n                                            let memPtr_2 := mload(_2)\n                                            finalize_allocation_26259(memPtr_2)\n                                            let memPtr_3 := mload(_2)\n                                            finalize_allocation_26260(memPtr_3)\n                                            mstore(memPtr_3, /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _4 := 32\n                                            mstore(add(memPtr_3, _4), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, _2), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _5 := 96\n                                            mstore(add(memPtr_3, _5), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _6 := 128\n                                            mstore(add(memPtr_3, _6), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 160), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 192), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 224), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 256), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_3, 288), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(memPtr_2, memPtr_3)\n                                            mstore(add(memPtr_2, _4), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _2), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _5), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_2, _6), /** @src -1:-1:-1 */ 0)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(add(memPtr_1, i), _4), memPtr_2)\n                                        }\n                                    }\n                                    function memory_array_index_access_struct_UserOpInfo_dyn(baseRef, index) -> addr\n                                    {\n                                        if iszero(lt(index, /** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ baseRef)))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        addr := add(add(baseRef, shl(5, index)), 32)\n                                    }\n                                    function calldata_array_index_access_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, length, index) -> addr\n                                    {\n                                        if iszero(lt(index, length))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(286))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        addr := add(base_ref, rel_offset_of_tail)\n                                    }\n                                    function abi_decode_address_fromMemory(headStart, dataEnd) -> value0\n                                    {\n                                        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n                                        let value := mload(headStart)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        value0 := value\n                                    }\n                                    function abi_encode_bytes_calldata(start, length, pos) -> end\n                                    {\n                                        mstore(pos, length)\n                                        calldatacopy(add(pos, 0x20), start, length)\n                                        mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                                    }\n                                    /// @ast-id 2547 @src 4:1935:2114  \"function depositTo(address account) public virtual payable {...\"\n                                    function fun_depositTo(var_account)\n                                    {\n                                        /// @src 4:2025:2062  \"_incrementDeposit(account, msg.value)\"\n                                        let expr := fun_incrementDeposit(var_account, /** @src 4:2052:2061  \"msg.value\" */ callvalue())\n                                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                        let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_1, expr)\n                                        /// @src 4:2077:2107  \"Deposited(account, newDeposit)\"\n                                        log2(_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32, /** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ 0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 4:2077:2107  \"Deposited(account, newDeposit)\" */ var_account, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)))\n                                    }\n                                    function calldata_array_index_access_struct_UserOpsPerAggregator_calldata_dyn_calldata(base_ref, length, index) -> addr\n                                    {\n                                        if iszero(lt(index, length))\n                                        {\n                                            mstore(0, shl(224, 0x4e487b71))\n                                            mstore(4, 0x32)\n                                            revert(0, 0x24)\n                                        }\n                                        let rel_offset_of_tail := calldataload(add(base_ref, shl(5, index)))\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(94))))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        addr := add(base_ref, rel_offset_of_tail)\n                                    }\n                                    function access_calldata_tail_array_struct_PackedUserOperation_calldata_dyn_calldata(base_ref, ptr_to_tail) -> addr, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                                        length := calldataload(addr_1)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        addr := add(addr_1, 0x20)\n                                        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n                                    }\n                                    function read_from_calldatat_contract_IAggregator(ptr) -> returnValue\n                                    {\n                                        let value := calldataload(ptr)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                        returnValue := value\n                                    }\n                                    function access_calldata_tail_bytes_calldata(base_ref, ptr_to_tail) -> addr, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr_to_tail)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let addr_1 := add(base_ref, rel_offset_of_tail)\n                                        length := calldataload(addr_1)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        addr := add(addr_1, 0x20)\n                                        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n                                    }\n                                    function calldata_access_bytes_calldata(base_ref, ptr) -> value, length\n                                    {\n                                        let rel_offset_of_tail := calldataload(ptr)\n                                        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                                        let value_1 := add(rel_offset_of_tail, base_ref)\n                                        length := calldataload(value_1)\n                                        value := add(value_1, 0x20)\n                                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                                        if sgt(value, sub(calldatasize(), length)) { revert(0, 0) }\n                                    }\n                                    function abi_encode_struct_PackedUserOperation_calldata(value, pos) -> end\n                                    {\n                                        let _1 := 0x0120\n                                        let value_1 := calldataload(value)\n                                        let _2 := and(value_1, sub(shl(160, 1), 1))\n                                        if iszero(eq(value_1, _2))\n                                        {\n                                            revert(/** @src -1:-1:-1 */ 0, 0)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(pos, _2)\n                                        mstore(add(pos, 0x20), calldataload(add(value, 0x20)))\n                                        let memberValue0, memberValue1 := calldata_access_bytes_calldata(value, add(value, 0x40))\n                                        mstore(add(pos, 0x40), _1)\n                                        let tail := abi_encode_bytes_calldata(memberValue0, memberValue1, add(pos, _1))\n                                        let memberValue0_1, memberValue1_1 := calldata_access_bytes_calldata(value, add(value, 0x60))\n                                        mstore(add(pos, 0x60), sub(tail, pos))\n                                        let tail_1 := abi_encode_bytes_calldata(memberValue0_1, memberValue1_1, tail)\n                                        mstore(add(pos, 0x80), calldataload(add(value, 0x80)))\n                                        mstore(add(pos, 0xa0), calldataload(add(value, 0xa0)))\n                                        mstore(add(pos, 0xc0), calldataload(add(value, 0xc0)))\n                                        let memberValue0_2, memberValue1_2 := calldata_access_bytes_calldata(value, add(value, 0xe0))\n                                        mstore(add(pos, 0xe0), sub(tail_1, pos))\n                                        let tail_2 := abi_encode_bytes_calldata(memberValue0_2, memberValue1_2, tail_1)\n                                        let _3 := 0x0100\n                                        let memberValue0_3, memberValue1_3 := calldata_access_bytes_calldata(value, add(value, _3))\n                                        mstore(add(pos, _3), sub(tail_2, pos))\n                                        end := abi_encode_bytes_calldata(memberValue0_3, memberValue1_3, tail_2)\n                                    }\n                                    /// @ast-id 49092 @src 73:2431:2738  \"function _nonReentrantBefore() private {...\"\n                                    function fun_nonReentrantBefore()\n                                    {\n                                        /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                        if /** @src 73:2558:2576  \"_status == ENTERED\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 73:2558:2565  \"_status\" */ 0x02), 0x02)\n                                        /// @src 73:2554:2640  \"if (_status == ENTERED) {...\"\n                                        {\n                                            /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                            let _1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                            /// @src 73:2599:2629  \"ReentrancyGuardReentrantCall()\"\n                                            mstore(_1, shl(224, 0x3ee5aeb5))\n                                            revert(_1, 4)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(/** @src 73:2558:2565  \"_status\" */ 0x02, 0x02)\n                                    }\n                                    /// @ast-id 1795 @src 0:23805:25958  \"function _validatePrepayment(...\"\n                                    function fun_validatePrepayment(var_opIndex, var_userOp_1628_offset, var_outOpInfo_mpos) -> var_validationData, var_paymasterValidationData\n                                    {\n                                        /// @src 0:24005:24036  \"uint256 paymasterValidationData\"\n                                        var_paymasterValidationData := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:24069:24078  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:24118:24135  \"outOpInfo.mUserOp\"\n                                        let _431_mpos := mload(var_outOpInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let value := calldataload(var_userOp_1628_offset)\n                                        let _1 := and(value, sub(shl(160, 1), 1))\n                                        if iszero(eq(value, _1)) { revert(0, 0) }\n                                        mstore(_431_mpos, _1)\n                                        mstore(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:13851:13863  \"userOp.nonce\" */ add(var_userOp_1628_offset, 32)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := calldataload(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ add(var_userOp_1628_offset, 128))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := 0xffffffffffffffffffffffffffffffff\n                                        mstore(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                        mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _2))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _4 := calldataload(/** @src 0:14139:14153  \"userOp.gasFees\" */ add(var_userOp_1628_offset, /** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ 192))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 5:2694:2709  \"uint256(packed)\" */ _4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _3))\n                                        mstore(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:2668:2683  \"bytes16(packed)\" */ _4))\n                                        /// @src 0:14198:14221  \"userOp.paymasterAndData\"\n                                        let expr_offset, expr_length := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, 224))\n                                        /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                        switch /** @src 0:14235:14262  \"paymasterAndData.length > 0\" */ iszero(iszero(expr_length))\n                                        case /** @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\" */ 0 {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14632:14649  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            mstore(/** @src 0:14676:14713  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            mstore(/** @src 0:14731:14762  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        }\n                                        default /// @src 0:14231:14777  \"if (paymasterAndData.length > 0) {...\"\n                                        {\n                                            /// @src 5:490:492  \"52\"\n                                            if /** @src 0:14303:14368  \"paymasterAndData.length >= UserOperationLib.PAYMASTER_DATA_OFFSET\" */ lt(expr_length, /** @src 5:490:492  \"52\" */ 0x34)\n                                            {\n                                                let memPtr := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 5:490:492  \"52\"\n                                                mstore(memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(229, 4594637))\n                                                /// @src 5:490:492  \"52\"\n                                                mstore(add(memPtr, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 5:490:492  \"52\" */ add(memPtr, 36), 29)\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 5:490:492  \"52\" */ memPtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 5:490:492  \"52\" */ \"AA93 invalid paymasterAndData\")\n                                                revert(memPtr, 100)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(0x14, expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 5:434:436  \"36\" */ 0x24, /** @src 5:372:374  \"20\" */ expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 5:490:492  \"52\" */ 0x34, /** @src 5:372:374  \"20\" */ expr_length)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            mstore(/** @src 0:14504:14535  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, /** @src 5:434:436  \"36\" */ 0x24))))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14465:14502  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shr(/** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128, /** @src 5:434:436  \"36\" */ calldataload(/** @src 5:372:374  \"20\" */ add(expr_offset, 0x14))))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:14446:14463  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224), /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 5:4451:4511  \"bytes20(paymasterAndData[: PAYMASTER_VALIDATION_GAS_OFFSET])\" */ expr_offset)))\n                                        }\n                                        /// @src 0:24214:24235  \"getUserOpHash(userOp)\"\n                                        let _5 := fun_getUserOpHash(var_userOp_1628_offset)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _5)\n                                        let _6 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                        /// @src 0:24491:24552  \"mUserOp.preVerificationGas |...\"\n                                        let expr_1 := or(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)), /** @src 0:24491:24552  \"mUserOp.preVerificationGas |...\" */ _6)\n                                        /// @src 0:24491:24587  \"mUserOp.preVerificationGas |...\"\n                                        let expr_2 := or(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                        /// @src 0:24491:24639  \"mUserOp.preVerificationGas |...\"\n                                        let expr_3 := or(expr_2, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                        /// @src 0:24491:24685  \"mUserOp.preVerificationGas |...\"\n                                        let expr_4 := or(expr_3, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                        /// @src 0:24491:24720  \"mUserOp.preVerificationGas |...\"\n                                        let expr_5 := or(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if /** @src 0:24781:24814  \"maxGasValues <= type(uint120).max\" */ gt(/** @src 0:24491:24763  \"mUserOp.preVerificationGas |...\" */ or(expr_5, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:14056:14084  \"mUserOp.maxPriorityFeePerGas\" */ add(_431_mpos, 288))), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffffffffffffffffff)\n                                        {\n                                            let memPtr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(memPtr_1, shl(229, 4594637))\n                                            mstore(add(memPtr_1, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(memPtr_1, 36), 24)\n                                            mstore(add(memPtr_1, 68), \"AA94 gas values overflow\")\n                                            revert(memPtr_1, 100)\n                                        }\n                                        let _7 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ add(_431_mpos, 64))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum := add(_7, mload(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ add(_431_mpos, 96)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_1 := add(sum, mload(/** @src 0:24602:24639  \"mUserOp.paymasterVerificationGasLimit\" */ add(_431_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_2 := add(sum_1, mload(/** @src 0:24654:24685  \"mUserOp.paymasterPostOpGasLimit\" */ add(_431_mpos, /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let sum_3 := add(sum_2, mload(/** @src 0:13991:14017  \"mUserOp.preVerificationGas\" */ add(_431_mpos, 192)))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let product := mul(sum_3, mload(/** @src 0:14086:14106  \"mUserOp.maxFeePerGas\" */ add(_431_mpos, 256)))\n                                        /// @src 0:24935:25098  \"_validateAccountPrepayment(...\"\n                                        let var_validationData_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:17742:17756  \"opInfo.mUserOp\"\n                                        let _mpos := mload(var_outOpInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17787:17801  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 0:17854:17865  \"op.initCode\"\n                                        let expr_offset_1, expr_length_1 := access_calldata_tail_bytes_calldata(var_userOp_1628_offset, add(var_userOp_1628_offset, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                        if /** @src 0:15810:15830  \"initCode.length != 0\" */ iszero(iszero(expr_length_1))\n                                        /// @src 0:15806:16738  \"if (initCode.length != 0) {...\"\n                                        {\n                                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                            if /** @src 0:15902:15925  \"sender.code.length != 0\" */ iszero(iszero(/** @src 0:15902:15920  \"sender.code.length\" */ extcodesize(cleaned)))\n                                            /// @src 0:15898:16002  \"if (sender.code.length != 0)...\"\n                                            {\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                let _8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                mstore(_8, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ add(_8, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 31)\n                                                mstore(add(/** @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\" */ _8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA10 sender already constructed\")\n                                                /// @src 0:15950:16002  \"FailedOp(opIndex, \\\"AA10 sender already constructed\\\")\"\n                                                revert(_8, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            let _9 := mload(/** @src 0:16085:16120  \"opInfo.mUserOp.verificationGasLimit\" */ add(/** @src 0:16085:16099  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let _10 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            mstore(_10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(225, 0x2b870d1b))\n                                            mstore(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ add(_10, 4), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let _11 := call(_9, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1100:1114  \"_senderCreator\" */ loadimmutable(\"35\"), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1)), 0, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes_calldata(expr_offset_1, expr_length_1, add(/** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36)), /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ _10), _10, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            if iszero(_11)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                let pos := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                returndatacopy(pos, 0, returndatasize())\n                                                revert(pos, returndatasize())\n                                            }\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            let expr_6 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                            if _11\n                                            {\n                                                let _12 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                                /// @src 0:16034:16144  \"senderCreator().createSender{...\"\n                                                if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ returndatasize()) { _12 := returndatasize() }\n                                                finalize_allocation(_10, _12)\n                                                expr_6 := abi_decode_address_fromMemory(_10, add(_10, _12))\n                                            }\n                                            /// @src 0:16162:16183  \"sender1 == address(0)\"\n                                            let _13 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:16162:16183  \"sender1 == address(0)\" */ expr_6, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                            if /** @src 0:16162:16183  \"sender1 == address(0)\" */ iszero(_13)\n                                            /// @src 0:16158:16256  \"if (sender1 == address(0))...\"\n                                            {\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                mstore(_14, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ add(_14, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 27)\n                                                mstore(add(/** @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\" */ _14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA13 initCode failed or OOG\")\n                                                /// @src 0:16208:16256  \"FailedOp(opIndex, \\\"AA13 initCode failed or OOG\\\")\"\n                                                revert(_14, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                            if /** @src 0:16274:16291  \"sender1 != sender\" */ iszero(eq(_13, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned))\n                                            /// @src 0:16270:16369  \"if (sender1 != sender)...\"\n                                            {\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                let _15 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                mstore(_15, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ add(_15, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\" */ _15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA14 initCode must return sender\")\n                                                /// @src 0:16316:16369  \"FailedOp(opIndex, \\\"AA14 initCode must return sender\\\")\"\n                                                revert(_15, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                            if /** @src 0:16387:16411  \"sender1.code.length == 0\" */ iszero(/** @src 0:16387:16406  \"sender1.code.length\" */ extcodesize(expr_6))\n                                            /// @src 0:16383:16489  \"if (sender1.code.length == 0)...\"\n                                            {\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                let _16 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                mstore(_16, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ add(_16, /** @src 0:16034:16144  \"senderCreator().createSender{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\" */ _16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA15 initCode must create sender\")\n                                                /// @src 0:16436:16489  \"FailedOp(opIndex, \\\"AA15 initCode must create sender\\\")\"\n                                                revert(_16, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            /// @src 5:372:374  \"20\"\n                                            if gt(/** @src 0:16548:16550  \"20\" */ 0x14, /** @src 5:372:374  \"20\" */ expr_length_1)\n                                            {\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                revert(0, 0)\n                                            }\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _17 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:16689:16713  \"opInfo.mUserOp.paymaster\" */ add(/** @src 0:16689:16703  \"opInfo.mUserOp\" */ mload(var_outOpInfo_mpos), /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                            let _18 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(_18, /** @src 5:372:374  \"20\" */ shr(/** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96, /** @src 5:372:374  \"20\" */ calldataload(/** @src 0:16529:16552  \"bytes20(initCode[0:20])\" */ expr_offset_1)))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(_18, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                            /// @src 0:16572:16727  \"AccountDeployed(...\"\n                                            log3(_18, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:16572:16727  \"AccountDeployed(...\" */ 0xd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d, _17, cleaned)\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_2 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:17900:17917  \"mUserOp.paymaster\" */ add(_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        /// @src 0:17931:17962  \"uint256 missingAccountFunds = 0\"\n                                        let var_missingAccountFunds := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        /// @src 0:17976:18198  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(0, cleaned)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let _19 := sload(keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64))\n                                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            let expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            switch /** @src 0:18094:18115  \"bal > requiredPrefund\" */ gt(_19, product)\n                                            case /** @src 0:18094:18183  \"bal > requiredPrefund...\" */ 0 {\n                                                expr_7 := /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18162:18183  \"requiredPrefund - bal\" */ product, _19)\n                                            }\n                                            default /// @src 0:18094:18183  \"bal > requiredPrefund...\"\n                                            {\n                                                expr_7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            }\n                                            /// @src 0:18072:18183  \"missingAccountFunds = bal > requiredPrefund...\"\n                                            var_missingAccountFunds := expr_7\n                                        }\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _20 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let _21 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        mstore(_21, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x06608bdf))\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let trySuccessCondition := call(_6, cleaned, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ _21, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_21, 4), var_userOp_1628_offset, _20, var_missingAccountFunds), _21), _21, /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        let expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                        if trySuccessCondition\n                                        {\n                                            let _22 := /** @src 0:13851:13863  \"userOp.nonce\" */ 32\n                                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                            if gt(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ returndatasize()) { _22 := returndatasize() }\n                                            finalize_allocation(_21, _22)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            if slt(sub(/** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ add(_21, _22), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _21), /** @src 0:13851:13863  \"userOp.nonce\" */ 32)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            { revert(0, 0) }\n                                            /// @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\"\n                                            expr_8 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(_21)\n                                        }\n                                        /// @src 0:18211:18617  \"try...\"\n                                        switch iszero(trySuccessCondition)\n                                        case 0 {\n                                            /// @src 0:18436:18468  \"validationData = _validationData\"\n                                            var_validationData_1 := expr_8\n                                        }\n                                        default /// @src 0:18211:18617  \"try...\"\n                                        {\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$len := returndatasize()\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _23 := 0x0800\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _23)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            {\n                                                usr$len := /** @src 0:1543:1547  \"2048\" */ _23\n                                            }\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            let usr$ptr := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                            mstore(usr$ptr, usr$len)\n                                            returndatacopy(add(usr$ptr, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            let _24 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            mstore(_24, shl(224, 0x65c8fd4d))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_24, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA23 reverted\")\n                                            mstore(add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                            /// @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                            revert(_24, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr, add(/** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _24))\n                                        }\n                                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                        if /** @src 0:17980:18003  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_2)\n                                        /// @src 0:18630:18999  \"if (paymaster == address(0)) {...\"\n                                        {\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(0, cleaned)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let dataSlot := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _25 := sload(/** @src 0:18762:18780  \"senderInfo.deposit\" */ dataSlot)\n                                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                            if /** @src 0:18802:18827  \"requiredPrefund > deposit\" */ gt(product, _25)\n                                            /// @src 0:18798:18921  \"if (requiredPrefund > deposit) {...\"\n                                            {\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                let _26 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                mstore(_26, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ add(_26, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 23)\n                                                mstore(add(/** @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\" */ _26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA21 didn't pay prefund\")\n                                                /// @src 0:18858:18902  \"FailedOp(opIndex, \\\"AA21 didn't pay prefund\\\")\"\n                                                revert(_26, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            sstore(dataSlot, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:18959:18984  \"deposit - requiredPrefund\" */ _25, product))\n                                        }\n                                        /// @src 0:24918:25098  \"validationData = _validateAccountPrepayment(...\"\n                                        var_validationData := var_validationData_1\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned_3 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25138:25152  \"mUserOp.sender\" */ _431_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _27 := mload(/** @src 0:13835:13848  \"mUserOp.nonce\" */ add(_431_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0, cleaned_3)\n                                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 1)\n                                        let _28 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(0, shr(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _27))\n                                        mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _28)\n                                        let dataSlot_1 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _29 := sload(/** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ dataSlot_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(dataSlot_1, /** @src 2:1373:1407  \"nonceSequenceNumber[sender][key]++\" */ increment_uint256(_29))\n                                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                        if /** @src 0:25113:25168  \"!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)\" */ iszero(/** @src 2:1373:1414  \"nonceSequenceNumber[sender][key]++ == seq\" */ eq(_29, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 2:1343:1356  \"uint64(nonce)\" */ _27, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0xffffffffffffffff)))\n                                        /// @src 0:25109:25249  \"if (!_validateAndUpdateNonce(mUserOp.sender, mUserOp.nonce)) {...\"\n                                        {\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            let _30 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            mstore(_30, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ add(_30, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 26)\n                                            mstore(add(/** @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\" */ _30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA25 invalid account nonce\")\n                                            /// @src 0:25191:25238  \"FailedOp(opIndex, \\\"AA25 invalid account nonce\\\")\"\n                                            revert(_30, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                        if /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25296:25305  \"gasleft()\" */ gas()), /** @src 0:25287:25328  \"preGas - gasleft() > verificationGasLimit\" */ _6)\n                                        /// @src 0:25283:25421  \"if (preGas - gasleft() > verificationGasLimit) {...\"\n                                        {\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            let _31 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            mstore(_31, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ add(_31, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                            mstore(add(/** @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\" */ _31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA26 over verificationGasLimit\")\n                                            /// @src 0:25355:25406  \"FailedOp(opIndex, \\\"AA26 over verificationGasLimit\\\")\"\n                                            revert(_31, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                        }\n                                        /// @src 0:25441:25461  \"bytes memory context\"\n                                        let var_context_1745_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:25441:25461  \"bytes memory context\"\n                                        var_context_1745_mpos := /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96\n                                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                        if /** @src 0:25475:25506  \"mUserOp.paymaster != address(0)\" */ iszero(iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:25475:25492  \"mUserOp.paymaster\" */ add(_431_mpos, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))))\n                                        /// @src 0:25471:25721  \"if (mUserOp.paymaster != address(0)) {...\"\n                                        {\n                                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                            let var_context_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:25559:25710  \"_validatePaymasterPrepayment(...\"\n                                            let var_validationData_2 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:19872:19881  \"gasleft()\"\n                                            let expr_9 := gas()\n                                            /// @src 0:19925:19939  \"opInfo.mUserOp\"\n                                            let _mpos_1 := mload(var_outOpInfo_mpos)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let cleaned_4 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:19973:19990  \"mUserOp.paymaster\" */ add(_mpos_1, /** @src 0:14198:14221  \"userOp.paymasterAndData\" */ 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                            mstore(0, cleaned_4)\n                                            mstore(/** @src 0:13851:13863  \"userOp.nonce\" */ 32, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            let dataSlot_2 := keccak256(0, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _32 := sload(/** @src 0:20091:20112  \"paymasterInfo.deposit\" */ dataSlot_2)\n                                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                            if /** @src 0:20130:20155  \"deposit < requiredPreFund\" */ lt(_32, product)\n                                            /// @src 0:20126:20248  \"if (deposit < requiredPreFund) {...\"\n                                            {\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                let _33 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                mstore(_33, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ add(_33, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 30)\n                                                mstore(add(/** @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\" */ _33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA31 paymaster deposit too low\")\n                                                /// @src 0:20182:20233  \"FailedOp(opIndex, \\\"AA31 paymaster deposit too low\\\")\"\n                                                revert(_33, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132)\n                                            }\n                                            sstore(dataSlot_2, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:20285:20310  \"deposit - requiredPreFund\" */ _32, product))\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let _34 := mload(/** @src 0:20357:20394  \"mUserOp.paymasterVerificationGasLimit\" */ add(_mpos_1, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128))\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _35 := mload(/** @src 0:24191:24211  \"outOpInfo.userOpHash\" */ add(var_outOpInfo_mpos, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let _36 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            mstore(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(226, 0x14add44b))\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let trySuccessCondition_1 := call(_34, cleaned_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _36, sub(abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(add(_36, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ var_userOp_1628_offset, _35, product), _36), _36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            let expr_component_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            let expr_component := 0\n                                            /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                            if trySuccessCondition_1\n                                            {\n                                                let _37 := returndatasize()\n                                                returndatacopy(_36, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ _37)\n                                                finalize_allocation(_36, _37)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                if slt(sub(/** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                let offset := mload(_36)\n                                                if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                                                if iszero(slt(add(add(_36, offset), 0x1f), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37)))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                let _38 := mload(add(_36, offset))\n                                                let _39 := array_allocation_size_bytes(_38)\n                                                let memPtr_2 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                finalize_allocation(memPtr_2, _39)\n                                                mstore(memPtr_2, _38)\n                                                if gt(add(add(add(_36, offset), _38), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\" */ add(_36, _37))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                { revert(0, 0) }\n                                                copy_memory_to_memory_with_cleanup(add(add(_36, offset), /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(memPtr_2, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _38)\n                                                let value_1 := mload(add(_36, /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                                /// @src 0:20428:20620  \"IPaymaster(paymaster).validatePaymasterUserOp{gas: pmVerificationGasLimit}(...\"\n                                                expr_component_mpos := memPtr_2\n                                                expr_component := value_1\n                                            }\n                                            /// @src 0:20408:20925  \"try...\"\n                                            switch iszero(trySuccessCondition_1)\n                                            case 0 {\n                                                /// @src 0:20708:20726  \"context = _context\"\n                                                var_context_mpos := expr_component_mpos\n                                                /// @src 0:20744:20776  \"validationData = _validationData\"\n                                                var_validationData_2 := expr_component\n                                            }\n                                            default /// @src 0:20408:20925  \"try...\"\n                                            {\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$len_1 := returndatasize()\n                                                /// @src 0:1543:1547  \"2048\"\n                                                let _40 := 0x0800\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                if gt(usr$len_1, /** @src 0:1543:1547  \"2048\" */ _40)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                {\n                                                    usr$len_1 := /** @src 0:1543:1547  \"2048\" */ _40\n                                                }\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                let usr$ptr_1 := mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr_1, usr$len_1), /** @src 0:13851:13863  \"userOp.nonce\" */ 32))\n                                                /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                mstore(usr$ptr_1, usr$len_1)\n                                                returndatacopy(add(usr$ptr_1, /** @src 0:13851:13863  \"userOp.nonce\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len_1)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                let _41 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                mstore(_41, /** @src 0:18515:18602  \"FailedOpWithRevert(opIndex, \\\"AA23 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ shl(224, 0x65c8fd4d))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ add(_41, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), 13)\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"AA33 reverted\")\n                                                mstore(add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), /** @src 0:14020:14045  \"userOp.preVerificationGas\" */ 160)\n                                                /// @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\"\n                                                revert(_41, sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(usr$ptr_1, add(/** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)), /** @src 0:20823:20910  \"FailedOpWithRevert(opIndex, \\\"AA33 reverted\\\", Exec.getReturnData(REVERT_REASON_MAX_LEN))\" */ _41))\n                                            }\n                                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                            if /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ gt(/** @src 0:1543:1547  \"2048\" */ sub(expr_9, /** @src 0:20951:20960  \"gasleft()\" */ gas()), /** @src 0:20942:20985  \"preGas - gasleft() > pmVerificationGasLimit\" */ _34)\n                                            /// @src 0:20938:21087  \"if (preGas - gasleft() > pmVerificationGasLimit) {...\"\n                                            {\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                let _42 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                mstore(_42, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ add(_42, /** @src 0:18231:18371  \"IAccount(sender).validateUserOp{...\" */ 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 36), /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), 39)\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), \"AA36 over paymasterVerificationG\")\n                                                mstore(add(/** @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\" */ _42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 132), \"asLimit\")\n                                                /// @src 0:21012:21072  \"FailedOp(opIndex, \\\"AA36 over paymasterVerificationGasLimit\\\")\"\n                                                revert(_42, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 164)\n                                            }\n                                            /// @src 0:25522:25710  \"(context, paymasterValidationData) = _validatePaymasterPrepayment(...\"\n                                            var_paymasterValidationData := var_validationData_2\n                                            var_context_1745_mpos := var_context_mpos\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 0:25754:25771  \"outOpInfo.prefund\" */ add(var_outOpInfo_mpos, /** @src 0:13874:13902  \"mUserOp.verificationGasLimit\" */ 64), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ product)\n                                        mstore(/** @src 0:25803:25826  \"outOpInfo.contextOffset\" */ add(var_outOpInfo_mpos, /** @src 0:13904:13924  \"mUserOp.callGasLimit\" */ 96), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_context_1745_mpos)\n                                        mstore(/** @src 0:25874:25892  \"outOpInfo.preOpGas\" */ add(var_outOpInfo_mpos, /** @src 0:13957:13980  \"userOp.accountGasLimits\" */ 128), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:1543:1547  \"2048\" */ sub(expr, /** @src 0:25904:25913  \"gasleft()\" */ gas()), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ calldataload(/** @src 0:14020:14045  \"userOp.preVerificationGas\" */ add(var_userOp_1628_offset, 160))))\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_encode_struct_UserOpInfo(value, pos)\n                                    {\n                                        let _1 := mload(value)\n                                        let _2 := sub(shl(160, 1), 1)\n                                        mstore(pos, and(mload(_1), _2))\n                                        mstore(add(pos, 0x20), mload(add(_1, 0x20)))\n                                        mstore(add(pos, 0x40), mload(add(_1, 0x40)))\n                                        mstore(add(pos, 0x60), mload(add(_1, 0x60)))\n                                        mstore(add(pos, 0x80), mload(add(_1, 0x80)))\n                                        mstore(add(pos, 0xa0), mload(add(_1, 0xa0)))\n                                        mstore(add(pos, 0xc0), mload(add(_1, 0xc0)))\n                                        mstore(add(pos, 0xe0), and(mload(add(_1, 0xe0)), _2))\n                                        let _3 := 0x0100\n                                        mstore(add(pos, _3), mload(add(_1, _3)))\n                                        let _4 := 0x0120\n                                        mstore(add(pos, _4), mload(add(_1, _4)))\n                                        mstore(add(pos, 0x0140), mload(add(value, 0x20)))\n                                        mstore(add(pos, 0x0160), mload(add(value, 0x40)))\n                                        mstore(add(pos, 0x0180), mload(add(value, 0x60)))\n                                        mstore(add(pos, 0x01a0), mload(add(value, 0x80)))\n                                    }\n                                    /// @ast-id 328 @src 0:3032:6109  \"function _executeUserOp(...\"\n                                    function fun_executeUserOp(var_opIndex, var_userOp_offset, var_opInfo_155_mpos) -> var_collected\n                                    {\n                                        /// @src 0:3242:3251  \"gasleft()\"\n                                        let expr := gas()\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := mload(/** @src 0:3309:3329  \"opInfo.contextOffset\" */ add(var_opInfo_155_mpos, 96))\n                                        /// @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let _2 := 0x40\n                                        let var_saveFreePtr := mload(_2)\n                                        /// @src 0:3531:3546  \"userOp.callData\"\n                                        let expr_offset, expr_182_length := access_calldata_tail_bytes_calldata(var_userOp_offset, add(var_userOp_offset, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                        /// @src 0:3560:3582  \"bytes memory innerCall\"\n                                        let var_innerCall_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                        let var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                        /// @src 0:3596:3612  \"bytes4 methodSig\"\n                                        var_methodSig := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerCall_mpos\n                                        /// @src 0:3626:3806  \"assembly {...\"\n                                        if gt(expr_182_length, 3)\n                                        {\n                                            var_methodSig := calldataload(expr_offset)\n                                        }\n                                        /// @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\"\n                                        let _3 := shl(224, 0x8dd7712f)\n                                        /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                        switch /** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ eq(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:3823:3874  \"methodSig == IAccountExecute.executeUserOp.selector\" */ var_methodSig, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0xffffffff)), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                        case /** @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\" */ 0 {\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            mstore(add(var_saveFreePtr, 0x20), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                            mstore(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ add(var_saveFreePtr, 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                            let tail := abi_encode_bytes_calldata(expr_offset, expr_182_length, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                            mstore(add(/** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail, /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            let _4 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail), /** @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\" */ var_saveFreePtr)\n                                            mstore(var_saveFreePtr, add(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)))\n                                            /// @src 0:4158:4221  \"abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            finalize_allocation(var_saveFreePtr, _4)\n                                            /// @src 0:4146:4221  \"innerCall = abi.encodeCall(this.innerHandleOp, (callData, opInfo, context))\"\n                                            var_innerCall_mpos := var_saveFreePtr\n                                        }\n                                        default /// @src 0:3819:4236  \"if (methodSig == IAccountExecute.executeUserOp.selector) {...\"\n                                        {\n                                            /// @src 0:1543:1547  \"2048\"\n                                            let _5 := mload(/** @src 0:3978:3995  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, 32))\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            let expr_206_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            mstore(add(expr_206_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:3836:3874  \"IAccountExecute.executeUserOp.selector\" */ _3)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            mstore(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ add(expr_206_mpos, 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                            let tail_1 := abi_encode_struct_PackedUserOperation_calldata(var_userOp_offset, add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100))\n                                            mstore(add(/** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ expr_206_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68), _5)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            let _6 := sub(tail_1, expr_206_mpos)\n                                            let _7 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(31)\n                                            /// @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\"\n                                            mstore(expr_206_mpos, add(_6, _7))\n                                            finalize_allocation(expr_206_mpos, _6)\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            let expr_217_mpos := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            mstore(add(expr_217_mpos, /** @src 0:3978:3995  \"opInfo.userOpHash\" */ 32), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 4381779))\n                                            mstore(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ add(expr_217_mpos, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ 36), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 512)\n                                            let tail_2 := abi_encode_bytes(expr_206_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 548))\n                                            abi_encode_struct_UserOpInfo(var_opInfo_155_mpos, add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 68))\n                                            mstore(add(/** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 516), add(sub(tail_2, /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ not(35)))\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            let _8 := sub(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ abi_encode_bytes(_1, tail_2), /** @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\" */ expr_217_mpos)\n                                            mstore(expr_217_mpos, add(_8, /** @src 0:3923:3997  \"abi.encodeCall(IAccountExecute.executeUserOp, (userOp, opInfo.userOpHash))\" */ _7))\n                                            /// @src 0:4027:4095  \"abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            finalize_allocation(expr_217_mpos, _8)\n                                            /// @src 0:4015:4095  \"innerCall = abi.encodeCall(this.innerHandleOp, (executeUserOp, opInfo, context))\"\n                                            var_innerCall_mpos := expr_217_mpos\n                                        }\n                                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                        let _9 := 32\n                                        let var_success := call(gas(), address(), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ add(var_innerCall_mpos, _9), mload(var_innerCall_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                        var_collected := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0)\n                                        /// @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\"\n                                        mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ var_saveFreePtr)\n                                        /// @src 0:4488:6103  \"if (!success) {...\"\n                                        if /** @src 0:4492:4500  \"!success\" */ iszero(var_success)\n                                        /// @src 0:4488:6103  \"if (!success) {...\"\n                                        {\n                                            /// @src 0:4516:4539  \"bytes32 innerRevertCode\"\n                                            let var_innerRevertCode := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                            /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                            if eq(/** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9, /** @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\" */ returndatasize())\n                                            {\n                                                returndatacopy(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode, var_innerRevertCode, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9)\n                                                /// @src 0:4553:4780  \"assembly (\\\"memory-safe\\\") {...\"\n                                                var_innerRevertCode := mload(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_innerRevertCode)\n                                            }\n                                            /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                            switch /** @src 0:4797:4832  \"innerRevertCode == INNER_OUT_OF_GAS\" */ eq(var_innerRevertCode, /** @src 0:12228:12354  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeaddead))\n                                            case /** @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\" */ 0 {\n                                                /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                                switch /** @src 0:5093:5136  \"innerRevertCode == INNER_REVERT_LOW_PREFUND\" */ eq(var_innerRevertCode, /** @src 0:29031:29177  \"assembly (\\\"memory-safe\\\") {...\" */ shl(224, 0xdeadaa51))\n                                                case /** @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\" */ 0 {\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _10 := mload(/** @src 0:5612:5629  \"opInfo.userOpHash\" */ add(var_opInfo_155_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 0:5651:5665  \"opInfo.mUserOp\"\n                                                    let _565_mpos := mload(var_opInfo_155_mpos)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _11 := sub(shl(160, 1), 1)\n                                                    let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:5651:5672  \"opInfo.mUserOp.sender\" */ _565_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    let _12 := mload(/** @src 0:5694:5714  \"opInfo.mUserOp.nonce\" */ add(_565_mpos, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let usr$len := returndatasize()\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let _13 := 0x0800\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    if gt(usr$len, /** @src 0:1543:1547  \"2048\" */ _13)\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    {\n                                                        usr$len := /** @src 0:1543:1547  \"2048\" */ _13\n                                                    }\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let usr$ptr := mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ add(add(usr$ptr, usr$len), /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9))\n                                                    /// @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    mstore(usr$ptr, usr$len)\n                                                    returndatacopy(add(usr$ptr, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0, /** @src 14:1204:1553  \"assembly (\\\"memory-safe\\\") {...\" */ usr$len)\n                                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                                    let _14 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    mstore(_14, _12)\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    mstore(add(_14, /** @src 0:4249:4469  \"assembly (\\\"memory-safe\\\") {...\" */ _9), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                    /// @src 0:5572:5795  \"PostOpRevertReason(...\"\n                                                    log3(_14, sub(/** @src 0:1543:1547  \"2048\" */ abi_encode_bytes(usr$ptr, add(_14, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)), /** @src 0:5572:5795  \"PostOpRevertReason(...\" */ _14), 0xf62676f440ff169a3a9afdbf812e89e7f95975ee8e5c31214ffdef631c5f4792, _10, cleaned)\n                                                    /// @src 0:5834:5852  \"preGas - gasleft()\"\n                                                    let expr_1 := checked_sub_uint256(expr, /** @src 0:5843:5852  \"gasleft()\" */ gas())\n                                                    /// @src 0:5855:5870  \"opInfo.preOpGas\"\n                                                    let _15 := add(var_opInfo_155_mpos, 128)\n                                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                                    let var_actualGas := /** @src 0:5834:5870  \"preGas - gasleft() + opInfo.preOpGas\" */ checked_add_uint256(expr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5855:5870  \"opInfo.preOpGas\" */ _15))\n                                                    /// @src 0:5900:6078  \"_postExecution(...\"\n                                                    let var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0\n                                                    /// @src 0:26799:26808  \"gasleft()\"\n                                                    let expr_2 := gas()\n                                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                                    let var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                                    /// @src 0:26842:26863  \"address refundAddress\"\n                                                    let var_refundAddress_1 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_actualGasCost\n                                                    /// @src 0:26907:26921  \"opInfo.mUserOp\"\n                                                    let _mpos := mload(var_opInfo_155_mpos)\n                                                    /// @src 0:26954:26980  \"getUserOpGasPrice(mUserOp)\"\n                                                    let expr_3 := fun_getUserOpGasPrice(_mpos)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27015:27032  \"mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                    switch /** @src 0:27050:27073  \"paymaster == address(0)\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ cleaned_1)\n                                                    case /** @src 0:27046:27885  \"if (paymaster == address(0)) {...\" */ 0 {\n                                                        /// @src 0:27162:27187  \"refundAddress = paymaster\"\n                                                        var_refundAddress := cleaned_1\n                                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                        if /** @src 0:27209:27227  \"context.length > 0\" */ iszero(iszero(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27209:27223  \"context.length\" */ _1)))\n                                                        /// @src 0:27205:27871  \"if (context.length > 0) {...\"\n                                                        {\n                                                            /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                            var_refundAddress_1 := var_actualGasCost\n                                                        }\n                                                    }\n                                                    default /// @src 0:27046:27885  \"if (paymaster == address(0)) {...\"\n                                                    {\n                                                        /// @src 0:27093:27123  \"refundAddress = mUserOp.sender\"\n                                                        var_refundAddress := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:27109:27123  \"mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _11)\n                                                    }\n                                                    /// @src 0:27898:27929  \"actualGas += preGas - gasleft()\"\n                                                    var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, /** @src 0:1543:1547  \"2048\" */ sub(expr_2, /** @src 0:27920:27929  \"gasleft()\" */ gas()))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _16 := mload(/** @src 0:28052:28072  \"mUserOp.callGasLimit\" */ add(_mpos, /** @src 0:3309:3329  \"opInfo.contextOffset\" */ 96))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let sum := add(_16, mload(/** @src 0:28075:28106  \"mUserOp.paymasterPostOpGasLimit\" */ add(_mpos, 160)))\n                                                    /// @src 0:1543:1547  \"2048\"\n                                                    let diff := sub(var_actualGas, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:28163:28178  \"opInfo.preOpGas\" */ _15))\n                                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                    if /** @src 0:28316:28352  \"executionGasLimit > executionGasUsed\" */ gt(sum, diff)\n                                                    /// @src 0:28312:28586  \"if (executionGasLimit > executionGasUsed) {...\"\n                                                    {\n                                                        /// @src 0:28538:28567  \"actualGas += unusedGasPenalty\"\n                                                        var_actualGas := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(var_actualGas, div(mul(/** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:28396:28432  \"executionGasLimit - executionGasUsed\" */ sum, diff), /** @src 0:1596:1598  \"10\" */ 0x0a), /** @src 0:28513:28516  \"100\" */ 0x64))\n                                                    }\n                                                    /// @src 0:28614:28650  \"actualGasCost = actualGas * gasPrice\"\n                                                    var_actualGasCost := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mul(/** @src 0:28630:28650  \"actualGas * gasPrice\" */ var_actualGas, expr_3)\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _17 := mload(/** @src 0:28682:28696  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                                    /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                    switch /** @src 0:28714:28737  \"prefund < actualGasCost\" */ lt(_17, var_actualGasCost)\n                                                    case /** @src 0:28710:29503  \"if (prefund < actualGasCost) {...\" */ 0 {\n                                                        /// @src 0:29291:29331  \"_incrementDeposit(refundAddress, refund)\"\n                                                        pop(fun_incrementDeposit(var_refundAddress, /** @src 0:1543:1547  \"2048\" */ sub(/** @src 0:29250:29273  \"prefund - actualGasCost\" */ _17, var_actualGasCost)))\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if var_refundAddress_1\n                                                        {\n                                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                        }\n                                                        /// @src 0:29478:29487  \"actualGas\"\n                                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, var_actualGasCost, var_actualGas)\n                                                    }\n                                                    default /// @src 0:28710:29503  \"if (prefund < actualGasCost) {...\"\n                                                    {\n                                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                        if var_refundAddress_1\n                                                        {\n                                                            mstore(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ shl(224, 0x4e487b71))\n                                                            mstore(4, 0x21)\n                                                            revert(/** @src -1:-1:-1 */ var_refundAddress_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x24)\n                                                        }\n                                                        /// @src 0:28829:28852  \"actualGasCost = prefund\"\n                                                        var_actualGasCost := _17\n                                                        /// @src 0:28892:28898  \"opInfo\"\n                                                        fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                        /// @src 0:28974:28983  \"actualGas\"\n                                                        fun_emitUserOperationEvent(var_opInfo_155_mpos, _17, var_actualGas)\n                                                    }\n                                                    /// @src 0:5888:6078  \"collected = _postExecution(...\"\n                                                    var_collected := var_actualGasCost\n                                                }\n                                                default /// @src 0:5089:6093  \"if (innerRevertCode == INNER_REVERT_LOW_PREFUND) {...\"\n                                                {\n                                                    /// @src 0:5269:5287  \"preGas - gasleft()\"\n                                                    let expr_4 := checked_sub_uint256(expr, /** @src 0:5278:5287  \"gasleft()\" */ gas())\n                                                    /// @src 0:5269:5305  \"preGas - gasleft() + opInfo.preOpGas\"\n                                                    let expr_5 := checked_add_uint256(expr_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:5290:5305  \"opInfo.preOpGas\" */ add(var_opInfo_155_mpos, 128)))\n                                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                    let _18 := mload(/** @src 0:5347:5361  \"opInfo.prefund\" */ add(var_opInfo_155_mpos, /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2))\n                                                    /// @src 0:5397:5403  \"opInfo\"\n                                                    fun_emitPrefundTooLow(var_opInfo_155_mpos)\n                                                    /// @src 0:5475:5484  \"actualGas\"\n                                                    fun_emitUserOperationEvent(var_opInfo_155_mpos, _18, expr_5)\n                                                    /// @src 0:5503:5528  \"collected = actualGasCost\"\n                                                    var_collected := _18\n                                                }\n                                            }\n                                            default /// @src 0:4793:6093  \"if (innerRevertCode == INNER_OUT_OF_GAS) {...\"\n                                            {\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                let _19 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(/** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                mstore(_19, /** @src 0:21861:21902  \"FailedOp(opIndex, \\\"AA24 signature error\\\")\" */ shl(225, 0x1101335b))\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ add(_19, 4), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_opIndex)\n                                                /// @src 0:1474:1487  \"hex\\\"deadaa51\\\"\"\n                                                mstore(add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 36), /** @src 0:3409:3492  \"assembly (\\\"memory-safe\\\") {...\" */ _2)\n                                                /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                                mstore(/** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 68), 15)\n                                                mstore(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ add(/** @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\" */ _19, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 100), /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ \"AA95 out of gas\")\n                                                /// @src 0:5032:5068  \"FailedOp(opIndex, \\\"AA95 out of gas\\\")\"\n                                                revert(_19, /** @src 0:1474:1487  \"hex\\\"deadaa51\\\"\" */ 132)\n                                            }\n                                        }\n                                    }\n                                    /// @ast-id 146 @src 0:2446:2725  \"function _compensate(address payable beneficiary, uint256 amount) internal {...\"\n                                    function fun_compensate(var_beneficiary, var_amount)\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := and(/** @src 0:2539:2564  \"beneficiary != address(0)\" */ var_beneficiary, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        if /** @src 0:2539:2564  \"beneficiary != address(0)\" */ iszero(_1)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        {\n                                            let memPtr := mload(64)\n                                            mstore(memPtr, shl(229, 4594637))\n                                            mstore(add(memPtr, 4), 32)\n                                            mstore(add(memPtr, 36), 24)\n                                            mstore(add(memPtr, 68), \"AA90 invalid beneficiary\")\n                                            revert(memPtr, 100)\n                                        }\n                                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                        let expr_138_component := call(gas(), _1, var_amount, /** @src 0:2562:2563  \"0\" */ 0x00, 0x00, 0x00, 0x00)\n                                        /// @src 0:2622:2657  \"beneficiary.call{value: amount}(\\\"\\\")\"\n                                        pop(extract_returndata())\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        if iszero(expr_138_component)\n                                        {\n                                            let memPtr_1 := mload(64)\n                                            mstore(memPtr_1, shl(229, 4594637))\n                                            mstore(add(memPtr_1, 4), 32)\n                                            mstore(add(memPtr_1, 36), 31)\n                                            mstore(add(memPtr_1, 68), \"AA91 failed send to beneficiary\")\n                                            revert(memPtr_1, 100)\n                                        }\n                                    }\n                                    /// @ast-id 2527 @src 4:1559:1818  \"function _incrementDeposit(address account, uint256 amount) internal returns (uint256) {...\"\n                                    function fun_incrementDeposit(var_account, var_amount) -> var\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(var_account, sub(shl(160, 1), 1)))\n                                        mstore(0x20, /** @src 4:1683:1691  \"deposits\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let dataSlot := keccak256(/** @src 4:1683:1691  \"deposits\" */ 0x00, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 0x40)\n                                        /// @src 4:1730:1751  \"info.deposit + amount\"\n                                        let expr := checked_add_uint256(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sload(/** @src 4:1730:1742  \"info.deposit\" */ dataSlot), /** @src 4:1730:1751  \"info.deposit + amount\" */ var_amount)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        sstore(dataSlot, expr)\n                                        /// @src 4:1795:1811  \"return newAmount\"\n                                        var := expr\n                                    }\n                                    /// @ast-id 2053 @src 0:29763:30294  \"function getUserOpGasPrice(...\"\n                                    function fun_getUserOpGasPrice(var_mUserOp_mpos) -> var_\n                                    {\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := mload(/** @src 0:29922:29942  \"mUserOp.maxFeePerGas\" */ add(var_mUserOp_mpos, 256))\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := mload(/** @src 0:29987:30015  \"mUserOp.maxPriorityFeePerGas\" */ add(var_mUserOp_mpos, 288))\n                                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                        if /** @src 0:30033:30069  \"maxFeePerGas == maxPriorityFeePerGas\" */ eq(_1, _2)\n                                        /// @src 0:30029:30202  \"if (maxFeePerGas == maxPriorityFeePerGas) {...\"\n                                        {\n                                            /// @src 0:30168:30187  \"return maxFeePerGas\"\n                                            var_ := _1\n                                            leave\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _3 := add(/** @src 0:30240:30276  \"maxPriorityFeePerGas + block.basefee\" */ _2, /** @src 0:30263:30276  \"block.basefee\" */ basefee())\n                                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                                        let expr := /** @src -1:-1:-1 */ 0\n                                        /// @src 1:3338:3351  \"a < b ? a : b\"\n                                        switch /** @src 1:3338:3343  \"a < b\" */ lt(_1, _3)\n                                        case /** @src 1:3338:3351  \"a < b ? a : b\" */ 0 { expr := _3 }\n                                        default { expr := _1 }\n                                        /// @src 0:30215:30277  \"return min(maxFeePerGas, maxPriorityFeePerGas + block.basefee)\"\n                                        var_ := expr\n                                    }\n                                    /// @ast-id 358 @src 0:6115:6505  \"function emitUserOperationEvent(UserOpInfo memory opInfo, bool success, uint256 actualGasCost, uint256 actualGas) internal virtual {...\"\n                                    function fun_emitUserOperationEvent(var_opInfo_mpos, var_actualGasCost, var_actualGas)\n                                    {\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _1 := mload(/** @src 0:6293:6310  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                        /// @src 0:6324:6338  \"opInfo.mUserOp\"\n                                        let _mpos := mload(var_opInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _2 := sub(shl(160, 1), 1)\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6324:6345  \"opInfo.mUserOp.sender\" */ _mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                        let cleaned_1 := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6359:6383  \"opInfo.mUserOp.paymaster\" */ add(_mpos, 224)), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2)\n                                        let _3 := mload(/** @src 0:6397:6417  \"opInfo.mUserOp.nonce\" */ add(_mpos, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32))\n                                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                        let _4 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_4, _3)\n                                        mstore(add(_4, /** @src 0:6293:6310  \"opInfo.userOpHash\" */ 32), /** @src -1:-1:-1 */ 0)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(_4, 64), var_actualGasCost)\n                                        mstore(add(_4, 96), var_actualGas)\n                                        /// @src 0:6261:6498  \"UserOperationEvent(...\"\n                                        log4(_4, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 128, /** @src 0:6261:6498  \"UserOperationEvent(...\" */ 0x49628fd1471006c1482da88028e9ce4dbb080b815c9b0344d39e5a8e6ec1419f, _1, cleaned, cleaned_1)\n                                    }\n                                    /// @ast-id 376 @src 0:6511:6739  \"function emitPrefundTooLow(UserOpInfo memory opInfo) internal virtual {...\"\n                                    function fun_emitPrefundTooLow(var_opInfo_mpos)\n                                    {\n                                        /// @src 0:1543:1547  \"2048\"\n                                        let _1 := mload(/** @src 0:6636:6653  \"opInfo.userOpHash\" */ add(var_opInfo_mpos, 32))\n                                        /// @src 0:6667:6681  \"opInfo.mUserOp\"\n                                        let _665_mpos := mload(var_opInfo_mpos)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let cleaned := and(/** @src 0:1297:1302  \"10000\" */ mload(/** @src 0:6667:6688  \"opInfo.mUserOp.sender\" */ _665_mpos), /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _2 := mload(/** @src 0:6702:6722  \"opInfo.mUserOp.nonce\" */ add(_665_mpos, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32))\n                                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                        let _3 := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ mload(64)\n                                        mstore(_3, _2)\n                                        /// @src 0:6596:6732  \"UserOperationPrefundTooLow(...\"\n                                        log3(_3, /** @src 0:6636:6653  \"opInfo.userOpHash\" */ 32, /** @src 0:6596:6732  \"UserOperationPrefundTooLow(...\" */ 0x67b4fa9642f42120bf031f3051d1824b0fe25627945b27b8a6a65d5761d5482e, _1, cleaned)\n                                    }\n                                    /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                    function abi_encode_struct_PackedUserOperation_calldata_bytes32_uint256(headStart, value0, value1, value2) -> tail\n                                    {\n                                        mstore(headStart, 96)\n                                        tail := abi_encode_struct_PackedUserOperation_calldata(value0, add(headStart, 96))\n                                        mstore(add(headStart, 32), value1)\n                                        mstore(add(headStart, 64), value2)\n                                    }\n                                    /// @ast-id 1622 @src 0:22951:23437  \"function _getValidationData(...\"\n                                    function fun_getValidationData(var_validationData) -> var_aggregator, var_outOfTimeRange\n                                    {\n                                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                        if /** @src 0:23095:23114  \"validationData == 0\" */ iszero(var_validationData)\n                                        /// @src 0:23091:23167  \"if (validationData == 0) {...\"\n                                        {\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            var_aggregator := /** @src 0:23113:23114  \"0\" */ 0x00\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            var_outOfTimeRange := /** @src 0:23113:23114  \"0\" */ 0x00\n                                            /// @src 0:23130:23156  \"return (address(0), false)\"\n                                            leave\n                                        }\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let memPtr := mload(64)\n                                        finalize_allocation_26350(memPtr)\n                                        mstore(memPtr, /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(memPtr, 32), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        mstore(add(memPtr, 64), /** @src 0:23113:23114  \"0\" */ 0x00)\n                                        /// @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\"\n                                        let _1 := and(/** @src 1:1507:1530  \"uint160(validationData)\" */ var_validationData, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ sub(shl(160, 1), 1))\n                                        let _2 := 0xffffffffffff\n                                        /// @src 1:1537:1586  \"uint48 validUntil = uint48(validationData >> 160)\"\n                                        let var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ and(shr(/** @src 1:1582:1585  \"160\" */ 0xa0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData), _2)\n                                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                        if /** @src 1:1596:1611  \"validUntil == 0\" */ iszero(/** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validUntil)\n                                        /// @src 1:1592:1659  \"if (validUntil == 0) {...\"\n                                        {\n                                            /// @src 1:1623:1652  \"validUntil = type(uint48).max\"\n                                            var_validUntil := /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ _2\n                                        }\n                                        let result := shr(/** @src 1:1710:1718  \"48 + 160\" */ 0xd0, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ var_validationData)\n                                        let memPtr_1 := mload(64)\n                                        finalize_allocation_26350(memPtr_1)\n                                        mstore(memPtr_1, _1)\n                                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 32), result)\n                                        let _3 := and(var_validUntil, _2)\n                                        mstore(/** @src 1:1733:1783  \"ValidationData(aggregator, validAfter, validUntil)\" */ add(memPtr_1, /** @src 0:789:31134  \"contract EntryPoint is IEntryPoint, StakeManager, NonceManager, ReentrancyGuard, ERC165 {...\" */ 64), _3)\n                                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        let expr := /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ gt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23322:23355  \"block.timestamp > data.validUntil\" */ _3)\n                                        /// @src 0:23322:23392  \"block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        if iszero(expr)\n                                        {\n                                            expr := /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ lt(/** @src 0:23322:23337  \"block.timestamp\" */ timestamp(), /** @src 0:23359:23392  \"block.timestamp < data.validAfter\" */ result)\n                                        }\n                                        /// @src 0:23305:23392  \"outOfTimeRange = block.timestamp > data.validUntil || block.timestamp < data.validAfter\"\n                                        var_outOfTimeRange := expr\n                                        /// @src 0:23402:23430  \"aggregator = data.aggregator\"\n                                        var_aggregator := _1\n                                    }\n                                }\n                                data \".metadata\" hex\"a164736f6c6343000818000a\"\n                            }\n                            /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                            object \"SenderCreator_2414\" {\n                                code {\n                                    {\n                                        /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                        let _1 := memoryguard(0x80)\n                                        mstore(64, _1)\n                                        if callvalue() { revert(0, 0) }\n                                        let _2 := datasize(\"SenderCreator_2414_deployed\")\n                                        codecopy(_1, dataoffset(\"SenderCreator_2414_deployed\"), _2)\n                                        return(_1, _2)\n                                    }\n                                }\n                                /// @use-src 3:\"lib/account-abstraction/contracts/core/SenderCreator.sol\"\n                                object \"SenderCreator_2414_deployed\" {\n                                    code {\n                                        {\n                                            /// @src 3:205:1231  \"contract SenderCreator {...\"\n                                            let _1 := memoryguard(0x80)\n                                            if iszero(lt(calldatasize(), 4))\n                                            {\n                                                let _2 := 0\n                                                if eq(0x570e1a36, shr(224, calldataload(_2)))\n                                                {\n                                                    if callvalue() { revert(_2, _2) }\n                                                    if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                                                    let offset := calldataload(4)\n                                                    let _3 := 0xffffffffffffffff\n                                                    if gt(offset, _3) { revert(_2, _2) }\n                                                    if iszero(slt(add(offset, 35), calldatasize())) { revert(_2, _2) }\n                                                    let length := calldataload(add(4, offset))\n                                                    if gt(length, _3) { revert(_2, _2) }\n                                                    if gt(add(add(offset, length), 36), calldatasize()) { revert(_2, _2) }\n                                                    let var_sender := _2\n                                                    if gt(/** @src 3:726:728  \"20\" */ 0x14, /** @src 3:205:1231  \"contract SenderCreator {...\" */ length) { revert(_2, _2) }\n                                                    let lengthOut := add(length, not(19))\n                                                    if gt(lengthOut, _3)\n                                                    {\n                                                        mstore(_2, shl(224, 0x4e487b71))\n                                                        mstore(4, 0x41)\n                                                        revert(_2, 36)\n                                                    }\n                                                    let _4 := not(31)\n                                                    let newFreePtr := add(_1, and(add(and(add(length, 11), _4), 63), _4))\n                                                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                                    {\n                                                        mstore(_2, shl(224, 0x4e487b71))\n                                                        mstore(4, 0x41)\n                                                        revert(_2, 36)\n                                                    }\n                                                    mstore(64, newFreePtr)\n                                                    mstore(_1, lengthOut)\n                                                    let dst := add(_1, 32)\n                                                    calldatacopy(dst, add(offset, 56), lengthOut)\n                                                    mstore(add(add(_1, length), 12), _2)\n                                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    let var_success := call(gas(), /** @src 3:205:1231  \"contract SenderCreator {...\" */ shr(96, calldataload(add(offset, 36))), _2, /** @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\" */ dst, mload(_1), /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2, 32)\n                                                    /// @src 3:863:1156  \"assembly (\\\"memory-safe\\\") {...\"\n                                                    var_sender := mload(/** @src 3:205:1231  \"contract SenderCreator {...\" */ _2)\n                                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                                    if /** @src 3:1169:1177  \"!success\" */ iszero(var_success)\n                                                    /// @src 3:1165:1223  \"if (!success) {...\"\n                                                    {\n                                                        /// @src 3:1193:1212  \"sender = address(0)\"\n                                                        var_sender := /** @src 3:205:1231  \"contract SenderCreator {...\" */ _2\n                                                    }\n                                                    let memPos := mload(64)\n                                                    mstore(memPos, and(var_sender, sub(shl(160, 1), 1)))\n                                                    return(memPos, 32)\n                                                }\n                                            }\n                                            revert(0, 0)\n                                        }\n                                    }\n                                    data \".metadata\" hex\"a164736f6c6343000818000a\"\n                                }\n                            }\n                        }\n                        /// @use-src 64:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 67:\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\", 68:\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                        object \"ERC20Mock_47815\" {\n                            code {\n                                {\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _1 := memoryguard(0x80)\n                                    if callvalue() { revert(0, 0) }\n                                    let _2 := 64\n                                    let newFreePtr := add(_1, _2)\n                                    let _3 := sub(shl(64, 1), 1)\n                                    if or(gt(newFreePtr, _3), lt(newFreePtr, _1))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    mstore(_2, newFreePtr)\n                                    mstore(_1, 9)\n                                    let _4 := 32\n                                    mstore(add(_1, _4), \"ERC20Mock\")\n                                    let memPtr := mload(_2)\n                                    let newFreePtr_1 := add(memPtr, _2)\n                                    if or(gt(newFreePtr_1, _3), lt(newFreePtr_1, memPtr))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(4, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    mstore(_2, newFreePtr_1)\n                                    let _5 := 4\n                                    mstore(memPtr, _5)\n                                    mstore(add(memPtr, _4), \"E20M\")\n                                    let newLen := mload(_1)\n                                    if gt(newLen, _3)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    /// @src 66:1962:1975  \"_name = name_\"\n                                    let _6 := 0x03\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _7 := sload(/** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let length := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let _8 := 1\n                                    length := shr(_8, _7)\n                                    let outOfPlaceEncoding := and(_7, _8)\n                                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                    if eq(outOfPlaceEncoding, lt(length, _4))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x22)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    let _9 := 31\n                                    if gt(length, _9)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let data := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let deleteStart := add(data, shr(5, add(newLen, _9)))\n                                        if lt(newLen, _4) { deleteStart := data }\n                                        let _10 := add(data, shr(5, add(length, _9)))\n                                        let start := deleteStart\n                                        for { } lt(start, _10) { start := add(start, _8) }\n                                        {\n                                            sstore(start, /** @src -1:-1:-1 */ 0)\n                                        }\n                                    }\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let srcOffset := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    srcOffset := _4\n                                    switch gt(newLen, _9)\n                                    case 1 {\n                                        let loopEnd := and(newLen, not(31))\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 66:1962:1975  \"_name = name_\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let dstPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let i := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        for { } lt(i, loopEnd) { i := add(i, _4) }\n                                        {\n                                            sstore(dstPtr, mload(add(_1, srcOffset)))\n                                            dstPtr := add(dstPtr, _8)\n                                            srcOffset := add(srcOffset, _4)\n                                        }\n                                        if lt(loopEnd, newLen)\n                                        {\n                                            let lastValue := mload(add(_1, srcOffset))\n                                            sstore(dstPtr, and(lastValue, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), 248), not(0)))))\n                                        }\n                                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ add(shl(_8, newLen), _8))\n                                    }\n                                    default {\n                                        let value := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        if newLen\n                                        {\n                                            value := mload(add(_1, srcOffset))\n                                        }\n                                        sstore(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ or(and(value, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen), not(0)))), shl(_8, newLen)))\n                                    }\n                                    let newLen_1 := mload(memPtr)\n                                    if gt(newLen_1, _3)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x41)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    let _11 := sload(_5)\n                                    let length_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    length_1 := shr(_8, _11)\n                                    let outOfPlaceEncoding_1 := and(_11, _8)\n                                    if iszero(outOfPlaceEncoding_1)\n                                    {\n                                        length_1 := and(length_1, 0x7f)\n                                    }\n                                    if eq(outOfPlaceEncoding_1, lt(length_1, _4))\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ shl(224, 0x4e487b71))\n                                        mstore(_5, 0x22)\n                                        revert(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x24)\n                                    }\n                                    if gt(length_1, _9)\n                                    {\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                        let data_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _9)))\n                                        if lt(newLen_1, _4) { deleteStart_1 := data_1 }\n                                        let _12 := add(data_1, shr(5, add(length_1, _9)))\n                                        let start_1 := deleteStart_1\n                                        for { } lt(start_1, _12) { start_1 := add(start_1, _8) }\n                                        {\n                                            sstore(start_1, /** @src -1:-1:-1 */ 0)\n                                        }\n                                    }\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    let srcOffset_1 := /** @src -1:-1:-1 */ 0\n                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                    srcOffset_1 := _4\n                                    switch gt(newLen_1, _9)\n                                    case 1 {\n                                        let loopEnd_1 := and(newLen_1, not(31))\n                                        mstore(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _5)\n                                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let i_1 := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _4) }\n                                        {\n                                            sstore(dstPtr_1, mload(add(memPtr, srcOffset_1)))\n                                            dstPtr_1 := add(dstPtr_1, _8)\n                                            srcOffset_1 := add(srcOffset_1, _4)\n                                        }\n                                        if lt(loopEnd_1, newLen_1)\n                                        {\n                                            let lastValue_1 := mload(add(memPtr, srcOffset_1))\n                                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), 248), not(0)))))\n                                        }\n                                        sstore(_5, add(shl(_8, newLen_1), _8))\n                                    }\n                                    default {\n                                        let value_1 := /** @src -1:-1:-1 */ 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        if newLen_1\n                                        {\n                                            value_1 := mload(add(memPtr, srcOffset_1))\n                                        }\n                                        sstore(_5, or(and(value_1, not(shr(shl(/** @src 66:1962:1975  \"_name = name_\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ newLen_1), not(0)))), shl(_8, newLen_1)))\n                                    }\n                                    let _13 := mload(_2)\n                                    let _14 := datasize(\"ERC20Mock_47815_deployed\")\n                                    codecopy(_13, dataoffset(\"ERC20Mock_47815_deployed\"), _14)\n                                    return(_13, _14)\n                                }\n                            }\n                            /// @use-src 65:\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\", 66:\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\", 72:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\"\n                            object \"ERC20Mock_47815_deployed\" {\n                                code {\n                                    {\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _1 := memoryguard(0x80)\n                                        let _2 := 64\n                                        mstore(_2, _1)\n                                        let _3 := 4\n                                        if iszero(lt(calldatasize(), _3))\n                                        {\n                                            let _4 := 0\n                                            switch shr(224, calldataload(_4))\n                                            case 0x06fdde03 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let ret := _4\n                                                let slotValue := sload(/** @src 66:2151:2156  \"_name\" */ 0x03)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let length := _4\n                                                let _5 := 1\n                                                length := shr(1, slotValue)\n                                                let outOfPlaceEncoding := and(slotValue, 1)\n                                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                                let _6 := 32\n                                                if eq(outOfPlaceEncoding, lt(length, _6))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x22)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_1, length)\n                                                switch outOfPlaceEncoding\n                                                case 0 {\n                                                    mstore(add(_1, _6), and(slotValue, not(255)))\n                                                    ret := add(add(_1, shl(5, iszero(iszero(length)))), _6)\n                                                }\n                                                case 1 {\n                                                    mstore(_4, /** @src 66:2151:2156  \"_name\" */ 0x03)\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    let dataPos := 87903029871075914254377627908054574944891091886930582284385770809450030037083\n                                                    let i := _4\n                                                    for { } lt(i, length) { i := add(i, _6) }\n                                                    {\n                                                        mstore(add(add(_1, i), _6), sload(dataPos))\n                                                        dataPos := add(dataPos, _5)\n                                                    }\n                                                    ret := add(add(_1, i), _6)\n                                                }\n                                                let newFreePtr := add(_1, and(add(sub(ret, _1), 31), not(31)))\n                                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x41)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_2, newFreePtr)\n                                                return(newFreePtr, sub(abi_encode_string(newFreePtr, _1), newFreePtr))\n                                            }\n                                            case 0x095ea7b3 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0 := abi_decode_address_3706()\n                                                let _7 := calldataload(36)\n                                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                {\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    mstore(_8, shl(224, 0xe602df05))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                    revert(_8, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                let _9 := and(/** @src 66:10159:10180  \"spender == address(0)\" */ value0, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _9)\n                                                /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                {\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    let _10 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    mstore(_10, shl(225, 0x4a1406b1))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                    revert(_10, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(0x20, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let _11 := keccak256(_4, _2)\n                                                mstore(_4, _9)\n                                                mstore(0x20, _11)\n                                                sstore(keccak256(_4, _2), _7)\n                                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                                let _12 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_12, _7)\n                                                /// @src 66:10333:10364  \"Approval(owner, spender, value)\"\n                                                log3(_12, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10333:10364  \"Approval(owner, spender, value)\" */ _9)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos := mload(_2)\n                                                mstore(memPos, /** @src 66:9105:9109  \"true\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(memPos, 0x20)\n                                            }\n                                            case 0x18160ddd {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let _13 := sload(/** @src 66:3222:3234  \"_totalSupply\" */ 0x02)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos_1 := mload(_2)\n                                                mstore(memPos_1, _13)\n                                                return(memPos_1, 32)\n                                            }\n                                            case 0x23b872dd {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), 96) { revert(_4, _4) }\n                                                let value0_1 := abi_decode_address_3706()\n                                                let value1 := abi_decode_address()\n                                                let value := calldataload(68)\n                                                let _14 := and(value0_1, sub(shl(160, 1), 1))\n                                                mstore(_4, _14)\n                                                mstore(32, 1)\n                                                let _15 := keccak256(_4, _2)\n                                                mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(32, _15)\n                                                let _16 := sload(keccak256(_4, _2))\n                                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                                if /** @src 66:10828:10865  \"currentAllowance != type(uint256).max\" */ iszero(eq(_16, /** @src 66:10848:10865  \"type(uint256).max\" */ not(0)))\n                                                /// @src 66:10824:11134  \"if (currentAllowance != type(uint256).max) {...\"\n                                                {\n                                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                                    if /** @src 66:10885:10909  \"currentAllowance < value\" */ lt(_16, value)\n                                                    /// @src 66:10881:11011  \"if (currentAllowance < value) {...\"\n                                                    {\n                                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                        let _17 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\"\n                                                        mstore(_17, shl(225, 0x7dc7a0d9))\n                                                        revert(_17, sub(abi_encode_address_uint256_uint256(add(_17, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:10936:10996  \"ERC20InsufficientAllowance(spender, currentAllowance, value)\" */ _16, value), _17))\n                                                    }\n                                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                    if /** @src 66:10061:10080  \"owner == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _14)\n                                                    /// @src 66:10057:10146  \"if (owner == address(0)) {...\"\n                                                    {\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        let _18 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        mstore(_18, shl(224, 0xe602df05))\n                                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                        mstore(/** @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\" */ add(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                        /// @src 66:10103:10135  \"ERC20InvalidApprover(address(0))\"\n                                                        revert(_18, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                    }\n                                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                    if /** @src 66:10159:10180  \"spender == address(0)\" */ iszero(/** @src 72:735:745  \"msg.sender\" */ caller())\n                                                    /// @src 66:10155:10245  \"if (spender == address(0)) {...\"\n                                                    {\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        let _19 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        mstore(_19, shl(225, 0x4a1406b1))\n                                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                        mstore(/** @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\" */ add(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                        /// @src 66:10203:10234  \"ERC20InvalidSpender(address(0))\"\n                                                        revert(_19, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                    }\n                                                    mstore(_4, _14)\n                                                    mstore(32, 1)\n                                                    let _20 := keccak256(_4, _2)\n                                                    mstore(_4, /** @src 72:735:745  \"msg.sender\" */ caller())\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(32, _20)\n                                                    sstore(keccak256(_4, _2), sub(/** @src 66:11077:11101  \"currentAllowance - value\" */ _16, value))\n                                                }\n                                                /// @src 66:5249:5254  \"value\"\n                                                fun_transfer(value0_1, value1, value)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let memPos_2 := mload(_2)\n                                                mstore(memPos_2, 1)\n                                                return(memPos_2, 32)\n                                            }\n                                            case 0x313ce567 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let memPos_3 := mload(_2)\n                                                mstore(memPos_3, /** @src 66:3075:3077  \"18\" */ 0x12)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(memPos_3, 32)\n                                            }\n                                            case 0x40c10f19 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_2 := abi_decode_address_3706()\n                                                let value_1 := calldataload(36)\n                                                let _21 := and(/** @src 66:7791:7812  \"account == address(0)\" */ value0_2, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                                if /** @src 66:7791:7812  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _21)\n                                                /// @src 66:7787:7878  \"if (account == address(0)) {...\"\n                                                {\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    let _22 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    mstore(_22, shl(224, 0xec442f05))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ add(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\"\n                                                    revert(_22, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                let _23 := sload(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let sum := add(_23, value_1)\n                                                if gt(_23, sum)\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x11)\n                                                    revert(_4, 36)\n                                                }\n                                                sstore(/** @src 66:6496:6517  \"_totalSupply += value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sum)\n                                                mstore(_4, _21)\n                                                mstore(0x20, _4)\n                                                let dataSlot := keccak256(_4, _2)\n                                                sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_1))\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                let _24 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_24, value_1)\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                log3(_24, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ _21)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                return(_4, _4)\n                                            }\n                                            case 0x70a08231 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                                mstore(_4, and(abi_decode_address_3706(), sub(shl(160, 1), 1)))\n                                                mstore(32, _4)\n                                                let _25 := sload(keccak256(_4, _2))\n                                                let memPos_4 := mload(_2)\n                                                mstore(memPos_4, _25)\n                                                return(memPos_4, 32)\n                                            }\n                                            case 0x95d89b41 {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                                let memPtr := mload(_2)\n                                                let ret_1 := _4\n                                                let slotValue_1 := sload(_3)\n                                                let length_1 := _4\n                                                let _26 := 1\n                                                length_1 := shr(1, slotValue_1)\n                                                let outOfPlaceEncoding_1 := and(slotValue_1, 1)\n                                                if iszero(outOfPlaceEncoding_1)\n                                                {\n                                                    length_1 := and(length_1, 0x7f)\n                                                }\n                                                let _27 := 32\n                                                if eq(outOfPlaceEncoding_1, lt(length_1, _27))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x22)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(memPtr, length_1)\n                                                switch outOfPlaceEncoding_1\n                                                case 0 {\n                                                    mstore(add(memPtr, _27), and(slotValue_1, not(255)))\n                                                    ret_1 := add(add(memPtr, shl(5, iszero(iszero(length_1)))), _27)\n                                                }\n                                                case 1 {\n                                                    mstore(_4, _3)\n                                                    let dataPos_1 := 62514009886607029107290561805838585334079798074568712924583230797734656856475\n                                                    let i_1 := _4\n                                                    for { } lt(i_1, length_1) { i_1 := add(i_1, _27) }\n                                                    {\n                                                        mstore(add(add(memPtr, i_1), _27), sload(dataPos_1))\n                                                        dataPos_1 := add(dataPos_1, _26)\n                                                    }\n                                                    ret_1 := add(add(memPtr, i_1), _27)\n                                                }\n                                                let newFreePtr_1 := add(memPtr, and(add(sub(ret_1, memPtr), 31), not(31)))\n                                                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr))\n                                                {\n                                                    mstore(_4, shl(224, 0x4e487b71))\n                                                    mstore(_3, 0x41)\n                                                    revert(_4, 0x24)\n                                                }\n                                                mstore(_2, newFreePtr_1)\n                                                return(newFreePtr_1, sub(abi_encode_string(newFreePtr_1, memPtr), newFreePtr_1))\n                                            }\n                                            case 0x9dc29fac {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_3 := abi_decode_address_3706()\n                                                let value_2 := calldataload(36)\n                                                let _28 := and(/** @src 66:8317:8338  \"account == address(0)\" */ value0_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(shl(160, 1), 1))\n                                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                                if /** @src 66:8317:8338  \"account == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _28)\n                                                /// @src 66:8313:8402  \"if (account == address(0)) {...\"\n                                                {\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    let _29 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    mstore(_29, shl(225, 0x4b637e8f))\n                                                    /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                    mstore(/** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ add(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), _4)\n                                                    /// @src 66:8361:8391  \"ERC20InvalidSender(address(0))\"\n                                                    revert(_29, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                                }\n                                                mstore(_4, _28)\n                                                mstore(0x20, _4)\n                                                let _30 := sload(keccak256(_4, _2))\n                                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                                if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_30, value_2)\n                                                /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                                {\n                                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                                    let _31 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                    /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                                    mstore(_31, shl(226, 0x391434e3))\n                                                    revert(_31, sub(abi_encode_address_uint256_uint256(add(_31, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _3), /** @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\" */ value0_3, _30, value_2), _31))\n                                                }\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                mstore(_4, _28)\n                                                mstore(0x20, _4)\n                                                sstore(keccak256(_4, _2), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _30, value_2))\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                sstore(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ sub(sload(/** @src 66:7073:7094  \"_totalSupply -= value\" */ 0x02), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ value_2))\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                let _32 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(_2)\n                                                mstore(_32, value_2)\n                                                /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                                log3(_32, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _28, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                                return(_4, _4)\n                                            }\n                                            case 0xa9059cbb {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_4 := abi_decode_address_3706()\n                                                /// @src 66:3754:3759  \"value\"\n                                                fun_transfer(/** @src 72:735:745  \"msg.sender\" */ caller(), /** @src 66:3754:3759  \"value\" */ value0_4, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ calldataload(36))\n                                                let memPos_5 := mload(_2)\n                                                mstore(memPos_5, 1)\n                                                return(memPos_5, 32)\n                                            }\n                                            case 0xdd62ed3e {\n                                                if callvalue() { revert(_4, _4) }\n                                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                                let value0_5 := abi_decode_address_3706()\n                                                let value1_1 := abi_decode_address()\n                                                let _33 := sub(shl(160, 1), 1)\n                                                mstore(_4, and(value0_5, _33))\n                                                mstore(32, /** @src 66:3952:3963  \"_allowances\" */ 0x01)\n                                                /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                                let _34 := keccak256(_4, _2)\n                                                mstore(_4, and(value1_1, _33))\n                                                mstore(32, _34)\n                                                let _35 := sload(keccak256(_4, _2))\n                                                let memPos_6 := mload(_2)\n                                                mstore(memPos_6, _35)\n                                                return(memPos_6, 32)\n                                            }\n                                        }\n                                        revert(0, 0)\n                                    }\n                                    function abi_encode_string(headStart, value0) -> tail\n                                    {\n                                        let _1 := 32\n                                        mstore(headStart, 32)\n                                        let length := mload(value0)\n                                        mstore(add(headStart, 32), length)\n                                        let i := 0\n                                        for { } lt(i, length) { i := add(i, _1) }\n                                        {\n                                            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                                        }\n                                        mstore(add(add(headStart, length), 64), 0)\n                                        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n                                    }\n                                    function abi_decode_address_3706() -> value\n                                    {\n                                        value := calldataload(4)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_decode_address() -> value\n                                    {\n                                        value := calldataload(36)\n                                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                                    }\n                                    function abi_encode_address_uint256_uint256(headStart, value0, value1, value2) -> tail\n                                    {\n                                        tail := add(headStart, 96)\n                                        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                                        mstore(add(headStart, 32), value1)\n                                        mstore(add(headStart, 64), value2)\n                                    }\n                                    /// @ast-id 48060 @src 66:5656:5956  \"function _transfer(address from, address to, uint256 value) internal {...\"\n                                    function fun_transfer(var_from, var_to, var_value)\n                                    {\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _1 := sub(shl(160, 1), 1)\n                                        let _2 := and(/** @src 66:5739:5757  \"from == address(0)\" */ var_from, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                        if /** @src 66:5739:5757  \"from == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        /// @src 66:5735:5821  \"if (from == address(0)) {...\"\n                                        {\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            let _3 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            mstore(_3, /** @src 66:8361:8391  \"ERC20InvalidSender(address(0))\" */ shl(225, 0x4b637e8f))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:5780:5810  \"ERC20InvalidSender(address(0))\" */ add(_3, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                            /// @src 66:5780:5810  \"ERC20InvalidSender(address(0))\"\n                                            revert(_3, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        let _4 := and(/** @src 66:5834:5850  \"to == address(0)\" */ var_to, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _1)\n                                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                        if /** @src 66:5834:5850  \"to == address(0)\" */ iszero(/** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        /// @src 66:5830:5916  \"if (to == address(0)) {...\"\n                                        {\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            let _5 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(64)\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            mstore(_5, /** @src 66:7835:7867  \"ERC20InvalidReceiver(address(0))\" */ shl(224, 0xec442f05))\n                                            /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                            mstore(/** @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\" */ add(_5, 4), /** @src 66:5755:5756  \"0\" */ 0x00)\n                                            /// @src 66:5873:5905  \"ERC20InvalidReceiver(address(0))\"\n                                            revert(_5, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 36)\n                                        }\n                                        /// @src 66:6356:6896  \"if (from == address(0)) {...\"\n                                        let _6 := 0\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        let _7 := sload(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40))\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        if /** @src 66:6603:6622  \"fromBalance < value\" */ lt(_7, var_value)\n                                        /// @src 66:6599:6714  \"if (fromBalance < value) {...\"\n                                        {\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            let _8 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                            /// @src 66:6649:6699  \"ERC20InsufficientBalance(from, fromBalance, value)\"\n                                            mstore(_8, shl(226, 0x391434e3))\n                                            revert(_8, sub(abi_encode_address_uint256_uint256(add(_8, 4), var_from, _7, var_value), _8))\n                                        }\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _2)\n                                        mstore(0x20, /** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6)\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        sstore(keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40), sub(/** @src 66:6852:6871  \"fromBalance - value\" */ _7, var_value))\n                                        /// @src 65:110:391  \"contract ERC20Mock is ERC20 {...\"\n                                        mstore(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ _4)\n                                        let dataSlot := keccak256(/** @src 66:6356:6896  \"if (from == address(0)) {...\" */ _6, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x40)\n                                        sstore(dataSlot, add(sload(/** @src 66:7284:7306  \"_balances[to] += value\" */ dataSlot), /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ var_value))\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        let _9 := /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ mload(0x40)\n                                        mstore(_9, var_value)\n                                        /// @src 66:7346:7371  \"Transfer(from, to, value)\"\n                                        log3(_9, /** @src 65:110:391  \"contract ERC20Mock is ERC20 {...\" */ 0x20, /** @src 66:7346:7371  \"Transfer(from, to, value)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _2, _4)\n                                    }\n                                }\n                                data \".metadata\" hex\"a164736f6c6343000818000a\"\n                            }\n                        }\n                        data \".metadata\" hex\"a164736f6c6343000818000a\"\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000818000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"010008d174caf8aabd2eb5afdbc6beeca3854ef3c941416b1282c8ae5716c182","factoryDependencies":{"010000b5a7b507eaac141149135719e54b922c28353f4cc5a6711bbfbcac556f":"script/DeployMinimal.s.sol:DeployMinimal","010001191bd0c20330815eebb1830a5ce2fc61c5966f725b42e03468f37140f6":"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol:ERC20Mock","0100044beb3fdc38e616d470b3c32b036a5315a584937af8b009afae9ab43188":"script/SendPackedUserOp.s.sol:SendPackedUserOp"},"id":86}